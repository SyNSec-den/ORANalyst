// Code generated by go run decgen.go -output dec_helpers.go; DO NOT EDIT.

// Copyright 2014 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

//line /usr/local/go/src/encoding/gob/dec_helpers.go:7
package gob

//line /usr/local/go/src/encoding/gob/dec_helpers.go:7
import (
//line /usr/local/go/src/encoding/gob/dec_helpers.go:7
	_go_fuzz_dep_ "go-fuzz-dep"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:7
)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:7
import (
//line /usr/local/go/src/encoding/gob/dec_helpers.go:7
	_atomic_ "sync/atomic"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:7
)

import (
	"math"
	"reflect"
)

var decArrayHelper = map[reflect.Kind]decHelper{
	reflect.Bool:		decBoolArray,
	reflect.Complex64:	decComplex64Array,
	reflect.Complex128:	decComplex128Array,
	reflect.Float32:	decFloat32Array,
	reflect.Float64:	decFloat64Array,
	reflect.Int:		decIntArray,
	reflect.Int16:		decInt16Array,
	reflect.Int32:		decInt32Array,
	reflect.Int64:		decInt64Array,
	reflect.Int8:		decInt8Array,
	reflect.String:		decStringArray,
	reflect.Uint:		decUintArray,
	reflect.Uint16:		decUint16Array,
	reflect.Uint32:		decUint32Array,
	reflect.Uint64:		decUint64Array,
	reflect.Uintptr:	decUintptrArray,
}

var decSliceHelper = map[reflect.Kind]decHelper{
	reflect.Bool:		decBoolSlice,
	reflect.Complex64:	decComplex64Slice,
	reflect.Complex128:	decComplex128Slice,
	reflect.Float32:	decFloat32Slice,
	reflect.Float64:	decFloat64Slice,
	reflect.Int:		decIntSlice,
	reflect.Int16:		decInt16Slice,
	reflect.Int32:		decInt32Slice,
	reflect.Int64:		decInt64Slice,
	reflect.Int8:		decInt8Slice,
	reflect.String:		decStringSlice,
	reflect.Uint:		decUintSlice,
	reflect.Uint16:		decUint16Slice,
	reflect.Uint32:		decUint32Slice,
	reflect.Uint64:		decUint64Slice,
	reflect.Uintptr:	decUintptrSlice,
}

func decBoolArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:52
	_go_fuzz_dep_.CoverTab[83738]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:54
		_go_fuzz_dep_.CoverTab[83740]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:55
		// _ = "end of CoverTab[83740]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:56
		_go_fuzz_dep_.CoverTab[83741]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:56
		// _ = "end of CoverTab[83741]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:56
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:56
	// _ = "end of CoverTab[83738]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:56
	_go_fuzz_dep_.CoverTab[83739]++
								return decBoolSlice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:57
	// _ = "end of CoverTab[83739]"
}

func decBoolSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:60
	_go_fuzz_dep_.CoverTab[83742]++
								slice, ok := v.Interface().([]bool)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:62
		_go_fuzz_dep_.CoverTab[83745]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:64
		// _ = "end of CoverTab[83745]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:65
		_go_fuzz_dep_.CoverTab[83746]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:65
		// _ = "end of CoverTab[83746]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:65
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:65
	// _ = "end of CoverTab[83742]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:65
	_go_fuzz_dep_.CoverTab[83743]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:66
		_go_fuzz_dep_.CoverTab[83747]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:67
			_go_fuzz_dep_.CoverTab[83750]++
										errorf("decoding bool array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:68
			// _ = "end of CoverTab[83750]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:69
			_go_fuzz_dep_.CoverTab[83751]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:69
			// _ = "end of CoverTab[83751]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:69
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:69
		// _ = "end of CoverTab[83747]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:69
		_go_fuzz_dep_.CoverTab[83748]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:70
			_go_fuzz_dep_.CoverTab[83752]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:72
			// _ = "end of CoverTab[83752]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:73
			_go_fuzz_dep_.CoverTab[83753]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:73
			// _ = "end of CoverTab[83753]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:73
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:73
		// _ = "end of CoverTab[83748]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:73
		_go_fuzz_dep_.CoverTab[83749]++
									slice[i] = state.decodeUint() != 0
//line /usr/local/go/src/encoding/gob/dec_helpers.go:74
		// _ = "end of CoverTab[83749]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:75
	// _ = "end of CoverTab[83743]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:75
	_go_fuzz_dep_.CoverTab[83744]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:76
	// _ = "end of CoverTab[83744]"
}

func decComplex64Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:79
	_go_fuzz_dep_.CoverTab[83754]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:81
		_go_fuzz_dep_.CoverTab[83756]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:82
		// _ = "end of CoverTab[83756]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:83
		_go_fuzz_dep_.CoverTab[83757]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:83
		// _ = "end of CoverTab[83757]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:83
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:83
	// _ = "end of CoverTab[83754]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:83
	_go_fuzz_dep_.CoverTab[83755]++
								return decComplex64Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:84
	// _ = "end of CoverTab[83755]"
}

func decComplex64Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:87
	_go_fuzz_dep_.CoverTab[83758]++
								slice, ok := v.Interface().([]complex64)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:89
		_go_fuzz_dep_.CoverTab[83761]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:91
		// _ = "end of CoverTab[83761]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:92
		_go_fuzz_dep_.CoverTab[83762]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:92
		// _ = "end of CoverTab[83762]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:92
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:92
	// _ = "end of CoverTab[83758]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:92
	_go_fuzz_dep_.CoverTab[83759]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:93
		_go_fuzz_dep_.CoverTab[83763]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:94
			_go_fuzz_dep_.CoverTab[83766]++
										errorf("decoding complex64 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:95
			// _ = "end of CoverTab[83766]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:96
			_go_fuzz_dep_.CoverTab[83767]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:96
			// _ = "end of CoverTab[83767]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:96
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:96
		// _ = "end of CoverTab[83763]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:96
		_go_fuzz_dep_.CoverTab[83764]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:97
			_go_fuzz_dep_.CoverTab[83768]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:99
			// _ = "end of CoverTab[83768]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:100
			_go_fuzz_dep_.CoverTab[83769]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:100
			// _ = "end of CoverTab[83769]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:100
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:100
		// _ = "end of CoverTab[83764]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:100
		_go_fuzz_dep_.CoverTab[83765]++
									real := float32FromBits(state.decodeUint(), ovfl)
									imag := float32FromBits(state.decodeUint(), ovfl)
									slice[i] = complex(float32(real), float32(imag))
//line /usr/local/go/src/encoding/gob/dec_helpers.go:103
		// _ = "end of CoverTab[83765]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:104
	// _ = "end of CoverTab[83759]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:104
	_go_fuzz_dep_.CoverTab[83760]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:105
	// _ = "end of CoverTab[83760]"
}

func decComplex128Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:108
	_go_fuzz_dep_.CoverTab[83770]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:110
		_go_fuzz_dep_.CoverTab[83772]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:111
		// _ = "end of CoverTab[83772]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:112
		_go_fuzz_dep_.CoverTab[83773]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:112
		// _ = "end of CoverTab[83773]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:112
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:112
	// _ = "end of CoverTab[83770]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:112
	_go_fuzz_dep_.CoverTab[83771]++
								return decComplex128Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:113
	// _ = "end of CoverTab[83771]"
}

func decComplex128Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:116
	_go_fuzz_dep_.CoverTab[83774]++
								slice, ok := v.Interface().([]complex128)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:118
		_go_fuzz_dep_.CoverTab[83777]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:120
		// _ = "end of CoverTab[83777]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:121
		_go_fuzz_dep_.CoverTab[83778]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:121
		// _ = "end of CoverTab[83778]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:121
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:121
	// _ = "end of CoverTab[83774]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:121
	_go_fuzz_dep_.CoverTab[83775]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:122
		_go_fuzz_dep_.CoverTab[83779]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:123
			_go_fuzz_dep_.CoverTab[83782]++
										errorf("decoding complex128 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:124
			// _ = "end of CoverTab[83782]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:125
			_go_fuzz_dep_.CoverTab[83783]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:125
			// _ = "end of CoverTab[83783]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:125
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:125
		// _ = "end of CoverTab[83779]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:125
		_go_fuzz_dep_.CoverTab[83780]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:126
			_go_fuzz_dep_.CoverTab[83784]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:128
			// _ = "end of CoverTab[83784]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:129
			_go_fuzz_dep_.CoverTab[83785]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:129
			// _ = "end of CoverTab[83785]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:129
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:129
		// _ = "end of CoverTab[83780]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:129
		_go_fuzz_dep_.CoverTab[83781]++
									real := float64FromBits(state.decodeUint())
									imag := float64FromBits(state.decodeUint())
									slice[i] = complex(real, imag)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:132
		// _ = "end of CoverTab[83781]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:133
	// _ = "end of CoverTab[83775]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:133
	_go_fuzz_dep_.CoverTab[83776]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:134
	// _ = "end of CoverTab[83776]"
}

func decFloat32Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:137
	_go_fuzz_dep_.CoverTab[83786]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:139
		_go_fuzz_dep_.CoverTab[83788]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:140
		// _ = "end of CoverTab[83788]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:141
		_go_fuzz_dep_.CoverTab[83789]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:141
		// _ = "end of CoverTab[83789]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:141
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:141
	// _ = "end of CoverTab[83786]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:141
	_go_fuzz_dep_.CoverTab[83787]++
								return decFloat32Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:142
	// _ = "end of CoverTab[83787]"
}

func decFloat32Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:145
	_go_fuzz_dep_.CoverTab[83790]++
								slice, ok := v.Interface().([]float32)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:147
		_go_fuzz_dep_.CoverTab[83793]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:149
		// _ = "end of CoverTab[83793]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:150
		_go_fuzz_dep_.CoverTab[83794]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:150
		// _ = "end of CoverTab[83794]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:150
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:150
	// _ = "end of CoverTab[83790]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:150
	_go_fuzz_dep_.CoverTab[83791]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:151
		_go_fuzz_dep_.CoverTab[83795]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:152
			_go_fuzz_dep_.CoverTab[83798]++
										errorf("decoding float32 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:153
			// _ = "end of CoverTab[83798]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:154
			_go_fuzz_dep_.CoverTab[83799]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:154
			// _ = "end of CoverTab[83799]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:154
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:154
		// _ = "end of CoverTab[83795]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:154
		_go_fuzz_dep_.CoverTab[83796]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:155
			_go_fuzz_dep_.CoverTab[83800]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:157
			// _ = "end of CoverTab[83800]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:158
			_go_fuzz_dep_.CoverTab[83801]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:158
			// _ = "end of CoverTab[83801]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:158
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:158
		// _ = "end of CoverTab[83796]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:158
		_go_fuzz_dep_.CoverTab[83797]++
									slice[i] = float32(float32FromBits(state.decodeUint(), ovfl))
//line /usr/local/go/src/encoding/gob/dec_helpers.go:159
		// _ = "end of CoverTab[83797]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:160
	// _ = "end of CoverTab[83791]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:160
	_go_fuzz_dep_.CoverTab[83792]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:161
	// _ = "end of CoverTab[83792]"
}

func decFloat64Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:164
	_go_fuzz_dep_.CoverTab[83802]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:166
		_go_fuzz_dep_.CoverTab[83804]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:167
		// _ = "end of CoverTab[83804]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:168
		_go_fuzz_dep_.CoverTab[83805]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:168
		// _ = "end of CoverTab[83805]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:168
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:168
	// _ = "end of CoverTab[83802]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:168
	_go_fuzz_dep_.CoverTab[83803]++
								return decFloat64Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:169
	// _ = "end of CoverTab[83803]"
}

func decFloat64Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:172
	_go_fuzz_dep_.CoverTab[83806]++
								slice, ok := v.Interface().([]float64)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:174
		_go_fuzz_dep_.CoverTab[83809]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:176
		// _ = "end of CoverTab[83809]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:177
		_go_fuzz_dep_.CoverTab[83810]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:177
		// _ = "end of CoverTab[83810]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:177
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:177
	// _ = "end of CoverTab[83806]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:177
	_go_fuzz_dep_.CoverTab[83807]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:178
		_go_fuzz_dep_.CoverTab[83811]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:179
			_go_fuzz_dep_.CoverTab[83814]++
										errorf("decoding float64 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:180
			// _ = "end of CoverTab[83814]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:181
			_go_fuzz_dep_.CoverTab[83815]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:181
			// _ = "end of CoverTab[83815]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:181
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:181
		// _ = "end of CoverTab[83811]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:181
		_go_fuzz_dep_.CoverTab[83812]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:182
			_go_fuzz_dep_.CoverTab[83816]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:184
			// _ = "end of CoverTab[83816]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:185
			_go_fuzz_dep_.CoverTab[83817]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:185
			// _ = "end of CoverTab[83817]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:185
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:185
		// _ = "end of CoverTab[83812]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:185
		_go_fuzz_dep_.CoverTab[83813]++
									slice[i] = float64FromBits(state.decodeUint())
//line /usr/local/go/src/encoding/gob/dec_helpers.go:186
		// _ = "end of CoverTab[83813]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:187
	// _ = "end of CoverTab[83807]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:187
	_go_fuzz_dep_.CoverTab[83808]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:188
	// _ = "end of CoverTab[83808]"
}

func decIntArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:191
	_go_fuzz_dep_.CoverTab[83818]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:193
		_go_fuzz_dep_.CoverTab[83820]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:194
		// _ = "end of CoverTab[83820]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:195
		_go_fuzz_dep_.CoverTab[83821]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:195
		// _ = "end of CoverTab[83821]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:195
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:195
	// _ = "end of CoverTab[83818]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:195
	_go_fuzz_dep_.CoverTab[83819]++
								return decIntSlice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:196
	// _ = "end of CoverTab[83819]"
}

func decIntSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:199
	_go_fuzz_dep_.CoverTab[83822]++
								slice, ok := v.Interface().([]int)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:201
		_go_fuzz_dep_.CoverTab[83825]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:203
		// _ = "end of CoverTab[83825]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:204
		_go_fuzz_dep_.CoverTab[83826]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:204
		// _ = "end of CoverTab[83826]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:204
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:204
	// _ = "end of CoverTab[83822]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:204
	_go_fuzz_dep_.CoverTab[83823]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:205
		_go_fuzz_dep_.CoverTab[83827]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:206
			_go_fuzz_dep_.CoverTab[83831]++
										errorf("decoding int array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:207
			// _ = "end of CoverTab[83831]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:208
			_go_fuzz_dep_.CoverTab[83832]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:208
			// _ = "end of CoverTab[83832]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:208
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:208
		// _ = "end of CoverTab[83827]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:208
		_go_fuzz_dep_.CoverTab[83828]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:209
			_go_fuzz_dep_.CoverTab[83833]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:211
			// _ = "end of CoverTab[83833]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:212
			_go_fuzz_dep_.CoverTab[83834]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:212
			// _ = "end of CoverTab[83834]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:212
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:212
		// _ = "end of CoverTab[83828]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:212
		_go_fuzz_dep_.CoverTab[83829]++
									x := state.decodeInt()

									if x < ^int64(^uint(0)>>1) || func() bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:215
			_go_fuzz_dep_.CoverTab[83835]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:215
			return int64(^uint(0)>>1) < x
//line /usr/local/go/src/encoding/gob/dec_helpers.go:215
			// _ = "end of CoverTab[83835]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:215
		}() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:215
			_go_fuzz_dep_.CoverTab[83836]++
										error_(ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:216
			// _ = "end of CoverTab[83836]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:217
			_go_fuzz_dep_.CoverTab[83837]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:217
			// _ = "end of CoverTab[83837]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:217
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:217
		// _ = "end of CoverTab[83829]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:217
		_go_fuzz_dep_.CoverTab[83830]++
									slice[i] = int(x)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:218
		// _ = "end of CoverTab[83830]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:219
	// _ = "end of CoverTab[83823]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:219
	_go_fuzz_dep_.CoverTab[83824]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:220
	// _ = "end of CoverTab[83824]"
}

func decInt16Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:223
	_go_fuzz_dep_.CoverTab[83838]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:225
		_go_fuzz_dep_.CoverTab[83840]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:226
		// _ = "end of CoverTab[83840]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:227
		_go_fuzz_dep_.CoverTab[83841]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:227
		// _ = "end of CoverTab[83841]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:227
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:227
	// _ = "end of CoverTab[83838]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:227
	_go_fuzz_dep_.CoverTab[83839]++
								return decInt16Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:228
	// _ = "end of CoverTab[83839]"
}

func decInt16Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:231
	_go_fuzz_dep_.CoverTab[83842]++
								slice, ok := v.Interface().([]int16)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:233
		_go_fuzz_dep_.CoverTab[83845]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:235
		// _ = "end of CoverTab[83845]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:236
		_go_fuzz_dep_.CoverTab[83846]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:236
		// _ = "end of CoverTab[83846]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:236
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:236
	// _ = "end of CoverTab[83842]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:236
	_go_fuzz_dep_.CoverTab[83843]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:237
		_go_fuzz_dep_.CoverTab[83847]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:238
			_go_fuzz_dep_.CoverTab[83851]++
										errorf("decoding int16 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:239
			// _ = "end of CoverTab[83851]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:240
			_go_fuzz_dep_.CoverTab[83852]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:240
			// _ = "end of CoverTab[83852]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:240
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:240
		// _ = "end of CoverTab[83847]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:240
		_go_fuzz_dep_.CoverTab[83848]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:241
			_go_fuzz_dep_.CoverTab[83853]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:243
			// _ = "end of CoverTab[83853]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:244
			_go_fuzz_dep_.CoverTab[83854]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:244
			// _ = "end of CoverTab[83854]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:244
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:244
		// _ = "end of CoverTab[83848]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:244
		_go_fuzz_dep_.CoverTab[83849]++
									x := state.decodeInt()
									if x < math.MinInt16 || func() bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:246
			_go_fuzz_dep_.CoverTab[83855]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:246
			return math.MaxInt16 < x
//line /usr/local/go/src/encoding/gob/dec_helpers.go:246
			// _ = "end of CoverTab[83855]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:246
		}() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:246
			_go_fuzz_dep_.CoverTab[83856]++
										error_(ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:247
			// _ = "end of CoverTab[83856]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:248
			_go_fuzz_dep_.CoverTab[83857]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:248
			// _ = "end of CoverTab[83857]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:248
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:248
		// _ = "end of CoverTab[83849]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:248
		_go_fuzz_dep_.CoverTab[83850]++
									slice[i] = int16(x)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:249
		// _ = "end of CoverTab[83850]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:250
	// _ = "end of CoverTab[83843]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:250
	_go_fuzz_dep_.CoverTab[83844]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:251
	// _ = "end of CoverTab[83844]"
}

func decInt32Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:254
	_go_fuzz_dep_.CoverTab[83858]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:256
		_go_fuzz_dep_.CoverTab[83860]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:257
		// _ = "end of CoverTab[83860]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:258
		_go_fuzz_dep_.CoverTab[83861]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:258
		// _ = "end of CoverTab[83861]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:258
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:258
	// _ = "end of CoverTab[83858]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:258
	_go_fuzz_dep_.CoverTab[83859]++
								return decInt32Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:259
	// _ = "end of CoverTab[83859]"
}

func decInt32Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:262
	_go_fuzz_dep_.CoverTab[83862]++
								slice, ok := v.Interface().([]int32)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:264
		_go_fuzz_dep_.CoverTab[83865]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:266
		// _ = "end of CoverTab[83865]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:267
		_go_fuzz_dep_.CoverTab[83866]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:267
		// _ = "end of CoverTab[83866]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:267
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:267
	// _ = "end of CoverTab[83862]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:267
	_go_fuzz_dep_.CoverTab[83863]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:268
		_go_fuzz_dep_.CoverTab[83867]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:269
			_go_fuzz_dep_.CoverTab[83871]++
										errorf("decoding int32 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:270
			// _ = "end of CoverTab[83871]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:271
			_go_fuzz_dep_.CoverTab[83872]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:271
			// _ = "end of CoverTab[83872]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:271
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:271
		// _ = "end of CoverTab[83867]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:271
		_go_fuzz_dep_.CoverTab[83868]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:272
			_go_fuzz_dep_.CoverTab[83873]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:274
			// _ = "end of CoverTab[83873]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:275
			_go_fuzz_dep_.CoverTab[83874]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:275
			// _ = "end of CoverTab[83874]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:275
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:275
		// _ = "end of CoverTab[83868]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:275
		_go_fuzz_dep_.CoverTab[83869]++
									x := state.decodeInt()
									if x < math.MinInt32 || func() bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:277
			_go_fuzz_dep_.CoverTab[83875]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:277
			return math.MaxInt32 < x
//line /usr/local/go/src/encoding/gob/dec_helpers.go:277
			// _ = "end of CoverTab[83875]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:277
		}() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:277
			_go_fuzz_dep_.CoverTab[83876]++
										error_(ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:278
			// _ = "end of CoverTab[83876]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:279
			_go_fuzz_dep_.CoverTab[83877]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:279
			// _ = "end of CoverTab[83877]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:279
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:279
		// _ = "end of CoverTab[83869]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:279
		_go_fuzz_dep_.CoverTab[83870]++
									slice[i] = int32(x)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:280
		// _ = "end of CoverTab[83870]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:281
	// _ = "end of CoverTab[83863]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:281
	_go_fuzz_dep_.CoverTab[83864]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:282
	// _ = "end of CoverTab[83864]"
}

func decInt64Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:285
	_go_fuzz_dep_.CoverTab[83878]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:287
		_go_fuzz_dep_.CoverTab[83880]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:288
		// _ = "end of CoverTab[83880]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:289
		_go_fuzz_dep_.CoverTab[83881]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:289
		// _ = "end of CoverTab[83881]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:289
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:289
	// _ = "end of CoverTab[83878]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:289
	_go_fuzz_dep_.CoverTab[83879]++
								return decInt64Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:290
	// _ = "end of CoverTab[83879]"
}

func decInt64Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:293
	_go_fuzz_dep_.CoverTab[83882]++
								slice, ok := v.Interface().([]int64)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:295
		_go_fuzz_dep_.CoverTab[83885]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:297
		// _ = "end of CoverTab[83885]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:298
		_go_fuzz_dep_.CoverTab[83886]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:298
		// _ = "end of CoverTab[83886]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:298
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:298
	// _ = "end of CoverTab[83882]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:298
	_go_fuzz_dep_.CoverTab[83883]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:299
		_go_fuzz_dep_.CoverTab[83887]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:300
			_go_fuzz_dep_.CoverTab[83890]++
										errorf("decoding int64 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:301
			// _ = "end of CoverTab[83890]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:302
			_go_fuzz_dep_.CoverTab[83891]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:302
			// _ = "end of CoverTab[83891]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:302
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:302
		// _ = "end of CoverTab[83887]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:302
		_go_fuzz_dep_.CoverTab[83888]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:303
			_go_fuzz_dep_.CoverTab[83892]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:305
			// _ = "end of CoverTab[83892]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:306
			_go_fuzz_dep_.CoverTab[83893]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:306
			// _ = "end of CoverTab[83893]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:306
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:306
		// _ = "end of CoverTab[83888]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:306
		_go_fuzz_dep_.CoverTab[83889]++
									slice[i] = state.decodeInt()
//line /usr/local/go/src/encoding/gob/dec_helpers.go:307
		// _ = "end of CoverTab[83889]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:308
	// _ = "end of CoverTab[83883]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:308
	_go_fuzz_dep_.CoverTab[83884]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:309
	// _ = "end of CoverTab[83884]"
}

func decInt8Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:312
	_go_fuzz_dep_.CoverTab[83894]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:314
		_go_fuzz_dep_.CoverTab[83896]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:315
		// _ = "end of CoverTab[83896]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:316
		_go_fuzz_dep_.CoverTab[83897]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:316
		// _ = "end of CoverTab[83897]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:316
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:316
	// _ = "end of CoverTab[83894]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:316
	_go_fuzz_dep_.CoverTab[83895]++
								return decInt8Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:317
	// _ = "end of CoverTab[83895]"
}

func decInt8Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:320
	_go_fuzz_dep_.CoverTab[83898]++
								slice, ok := v.Interface().([]int8)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:322
		_go_fuzz_dep_.CoverTab[83901]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:324
		// _ = "end of CoverTab[83901]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:325
		_go_fuzz_dep_.CoverTab[83902]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:325
		// _ = "end of CoverTab[83902]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:325
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:325
	// _ = "end of CoverTab[83898]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:325
	_go_fuzz_dep_.CoverTab[83899]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:326
		_go_fuzz_dep_.CoverTab[83903]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:327
			_go_fuzz_dep_.CoverTab[83907]++
										errorf("decoding int8 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:328
			// _ = "end of CoverTab[83907]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:329
			_go_fuzz_dep_.CoverTab[83908]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:329
			// _ = "end of CoverTab[83908]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:329
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:329
		// _ = "end of CoverTab[83903]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:329
		_go_fuzz_dep_.CoverTab[83904]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:330
			_go_fuzz_dep_.CoverTab[83909]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:332
			// _ = "end of CoverTab[83909]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:333
			_go_fuzz_dep_.CoverTab[83910]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:333
			// _ = "end of CoverTab[83910]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:333
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:333
		// _ = "end of CoverTab[83904]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:333
		_go_fuzz_dep_.CoverTab[83905]++
									x := state.decodeInt()
									if x < math.MinInt8 || func() bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:335
			_go_fuzz_dep_.CoverTab[83911]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:335
			return math.MaxInt8 < x
//line /usr/local/go/src/encoding/gob/dec_helpers.go:335
			// _ = "end of CoverTab[83911]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:335
		}() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:335
			_go_fuzz_dep_.CoverTab[83912]++
										error_(ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:336
			// _ = "end of CoverTab[83912]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:337
			_go_fuzz_dep_.CoverTab[83913]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:337
			// _ = "end of CoverTab[83913]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:337
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:337
		// _ = "end of CoverTab[83905]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:337
		_go_fuzz_dep_.CoverTab[83906]++
									slice[i] = int8(x)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:338
		// _ = "end of CoverTab[83906]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:339
	// _ = "end of CoverTab[83899]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:339
	_go_fuzz_dep_.CoverTab[83900]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:340
	// _ = "end of CoverTab[83900]"
}

func decStringArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:343
	_go_fuzz_dep_.CoverTab[83914]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:345
		_go_fuzz_dep_.CoverTab[83916]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:346
		// _ = "end of CoverTab[83916]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:347
		_go_fuzz_dep_.CoverTab[83917]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:347
		// _ = "end of CoverTab[83917]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:347
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:347
	// _ = "end of CoverTab[83914]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:347
	_go_fuzz_dep_.CoverTab[83915]++
								return decStringSlice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:348
	// _ = "end of CoverTab[83915]"
}

func decStringSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:351
	_go_fuzz_dep_.CoverTab[83918]++
								slice, ok := v.Interface().([]string)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:353
		_go_fuzz_dep_.CoverTab[83921]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:355
		// _ = "end of CoverTab[83921]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:356
		_go_fuzz_dep_.CoverTab[83922]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:356
		// _ = "end of CoverTab[83922]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:356
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:356
	// _ = "end of CoverTab[83918]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:356
	_go_fuzz_dep_.CoverTab[83919]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:357
		_go_fuzz_dep_.CoverTab[83923]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:358
			_go_fuzz_dep_.CoverTab[83928]++
										errorf("decoding string array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:359
			// _ = "end of CoverTab[83928]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:360
			_go_fuzz_dep_.CoverTab[83929]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:360
			// _ = "end of CoverTab[83929]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:360
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:360
		// _ = "end of CoverTab[83923]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:360
		_go_fuzz_dep_.CoverTab[83924]++
									u := state.decodeUint()
									n := int(u)
									if n < 0 || func() bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:363
			_go_fuzz_dep_.CoverTab[83930]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:363
			return uint64(n) != u
//line /usr/local/go/src/encoding/gob/dec_helpers.go:363
			// _ = "end of CoverTab[83930]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:363
		}() || func() bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:363
			_go_fuzz_dep_.CoverTab[83931]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:363
			return n > state.b.Len()
//line /usr/local/go/src/encoding/gob/dec_helpers.go:363
			// _ = "end of CoverTab[83931]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:363
		}() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:363
			_go_fuzz_dep_.CoverTab[83932]++
										errorf("length of string exceeds input size (%d bytes)", u)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:364
			// _ = "end of CoverTab[83932]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:365
			_go_fuzz_dep_.CoverTab[83933]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:365
			// _ = "end of CoverTab[83933]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:365
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:365
		// _ = "end of CoverTab[83924]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:365
		_go_fuzz_dep_.CoverTab[83925]++
									if n > state.b.Len() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:366
			_go_fuzz_dep_.CoverTab[83934]++
										errorf("string data too long for buffer: %d", n)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:367
			// _ = "end of CoverTab[83934]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:368
			_go_fuzz_dep_.CoverTab[83935]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:368
			// _ = "end of CoverTab[83935]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:368
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:368
		// _ = "end of CoverTab[83925]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:368
		_go_fuzz_dep_.CoverTab[83926]++

									data := state.b.Bytes()
									if len(data) < n {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:371
			_go_fuzz_dep_.CoverTab[83936]++
										errorf("invalid string length %d: exceeds input size %d", n, len(data))
//line /usr/local/go/src/encoding/gob/dec_helpers.go:372
			// _ = "end of CoverTab[83936]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:373
			_go_fuzz_dep_.CoverTab[83937]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:373
			// _ = "end of CoverTab[83937]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:373
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:373
		// _ = "end of CoverTab[83926]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:373
		_go_fuzz_dep_.CoverTab[83927]++
									slice[i] = string(data[:n])
									state.b.Drop(n)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:375
		// _ = "end of CoverTab[83927]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:376
	// _ = "end of CoverTab[83919]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:376
	_go_fuzz_dep_.CoverTab[83920]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:377
	// _ = "end of CoverTab[83920]"
}

func decUintArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:380
	_go_fuzz_dep_.CoverTab[83938]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:382
		_go_fuzz_dep_.CoverTab[83940]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:383
		// _ = "end of CoverTab[83940]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:384
		_go_fuzz_dep_.CoverTab[83941]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:384
		// _ = "end of CoverTab[83941]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:384
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:384
	// _ = "end of CoverTab[83938]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:384
	_go_fuzz_dep_.CoverTab[83939]++
								return decUintSlice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:385
	// _ = "end of CoverTab[83939]"
}

func decUintSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:388
	_go_fuzz_dep_.CoverTab[83942]++
								slice, ok := v.Interface().([]uint)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:390
		_go_fuzz_dep_.CoverTab[83945]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:392
		// _ = "end of CoverTab[83945]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:393
		_go_fuzz_dep_.CoverTab[83946]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:393
		// _ = "end of CoverTab[83946]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:393
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:393
	// _ = "end of CoverTab[83942]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:393
	_go_fuzz_dep_.CoverTab[83943]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:394
		_go_fuzz_dep_.CoverTab[83947]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:395
			_go_fuzz_dep_.CoverTab[83950]++
										errorf("decoding uint array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:396
			// _ = "end of CoverTab[83950]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:397
			_go_fuzz_dep_.CoverTab[83951]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:397
			// _ = "end of CoverTab[83951]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:397
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:397
		// _ = "end of CoverTab[83947]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:397
		_go_fuzz_dep_.CoverTab[83948]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:398
			_go_fuzz_dep_.CoverTab[83952]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:400
			// _ = "end of CoverTab[83952]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:401
			_go_fuzz_dep_.CoverTab[83953]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:401
			// _ = "end of CoverTab[83953]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:401
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:401
		// _ = "end of CoverTab[83948]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:401
		_go_fuzz_dep_.CoverTab[83949]++
									x := state.decodeUint()

//line /usr/local/go/src/encoding/gob/dec_helpers.go:406
		slice[i] = uint(x)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:406
		// _ = "end of CoverTab[83949]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:407
	// _ = "end of CoverTab[83943]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:407
	_go_fuzz_dep_.CoverTab[83944]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:408
	// _ = "end of CoverTab[83944]"
}

func decUint16Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:411
	_go_fuzz_dep_.CoverTab[83954]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:413
		_go_fuzz_dep_.CoverTab[83956]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:414
		// _ = "end of CoverTab[83956]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:415
		_go_fuzz_dep_.CoverTab[83957]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:415
		// _ = "end of CoverTab[83957]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:415
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:415
	// _ = "end of CoverTab[83954]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:415
	_go_fuzz_dep_.CoverTab[83955]++
								return decUint16Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:416
	// _ = "end of CoverTab[83955]"
}

func decUint16Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:419
	_go_fuzz_dep_.CoverTab[83958]++
								slice, ok := v.Interface().([]uint16)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:421
		_go_fuzz_dep_.CoverTab[83961]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:423
		// _ = "end of CoverTab[83961]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:424
		_go_fuzz_dep_.CoverTab[83962]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:424
		// _ = "end of CoverTab[83962]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:424
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:424
	// _ = "end of CoverTab[83958]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:424
	_go_fuzz_dep_.CoverTab[83959]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:425
		_go_fuzz_dep_.CoverTab[83963]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:426
			_go_fuzz_dep_.CoverTab[83967]++
										errorf("decoding uint16 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:427
			// _ = "end of CoverTab[83967]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:428
			_go_fuzz_dep_.CoverTab[83968]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:428
			// _ = "end of CoverTab[83968]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:428
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:428
		// _ = "end of CoverTab[83963]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:428
		_go_fuzz_dep_.CoverTab[83964]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:429
			_go_fuzz_dep_.CoverTab[83969]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:431
			// _ = "end of CoverTab[83969]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:432
			_go_fuzz_dep_.CoverTab[83970]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:432
			// _ = "end of CoverTab[83970]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:432
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:432
		// _ = "end of CoverTab[83964]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:432
		_go_fuzz_dep_.CoverTab[83965]++
									x := state.decodeUint()
									if math.MaxUint16 < x {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:434
			_go_fuzz_dep_.CoverTab[83971]++
										error_(ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:435
			// _ = "end of CoverTab[83971]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:436
			_go_fuzz_dep_.CoverTab[83972]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:436
			// _ = "end of CoverTab[83972]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:436
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:436
		// _ = "end of CoverTab[83965]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:436
		_go_fuzz_dep_.CoverTab[83966]++
									slice[i] = uint16(x)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:437
		// _ = "end of CoverTab[83966]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:438
	// _ = "end of CoverTab[83959]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:438
	_go_fuzz_dep_.CoverTab[83960]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:439
	// _ = "end of CoverTab[83960]"
}

func decUint32Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:442
	_go_fuzz_dep_.CoverTab[83973]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:444
		_go_fuzz_dep_.CoverTab[83975]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:445
		// _ = "end of CoverTab[83975]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:446
		_go_fuzz_dep_.CoverTab[83976]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:446
		// _ = "end of CoverTab[83976]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:446
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:446
	// _ = "end of CoverTab[83973]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:446
	_go_fuzz_dep_.CoverTab[83974]++
								return decUint32Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:447
	// _ = "end of CoverTab[83974]"
}

func decUint32Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:450
	_go_fuzz_dep_.CoverTab[83977]++
								slice, ok := v.Interface().([]uint32)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:452
		_go_fuzz_dep_.CoverTab[83980]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:454
		// _ = "end of CoverTab[83980]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:455
		_go_fuzz_dep_.CoverTab[83981]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:455
		// _ = "end of CoverTab[83981]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:455
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:455
	// _ = "end of CoverTab[83977]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:455
	_go_fuzz_dep_.CoverTab[83978]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:456
		_go_fuzz_dep_.CoverTab[83982]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:457
			_go_fuzz_dep_.CoverTab[83986]++
										errorf("decoding uint32 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:458
			// _ = "end of CoverTab[83986]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:459
			_go_fuzz_dep_.CoverTab[83987]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:459
			// _ = "end of CoverTab[83987]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:459
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:459
		// _ = "end of CoverTab[83982]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:459
		_go_fuzz_dep_.CoverTab[83983]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:460
			_go_fuzz_dep_.CoverTab[83988]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:462
			// _ = "end of CoverTab[83988]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:463
			_go_fuzz_dep_.CoverTab[83989]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:463
			// _ = "end of CoverTab[83989]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:463
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:463
		// _ = "end of CoverTab[83983]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:463
		_go_fuzz_dep_.CoverTab[83984]++
									x := state.decodeUint()
									if math.MaxUint32 < x {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:465
			_go_fuzz_dep_.CoverTab[83990]++
										error_(ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:466
			// _ = "end of CoverTab[83990]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:467
			_go_fuzz_dep_.CoverTab[83991]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:467
			// _ = "end of CoverTab[83991]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:467
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:467
		// _ = "end of CoverTab[83984]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:467
		_go_fuzz_dep_.CoverTab[83985]++
									slice[i] = uint32(x)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:468
		// _ = "end of CoverTab[83985]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:469
	// _ = "end of CoverTab[83978]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:469
	_go_fuzz_dep_.CoverTab[83979]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:470
	// _ = "end of CoverTab[83979]"
}

func decUint64Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:473
	_go_fuzz_dep_.CoverTab[83992]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:475
		_go_fuzz_dep_.CoverTab[83994]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:476
		// _ = "end of CoverTab[83994]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:477
		_go_fuzz_dep_.CoverTab[83995]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:477
		// _ = "end of CoverTab[83995]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:477
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:477
	// _ = "end of CoverTab[83992]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:477
	_go_fuzz_dep_.CoverTab[83993]++
								return decUint64Slice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:478
	// _ = "end of CoverTab[83993]"
}

func decUint64Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:481
	_go_fuzz_dep_.CoverTab[83996]++
								slice, ok := v.Interface().([]uint64)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:483
		_go_fuzz_dep_.CoverTab[83999]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:485
		// _ = "end of CoverTab[83999]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:486
		_go_fuzz_dep_.CoverTab[84000]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:486
		// _ = "end of CoverTab[84000]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:486
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:486
	// _ = "end of CoverTab[83996]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:486
	_go_fuzz_dep_.CoverTab[83997]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:487
		_go_fuzz_dep_.CoverTab[84001]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:488
			_go_fuzz_dep_.CoverTab[84004]++
										errorf("decoding uint64 array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:489
			// _ = "end of CoverTab[84004]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:490
			_go_fuzz_dep_.CoverTab[84005]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:490
			// _ = "end of CoverTab[84005]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:490
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:490
		// _ = "end of CoverTab[84001]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:490
		_go_fuzz_dep_.CoverTab[84002]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:491
			_go_fuzz_dep_.CoverTab[84006]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:493
			// _ = "end of CoverTab[84006]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:494
			_go_fuzz_dep_.CoverTab[84007]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:494
			// _ = "end of CoverTab[84007]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:494
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:494
		// _ = "end of CoverTab[84002]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:494
		_go_fuzz_dep_.CoverTab[84003]++
									slice[i] = state.decodeUint()
//line /usr/local/go/src/encoding/gob/dec_helpers.go:495
		// _ = "end of CoverTab[84003]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:496
	// _ = "end of CoverTab[83997]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:496
	_go_fuzz_dep_.CoverTab[83998]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:497
	// _ = "end of CoverTab[83998]"
}

func decUintptrArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:500
	_go_fuzz_dep_.CoverTab[84008]++

								if !v.CanAddr() {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:502
		_go_fuzz_dep_.CoverTab[84010]++
									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:503
		// _ = "end of CoverTab[84010]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:504
		_go_fuzz_dep_.CoverTab[84011]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:504
		// _ = "end of CoverTab[84011]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:504
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:504
	// _ = "end of CoverTab[84008]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:504
	_go_fuzz_dep_.CoverTab[84009]++
								return decUintptrSlice(state, v.Slice(0, v.Len()), length, ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:505
	// _ = "end of CoverTab[84009]"
}

func decUintptrSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:508
	_go_fuzz_dep_.CoverTab[84012]++
								slice, ok := v.Interface().([]uintptr)
								if !ok {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:510
		_go_fuzz_dep_.CoverTab[84015]++

									return false
//line /usr/local/go/src/encoding/gob/dec_helpers.go:512
		// _ = "end of CoverTab[84015]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:513
		_go_fuzz_dep_.CoverTab[84016]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:513
		// _ = "end of CoverTab[84016]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:513
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:513
	// _ = "end of CoverTab[84012]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:513
	_go_fuzz_dep_.CoverTab[84013]++
								for i := 0; i < length; i++ {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:514
		_go_fuzz_dep_.CoverTab[84017]++
									if state.b.Len() == 0 {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:515
			_go_fuzz_dep_.CoverTab[84021]++
										errorf("decoding uintptr array or slice: length exceeds input size (%d elements)", length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:516
			// _ = "end of CoverTab[84021]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:517
			_go_fuzz_dep_.CoverTab[84022]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:517
			// _ = "end of CoverTab[84022]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:517
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:517
		// _ = "end of CoverTab[84017]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:517
		_go_fuzz_dep_.CoverTab[84018]++
									if i >= len(slice) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:518
			_go_fuzz_dep_.CoverTab[84023]++

										growSlice(v, &slice, length)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:520
			// _ = "end of CoverTab[84023]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:521
			_go_fuzz_dep_.CoverTab[84024]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:521
			// _ = "end of CoverTab[84024]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:521
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:521
		// _ = "end of CoverTab[84018]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:521
		_go_fuzz_dep_.CoverTab[84019]++
									x := state.decodeUint()
									if uint64(^uintptr(0)) < x {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:523
			_go_fuzz_dep_.CoverTab[84025]++
										error_(ovfl)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:524
			// _ = "end of CoverTab[84025]"
		} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:525
			_go_fuzz_dep_.CoverTab[84026]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:525
			// _ = "end of CoverTab[84026]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:525
		}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:525
		// _ = "end of CoverTab[84019]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:525
		_go_fuzz_dep_.CoverTab[84020]++
									slice[i] = uintptr(x)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:526
		// _ = "end of CoverTab[84020]"
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:527
	// _ = "end of CoverTab[84013]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:527
	_go_fuzz_dep_.CoverTab[84014]++
								return true
//line /usr/local/go/src/encoding/gob/dec_helpers.go:528
	// _ = "end of CoverTab[84014]"
}

// growSlice is called for a slice that we only partially allocated,
//line /usr/local/go/src/encoding/gob/dec_helpers.go:531
// to grow it up to length.
//line /usr/local/go/src/encoding/gob/dec_helpers.go:533
func growSlice[E any](v reflect.Value, ps *[]E, length int) {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:533
	_go_fuzz_dep_.CoverTab[84027]++
								var zero E
								s := *ps
								s = append(s, zero)
								cp := cap(s)
								if cp > length {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:538
		_go_fuzz_dep_.CoverTab[84029]++
									cp = length
//line /usr/local/go/src/encoding/gob/dec_helpers.go:539
		// _ = "end of CoverTab[84029]"
	} else {
//line /usr/local/go/src/encoding/gob/dec_helpers.go:540
		_go_fuzz_dep_.CoverTab[84030]++
//line /usr/local/go/src/encoding/gob/dec_helpers.go:540
		// _ = "end of CoverTab[84030]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:540
	}
//line /usr/local/go/src/encoding/gob/dec_helpers.go:540
	// _ = "end of CoverTab[84027]"
//line /usr/local/go/src/encoding/gob/dec_helpers.go:540
	_go_fuzz_dep_.CoverTab[84028]++
								s = s[:cp]
								v.Set(reflect.ValueOf(s))
								*ps = s
//line /usr/local/go/src/encoding/gob/dec_helpers.go:543
	// _ = "end of CoverTab[84028]"
}

//line /usr/local/go/src/encoding/gob/dec_helpers.go:544
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /usr/local/go/src/encoding/gob/dec_helpers.go:544
var _ = _go_fuzz_dep_.CoverTab
