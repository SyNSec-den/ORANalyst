// Copyright 2016 Google Inc.  All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:5
package uuid

//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:5
import (
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:5
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:5
)
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:5
import (
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:5
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:5
)

import (
	"crypto/md5"
	"crypto/sha1"
	"hash"
)

// Well known namespace IDs and UUIDs
var (
	NameSpaceDNS	= Must(Parse("6ba7b810-9dad-11d1-80b4-00c04fd430c8"))
	NameSpaceURL	= Must(Parse("6ba7b811-9dad-11d1-80b4-00c04fd430c8"))
	NameSpaceOID	= Must(Parse("6ba7b812-9dad-11d1-80b4-00c04fd430c8"))
	NameSpaceX500	= Must(Parse("6ba7b814-9dad-11d1-80b4-00c04fd430c8"))
	Nil		UUID	// empty UUID, all zeros
)

// NewHash returns a new UUID derived from the hash of space concatenated with
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:22
// data generated by h.  The hash should be at least 16 byte in length.  The
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:22
// first 16 bytes of the hash are used to form the UUID.  The version of the
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:22
// UUID will be the lower 4 bits of version.  NewHash is used to implement
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:22
// NewMD5 and NewSHA1.
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:27
func NewHash(h hash.Hash, space UUID, data []byte, version int) UUID {
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:27
	_go_fuzz_dep_.CoverTab[179315]++
										h.Reset()
										h.Write(space[:])
										h.Write(data)
										s := h.Sum(nil)
										var uuid UUID
										copy(uuid[:], s)
										uuid[6] = (uuid[6] & 0x0f) | uint8((version&0xf)<<4)
										uuid[8] = (uuid[8] & 0x3f) | 0x80
										return uuid
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:36
	// _ = "end of CoverTab[179315]"
}

// NewMD5 returns a new MD5 (Version 3) UUID based on the
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:39
// supplied name space and data.  It is the same as calling:
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:39
//
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:39
//	NewHash(md5.New(), space, data, 3)
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:43
func NewMD5(space UUID, data []byte) UUID {
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:43
	_go_fuzz_dep_.CoverTab[179316]++
										return NewHash(md5.New(), space, data, 3)
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:44
	// _ = "end of CoverTab[179316]"
}

// NewSHA1 returns a new SHA1 (Version 5) UUID based on the
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:47
// supplied name space and data.  It is the same as calling:
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:47
//
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:47
//	NewHash(sha1.New(), space, data, 5)
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:51
func NewSHA1(space UUID, data []byte) UUID {
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:51
	_go_fuzz_dep_.CoverTab[179317]++
										return NewHash(sha1.New(), space, data, 5)
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:52
	// _ = "end of CoverTab[179317]"
}

//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:53
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/github.com/google/uuid@v1.3.0/hash.go:53
var _ = _go_fuzz_dep_.CoverTab
