// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: google/protobuf/field_mask.proto

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:4
package types

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:4
import (
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:4
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:4
)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:4
import (
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:4
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:4
)

import (
	bytes "bytes"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:22
// is compatible with the proto package it is being compiled against.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:22
// A compilation error at this line likely means your copy of the
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:22
// proto package needs to be updated.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:26
const _ = proto.GoGoProtoPackageIsVersion3	// please upgrade the proto package

// `FieldMask` represents a set of symbolic field paths, for example:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	paths: "f.a"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	paths: "f.b.d"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// Here `f` represents a field in some root message, `a` and `b`
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// fields in the message found in `f`, and `d` a field found in the
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// message in `f.b`.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// Field masks are used to specify a subset of fields that should be
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// returned by a get operation or modified by an update operation.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// Field masks also have a custom JSON encoding (see below).
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// # Field Masks in Projections
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// When used in the context of a projection, a response message or
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// sub-message is filtered by the API to only contain those fields as
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// specified in the mask. For example, if the mask in the previous
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// example is applied to a response message as follows:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	f {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  a : 22
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  b {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    d : 1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    x : 2
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  }
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  y : 13
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	z: 8
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// The result will not contain specific values for fields x,y and z
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// (their value will be set to the default, and omitted in proto text
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// output):
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	f {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  a : 22
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  b {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    d : 1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  }
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// A repeated field is not allowed except at the last position of a
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// paths string.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// If a FieldMask object is not present in a get operation, the
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// operation applies to all fields (as if a FieldMask of all fields
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// had been specified).
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// Note that a field mask does not necessarily apply to the
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// top-level response message. In case of a REST get operation, the
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// field mask applies directly to the response, but in case of a REST
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// list operation, the mask instead applies to each individual message
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// in the returned resource list. In case of a REST custom method,
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// other definitions may be used. Where the mask applies will be
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// clearly documented together with its declaration in the API.  In
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// any case, the effect on the returned resource/resources is required
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// behavior for APIs.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// # Field Masks in Update Operations
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// A field mask in update operations specifies which fields of the
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// targeted resource are going to be updated. The API is required
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// to only change the values of the fields as specified in the mask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// and leave the others untouched. If a resource is passed in to
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// describe the updated values, the API ignores the values of all
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// fields not covered by the mask.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// If a repeated field is specified for an update operation, new values will
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// be appended to the existing repeated field in the target resource. Note that
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// a repeated field is only allowed in the last position of a `paths` string.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// If a sub-message is specified in the last position of the field mask for an
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// update operation, then new value will be merged into the existing sub-message
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// in the target resource.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// For example, given the target message:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	f {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  b {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    d: 1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    x: 2
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  }
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  c: [1]
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// And an update message:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	f {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  b {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    d: 10
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  }
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  c: [2]
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// then if the field mask is:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	paths: ["f.b", "f.c"]
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// then the result will be:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	f {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  b {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    d: 10
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    x: 2
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  }
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  c: [1, 2]
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// An implementation may provide options to override this default behavior for
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// repeated and message fields.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// In order to reset a field's value to the default, the field must
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// be in the mask and set to the default value in the provided resource.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// Hence, in order to reset all fields of a resource, provide a default
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// instance of the resource and set all fields in the mask, or do
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// not provide a mask as described below.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// If a field mask is not present on update, the operation applies to
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// all fields (as if a field mask of all fields has been specified).
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// Note that in the presence of schema evolution, this may mean that
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// fields the client does not know and has therefore not filled into
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// the request will be reset to their default. If this is unwanted
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// behavior, a specific service may require a client to always specify
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// a field mask, producing an error if not.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// As with get operations, the location of the resource which
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// describes the updated values in the request message depends on the
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// operation kind. In any case, the effect of the field mask is
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// required to be honored by the API.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// ## Considerations for HTTP REST
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// The HTTP kind of an update operation which uses a field mask must
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// be set to PATCH instead of PUT in order to satisfy HTTP semantics
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// (PUT must only be used for full updates).
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// # JSON Encoding of Field Masks
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// In JSON, a field mask is encoded as a single string where paths are
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// separated by a comma. Fields name in each path are converted
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// to/from lower-camel naming conventions.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// As an example, consider the following message declarations:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	message Profile {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  User user = 1;
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  Photo photo = 2;
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	message User {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  string display_name = 1;
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  string address = 2;
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// In proto a field mask for `Profile` may look as such:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	mask {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  paths: "user.display_name"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  paths: "photo"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// In JSON, the same mask is represented as below:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	{
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  mask: "user.displayName,photo"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// # Field Masks and Oneof Fields
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// Field masks treat fields in oneofs just as regular fields. Consider the
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// following message:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	message SampleMessage {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  oneof test_oneof {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    string name = 4;
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	    SubMessage sub_message = 9;
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  }
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// The field mask can be:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	mask {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  paths: "name"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// Or:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	mask {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	  paths: "sub_message"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// Note that oneof type names ("test_oneof" in this case) cannot be used in
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// paths.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// ## Field Mask Verification
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// The implementation of any API method which has a FieldMask type field in the
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// request should verify the included field paths, and return an
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:28
// `INVALID_ARGUMENT` error if any path is duplicated or unmappable.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:227
type FieldMask struct {
	// The set of field mask paths.
	Paths			[]string	`protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	XXX_NoUnkeyedLiteral	struct{}	`json:"-"`
	XXX_unrecognized	[]byte		`json:"-"`
	XXX_sizecache		int32		`json:"-"`
}

func (m *FieldMask) Reset() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:235
	_go_fuzz_dep_.CoverTab[136267]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:235
	*m = FieldMask{}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:235
	// _ = "end of CoverTab[136267]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:235
}
func (*FieldMask) ProtoMessage()	{ _go_fuzz_dep_.CoverTab[136268]++; // _ = "end of CoverTab[136268]" }
func (*FieldMask) Descriptor() ([]byte, []int) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:237
	_go_fuzz_dep_.CoverTab[136269]++
												return fileDescriptor_5158202634f0da48, []int{0}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:238
	// _ = "end of CoverTab[136269]"
}
func (m *FieldMask) XXX_Unmarshal(b []byte) error {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:240
	_go_fuzz_dep_.CoverTab[136270]++
												return m.Unmarshal(b)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:241
	// _ = "end of CoverTab[136270]"
}
func (m *FieldMask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:243
	_go_fuzz_dep_.CoverTab[136271]++
												if deterministic {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:244
		_go_fuzz_dep_.CoverTab[136272]++
													return xxx_messageInfo_FieldMask.Marshal(b, m, deterministic)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:245
		// _ = "end of CoverTab[136272]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:246
		_go_fuzz_dep_.CoverTab[136273]++
													b = b[:cap(b)]
													n, err := m.MarshalToSizedBuffer(b)
													if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:249
			_go_fuzz_dep_.CoverTab[136275]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:250
			// _ = "end of CoverTab[136275]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:251
			_go_fuzz_dep_.CoverTab[136276]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:251
			// _ = "end of CoverTab[136276]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:251
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:251
		// _ = "end of CoverTab[136273]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:251
		_go_fuzz_dep_.CoverTab[136274]++
													return b[:n], nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:252
		// _ = "end of CoverTab[136274]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:253
	// _ = "end of CoverTab[136271]"
}
func (m *FieldMask) XXX_Merge(src proto.Message) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:255
	_go_fuzz_dep_.CoverTab[136277]++
												xxx_messageInfo_FieldMask.Merge(m, src)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:256
	// _ = "end of CoverTab[136277]"
}
func (m *FieldMask) XXX_Size() int {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:258
	_go_fuzz_dep_.CoverTab[136278]++
												return m.Size()
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:259
	// _ = "end of CoverTab[136278]"
}
func (m *FieldMask) XXX_DiscardUnknown() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:261
	_go_fuzz_dep_.CoverTab[136279]++
												xxx_messageInfo_FieldMask.DiscardUnknown(m)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:262
	// _ = "end of CoverTab[136279]"
}

var xxx_messageInfo_FieldMask proto.InternalMessageInfo

func (m *FieldMask) GetPaths() []string {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:267
	_go_fuzz_dep_.CoverTab[136280]++
												if m != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:268
		_go_fuzz_dep_.CoverTab[136282]++
													return m.Paths
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:269
		// _ = "end of CoverTab[136282]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:270
		_go_fuzz_dep_.CoverTab[136283]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:270
		// _ = "end of CoverTab[136283]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:270
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:270
	// _ = "end of CoverTab[136280]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:270
	_go_fuzz_dep_.CoverTab[136281]++
												return nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:271
	// _ = "end of CoverTab[136281]"
}

func (*FieldMask) XXX_MessageName() string {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:274
	_go_fuzz_dep_.CoverTab[136284]++
												return "google.protobuf.FieldMask"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:275
	// _ = "end of CoverTab[136284]"
}
func init() {
	proto.RegisterType((*FieldMask)(nil), "google.protobuf.FieldMask")
}

func init()	{ proto.RegisterFile("google/protobuf/field_mask.proto", fileDescriptor_5158202634f0da48) }

var fileDescriptor_5158202634f0da48 = []byte{

	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x4f, 0xcb, 0x4c, 0xcd,
	0x49, 0x89, 0xcf, 0x4d, 0x2c, 0xce, 0xd6, 0x03, 0x8b, 0x09, 0xf1, 0x43, 0x54, 0xe8, 0xc1, 0x54,
	0x28, 0x29, 0x72, 0x71, 0xba, 0x81, 0x14, 0xf9, 0x26, 0x16, 0x67, 0x0b, 0x89, 0x70, 0xb1, 0x16,
	0x24, 0x96, 0x64, 0x14, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x06, 0x41, 0x38, 0x4e, 0x1d, 0x8c,
	0x37, 0x1e, 0xca, 0x31, 0x7c, 0x78, 0x28, 0xc7, 0xf8, 0xe3, 0xa1, 0x1c, 0x63, 0xc3, 0x23, 0x39,
	0xc6, 0x15, 0x8f, 0xe4, 0x18, 0x4f, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23,
	0x39, 0xc6, 0x17, 0x8f, 0xe4, 0x18, 0x3e, 0x80, 0xc4, 0x1f, 0xcb, 0x31, 0x9e, 0x78, 0x2c, 0xc7,
	0xc8, 0x25, 0x9c, 0x9c, 0x9f, 0xab, 0x87, 0x66, 0x95, 0x13, 0x1f, 0xdc, 0xa2, 0x00, 0x90, 0x50,
	0x00, 0x63, 0x14, 0x6b, 0x49, 0x65, 0x41, 0x6a, 0xf1, 0x0f, 0x46, 0xc6, 0x45, 0x4c, 0xcc, 0xee,
	0x01, 0x4e, 0xab, 0x98, 0xe4, 0xdc, 0x21, 0x7a, 0x02, 0xa0, 0x7a, 0xf4, 0xc2, 0x53, 0x73, 0x72,
	0xbc, 0xf3, 0xf2, 0xcb, 0xf3, 0x42, 0x40, 0x2a, 0x93, 0xd8, 0xc0, 0x86, 0x19, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x43, 0xa0, 0x83, 0xd0, 0xe9, 0x00, 0x00, 0x00,
}

func (this *FieldMask) Compare(that interface{}) int {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:300
	_go_fuzz_dep_.CoverTab[136285]++
												if that == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:301
		_go_fuzz_dep_.CoverTab[136292]++
													if this == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:302
			_go_fuzz_dep_.CoverTab[136294]++
														return 0
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:303
			// _ = "end of CoverTab[136294]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:304
			_go_fuzz_dep_.CoverTab[136295]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:304
			// _ = "end of CoverTab[136295]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:304
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:304
		// _ = "end of CoverTab[136292]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:304
		_go_fuzz_dep_.CoverTab[136293]++
													return 1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:305
		// _ = "end of CoverTab[136293]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:306
		_go_fuzz_dep_.CoverTab[136296]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:306
		// _ = "end of CoverTab[136296]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:306
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:306
	// _ = "end of CoverTab[136285]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:306
	_go_fuzz_dep_.CoverTab[136286]++

												that1, ok := that.(*FieldMask)
												if !ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:309
		_go_fuzz_dep_.CoverTab[136297]++
													that2, ok := that.(FieldMask)
													if ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:311
			_go_fuzz_dep_.CoverTab[136298]++
														that1 = &that2
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:312
			// _ = "end of CoverTab[136298]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:313
			_go_fuzz_dep_.CoverTab[136299]++
														return 1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:314
			// _ = "end of CoverTab[136299]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:315
		// _ = "end of CoverTab[136297]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:316
		_go_fuzz_dep_.CoverTab[136300]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:316
		// _ = "end of CoverTab[136300]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:316
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:316
	// _ = "end of CoverTab[136286]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:316
	_go_fuzz_dep_.CoverTab[136287]++
												if that1 == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:317
		_go_fuzz_dep_.CoverTab[136301]++
													if this == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:318
			_go_fuzz_dep_.CoverTab[136303]++
														return 0
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:319
			// _ = "end of CoverTab[136303]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:320
			_go_fuzz_dep_.CoverTab[136304]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:320
			// _ = "end of CoverTab[136304]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:320
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:320
		// _ = "end of CoverTab[136301]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:320
		_go_fuzz_dep_.CoverTab[136302]++
													return 1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:321
		// _ = "end of CoverTab[136302]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:322
		_go_fuzz_dep_.CoverTab[136305]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:322
		if this == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:322
			_go_fuzz_dep_.CoverTab[136306]++
														return -1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:323
			// _ = "end of CoverTab[136306]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:324
			_go_fuzz_dep_.CoverTab[136307]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:324
			// _ = "end of CoverTab[136307]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:324
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:324
		// _ = "end of CoverTab[136305]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:324
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:324
	// _ = "end of CoverTab[136287]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:324
	_go_fuzz_dep_.CoverTab[136288]++
												if len(this.Paths) != len(that1.Paths) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:325
		_go_fuzz_dep_.CoverTab[136308]++
													if len(this.Paths) < len(that1.Paths) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:326
			_go_fuzz_dep_.CoverTab[136310]++
														return -1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:327
			// _ = "end of CoverTab[136310]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:328
			_go_fuzz_dep_.CoverTab[136311]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:328
			// _ = "end of CoverTab[136311]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:328
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:328
		// _ = "end of CoverTab[136308]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:328
		_go_fuzz_dep_.CoverTab[136309]++
													return 1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:329
		// _ = "end of CoverTab[136309]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:330
		_go_fuzz_dep_.CoverTab[136312]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:330
		// _ = "end of CoverTab[136312]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:330
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:330
	// _ = "end of CoverTab[136288]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:330
	_go_fuzz_dep_.CoverTab[136289]++
												for i := range this.Paths {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:331
		_go_fuzz_dep_.CoverTab[136313]++
													if this.Paths[i] != that1.Paths[i] {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:332
			_go_fuzz_dep_.CoverTab[136314]++
														if this.Paths[i] < that1.Paths[i] {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:333
				_go_fuzz_dep_.CoverTab[136316]++
															return -1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:334
				// _ = "end of CoverTab[136316]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:335
				_go_fuzz_dep_.CoverTab[136317]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:335
				// _ = "end of CoverTab[136317]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:335
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:335
			// _ = "end of CoverTab[136314]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:335
			_go_fuzz_dep_.CoverTab[136315]++
														return 1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:336
			// _ = "end of CoverTab[136315]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:337
			_go_fuzz_dep_.CoverTab[136318]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:337
			// _ = "end of CoverTab[136318]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:337
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:337
		// _ = "end of CoverTab[136313]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:338
	// _ = "end of CoverTab[136289]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:338
	_go_fuzz_dep_.CoverTab[136290]++
												if c := bytes.Compare(this.XXX_unrecognized, that1.XXX_unrecognized); c != 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:339
		_go_fuzz_dep_.CoverTab[136319]++
													return c
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:340
		// _ = "end of CoverTab[136319]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:341
		_go_fuzz_dep_.CoverTab[136320]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:341
		// _ = "end of CoverTab[136320]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:341
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:341
	// _ = "end of CoverTab[136290]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:341
	_go_fuzz_dep_.CoverTab[136291]++
												return 0
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:342
	// _ = "end of CoverTab[136291]"
}
func (this *FieldMask) Equal(that interface{}) bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:344
	_go_fuzz_dep_.CoverTab[136321]++
												if that == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:345
		_go_fuzz_dep_.CoverTab[136328]++
													return this == nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:346
		// _ = "end of CoverTab[136328]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:347
		_go_fuzz_dep_.CoverTab[136329]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:347
		// _ = "end of CoverTab[136329]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:347
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:347
	// _ = "end of CoverTab[136321]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:347
	_go_fuzz_dep_.CoverTab[136322]++

												that1, ok := that.(*FieldMask)
												if !ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:350
		_go_fuzz_dep_.CoverTab[136330]++
													that2, ok := that.(FieldMask)
													if ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:352
			_go_fuzz_dep_.CoverTab[136331]++
														that1 = &that2
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:353
			// _ = "end of CoverTab[136331]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:354
			_go_fuzz_dep_.CoverTab[136332]++
														return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:355
			// _ = "end of CoverTab[136332]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:356
		// _ = "end of CoverTab[136330]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:357
		_go_fuzz_dep_.CoverTab[136333]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:357
		// _ = "end of CoverTab[136333]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:357
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:357
	// _ = "end of CoverTab[136322]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:357
	_go_fuzz_dep_.CoverTab[136323]++
												if that1 == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:358
		_go_fuzz_dep_.CoverTab[136334]++
													return this == nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:359
		// _ = "end of CoverTab[136334]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:360
		_go_fuzz_dep_.CoverTab[136335]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:360
		if this == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:360
			_go_fuzz_dep_.CoverTab[136336]++
														return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:361
			// _ = "end of CoverTab[136336]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:362
			_go_fuzz_dep_.CoverTab[136337]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:362
			// _ = "end of CoverTab[136337]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:362
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:362
		// _ = "end of CoverTab[136335]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:362
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:362
	// _ = "end of CoverTab[136323]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:362
	_go_fuzz_dep_.CoverTab[136324]++
												if len(this.Paths) != len(that1.Paths) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:363
		_go_fuzz_dep_.CoverTab[136338]++
													return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:364
		// _ = "end of CoverTab[136338]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:365
		_go_fuzz_dep_.CoverTab[136339]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:365
		// _ = "end of CoverTab[136339]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:365
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:365
	// _ = "end of CoverTab[136324]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:365
	_go_fuzz_dep_.CoverTab[136325]++
												for i := range this.Paths {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:366
		_go_fuzz_dep_.CoverTab[136340]++
													if this.Paths[i] != that1.Paths[i] {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:367
			_go_fuzz_dep_.CoverTab[136341]++
														return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:368
			// _ = "end of CoverTab[136341]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:369
			_go_fuzz_dep_.CoverTab[136342]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:369
			// _ = "end of CoverTab[136342]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:369
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:369
		// _ = "end of CoverTab[136340]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:370
	// _ = "end of CoverTab[136325]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:370
	_go_fuzz_dep_.CoverTab[136326]++
												if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:371
		_go_fuzz_dep_.CoverTab[136343]++
													return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:372
		// _ = "end of CoverTab[136343]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:373
		_go_fuzz_dep_.CoverTab[136344]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:373
		// _ = "end of CoverTab[136344]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:373
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:373
	// _ = "end of CoverTab[136326]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:373
	_go_fuzz_dep_.CoverTab[136327]++
												return true
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:374
	// _ = "end of CoverTab[136327]"
}
func (this *FieldMask) GoString() string {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:376
	_go_fuzz_dep_.CoverTab[136345]++
												if this == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:377
		_go_fuzz_dep_.CoverTab[136348]++
													return "nil"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:378
		// _ = "end of CoverTab[136348]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:379
		_go_fuzz_dep_.CoverTab[136349]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:379
		// _ = "end of CoverTab[136349]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:379
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:379
	// _ = "end of CoverTab[136345]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:379
	_go_fuzz_dep_.CoverTab[136346]++
												s := make([]string, 0, 5)
												s = append(s, "&types.FieldMask{")
												s = append(s, "Paths: "+fmt.Sprintf("%#v", this.Paths)+",\n")
												if this.XXX_unrecognized != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:383
		_go_fuzz_dep_.CoverTab[136350]++
													s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:384
		// _ = "end of CoverTab[136350]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:385
		_go_fuzz_dep_.CoverTab[136351]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:385
		// _ = "end of CoverTab[136351]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:385
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:385
	// _ = "end of CoverTab[136346]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:385
	_go_fuzz_dep_.CoverTab[136347]++
												s = append(s, "}")
												return strings.Join(s, "")
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:387
	// _ = "end of CoverTab[136347]"
}
func valueToGoStringFieldMask(v interface{}, typ string) string {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:389
	_go_fuzz_dep_.CoverTab[136352]++
												rv := reflect.ValueOf(v)
												if rv.IsNil() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:391
		_go_fuzz_dep_.CoverTab[136354]++
													return "nil"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:392
		// _ = "end of CoverTab[136354]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:393
		_go_fuzz_dep_.CoverTab[136355]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:393
		// _ = "end of CoverTab[136355]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:393
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:393
	// _ = "end of CoverTab[136352]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:393
	_go_fuzz_dep_.CoverTab[136353]++
												pv := reflect.Indirect(rv).Interface()
												return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:395
	// _ = "end of CoverTab[136353]"
}
func (m *FieldMask) Marshal() (dAtA []byte, err error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:397
	_go_fuzz_dep_.CoverTab[136356]++
												size := m.Size()
												dAtA = make([]byte, size)
												n, err := m.MarshalToSizedBuffer(dAtA[:size])
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:401
		_go_fuzz_dep_.CoverTab[136358]++
													return nil, err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:402
		// _ = "end of CoverTab[136358]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:403
		_go_fuzz_dep_.CoverTab[136359]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:403
		// _ = "end of CoverTab[136359]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:403
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:403
	// _ = "end of CoverTab[136356]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:403
	_go_fuzz_dep_.CoverTab[136357]++
												return dAtA[:n], nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:404
	// _ = "end of CoverTab[136357]"
}

func (m *FieldMask) MarshalTo(dAtA []byte) (int, error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:407
	_go_fuzz_dep_.CoverTab[136360]++
												size := m.Size()
												return m.MarshalToSizedBuffer(dAtA[:size])
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:409
	// _ = "end of CoverTab[136360]"
}

func (m *FieldMask) MarshalToSizedBuffer(dAtA []byte) (int, error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:412
	_go_fuzz_dep_.CoverTab[136361]++
												i := len(dAtA)
												_ = i
												var l int
												_ = l
												if m.XXX_unrecognized != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:417
		_go_fuzz_dep_.CoverTab[136364]++
													i -= len(m.XXX_unrecognized)
													copy(dAtA[i:], m.XXX_unrecognized)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:419
		// _ = "end of CoverTab[136364]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:420
		_go_fuzz_dep_.CoverTab[136365]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:420
		// _ = "end of CoverTab[136365]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:420
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:420
	// _ = "end of CoverTab[136361]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:420
	_go_fuzz_dep_.CoverTab[136362]++
												if len(m.Paths) > 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:421
		_go_fuzz_dep_.CoverTab[136366]++
													for iNdEx := len(m.Paths) - 1; iNdEx >= 0; iNdEx-- {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:422
			_go_fuzz_dep_.CoverTab[136367]++
														i -= len(m.Paths[iNdEx])
														copy(dAtA[i:], m.Paths[iNdEx])
														i = encodeVarintFieldMask(dAtA, i, uint64(len(m.Paths[iNdEx])))
														i--
														dAtA[i] = 0xa
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:427
			// _ = "end of CoverTab[136367]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:428
		// _ = "end of CoverTab[136366]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:429
		_go_fuzz_dep_.CoverTab[136368]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:429
		// _ = "end of CoverTab[136368]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:429
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:429
	// _ = "end of CoverTab[136362]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:429
	_go_fuzz_dep_.CoverTab[136363]++
												return len(dAtA) - i, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:430
	// _ = "end of CoverTab[136363]"
}

func encodeVarintFieldMask(dAtA []byte, offset int, v uint64) int {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:433
	_go_fuzz_dep_.CoverTab[136369]++
												offset -= sovFieldMask(v)
												base := offset
												for v >= 1<<7 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:436
		_go_fuzz_dep_.CoverTab[136371]++
													dAtA[offset] = uint8(v&0x7f | 0x80)
													v >>= 7
													offset++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:439
		// _ = "end of CoverTab[136371]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:440
	// _ = "end of CoverTab[136369]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:440
	_go_fuzz_dep_.CoverTab[136370]++
												dAtA[offset] = uint8(v)
												return base
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:442
	// _ = "end of CoverTab[136370]"
}
func NewPopulatedFieldMask(r randyFieldMask, easy bool) *FieldMask {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:444
	_go_fuzz_dep_.CoverTab[136372]++
												this := &FieldMask{}
												v1 := r.Intn(10)
												this.Paths = make([]string, v1)
												for i := 0; i < v1; i++ {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:448
		_go_fuzz_dep_.CoverTab[136375]++
													this.Paths[i] = string(randStringFieldMask(r))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:449
		// _ = "end of CoverTab[136375]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:450
	// _ = "end of CoverTab[136372]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:450
	_go_fuzz_dep_.CoverTab[136373]++
												if !easy && func() bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:451
		_go_fuzz_dep_.CoverTab[136376]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:451
		return r.Intn(10) != 0
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:451
		// _ = "end of CoverTab[136376]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:451
	}() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:451
		_go_fuzz_dep_.CoverTab[136377]++
													this.XXX_unrecognized = randUnrecognizedFieldMask(r, 2)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:452
		// _ = "end of CoverTab[136377]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:453
		_go_fuzz_dep_.CoverTab[136378]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:453
		// _ = "end of CoverTab[136378]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:453
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:453
	// _ = "end of CoverTab[136373]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:453
	_go_fuzz_dep_.CoverTab[136374]++
												return this
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:454
	// _ = "end of CoverTab[136374]"
}

type randyFieldMask interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneFieldMask(r randyFieldMask) rune {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:466
	_go_fuzz_dep_.CoverTab[136379]++
												ru := r.Intn(62)
												if ru < 10 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:468
		_go_fuzz_dep_.CoverTab[136381]++
													return rune(ru + 48)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:469
		// _ = "end of CoverTab[136381]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:470
		_go_fuzz_dep_.CoverTab[136382]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:470
		if ru < 36 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:470
			_go_fuzz_dep_.CoverTab[136383]++
														return rune(ru + 55)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:471
			// _ = "end of CoverTab[136383]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:472
			_go_fuzz_dep_.CoverTab[136384]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:472
			// _ = "end of CoverTab[136384]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:472
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:472
		// _ = "end of CoverTab[136382]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:472
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:472
	// _ = "end of CoverTab[136379]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:472
	_go_fuzz_dep_.CoverTab[136380]++
												return rune(ru + 61)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:473
	// _ = "end of CoverTab[136380]"
}
func randStringFieldMask(r randyFieldMask) string {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:475
	_go_fuzz_dep_.CoverTab[136385]++
												v2 := r.Intn(100)
												tmps := make([]rune, v2)
												for i := 0; i < v2; i++ {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:478
		_go_fuzz_dep_.CoverTab[136387]++
													tmps[i] = randUTF8RuneFieldMask(r)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:479
		// _ = "end of CoverTab[136387]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:480
	// _ = "end of CoverTab[136385]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:480
	_go_fuzz_dep_.CoverTab[136386]++
												return string(tmps)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:481
	// _ = "end of CoverTab[136386]"
}
func randUnrecognizedFieldMask(r randyFieldMask, maxFieldNumber int) (dAtA []byte) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:483
	_go_fuzz_dep_.CoverTab[136388]++
												l := r.Intn(5)
												for i := 0; i < l; i++ {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:485
		_go_fuzz_dep_.CoverTab[136390]++
													wire := r.Intn(4)
													if wire == 3 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:487
			_go_fuzz_dep_.CoverTab[136392]++
														wire = 5
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:488
			// _ = "end of CoverTab[136392]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:489
			_go_fuzz_dep_.CoverTab[136393]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:489
			// _ = "end of CoverTab[136393]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:489
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:489
		// _ = "end of CoverTab[136390]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:489
		_go_fuzz_dep_.CoverTab[136391]++
													fieldNumber := maxFieldNumber + r.Intn(100)
													dAtA = randFieldFieldMask(dAtA, r, fieldNumber, wire)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:491
		// _ = "end of CoverTab[136391]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:492
	// _ = "end of CoverTab[136388]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:492
	_go_fuzz_dep_.CoverTab[136389]++
												return dAtA
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:493
	// _ = "end of CoverTab[136389]"
}
func randFieldFieldMask(dAtA []byte, r randyFieldMask, fieldNumber int, wire int) []byte {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:495
	_go_fuzz_dep_.CoverTab[136394]++
												key := uint32(fieldNumber)<<3 | uint32(wire)
												switch wire {
	case 0:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:498
		_go_fuzz_dep_.CoverTab[136396]++
													dAtA = encodeVarintPopulateFieldMask(dAtA, uint64(key))
													v3 := r.Int63()
													if r.Intn(2) == 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:501
			_go_fuzz_dep_.CoverTab[136401]++
														v3 *= -1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:502
			// _ = "end of CoverTab[136401]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:503
			_go_fuzz_dep_.CoverTab[136402]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:503
			// _ = "end of CoverTab[136402]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:503
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:503
		// _ = "end of CoverTab[136396]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:503
		_go_fuzz_dep_.CoverTab[136397]++
													dAtA = encodeVarintPopulateFieldMask(dAtA, uint64(v3))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:504
		// _ = "end of CoverTab[136397]"
	case 1:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:505
		_go_fuzz_dep_.CoverTab[136398]++
													dAtA = encodeVarintPopulateFieldMask(dAtA, uint64(key))
													dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:507
		// _ = "end of CoverTab[136398]"
	case 2:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:508
		_go_fuzz_dep_.CoverTab[136399]++
													dAtA = encodeVarintPopulateFieldMask(dAtA, uint64(key))
													ll := r.Intn(100)
													dAtA = encodeVarintPopulateFieldMask(dAtA, uint64(ll))
													for j := 0; j < ll; j++ {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:512
			_go_fuzz_dep_.CoverTab[136403]++
														dAtA = append(dAtA, byte(r.Intn(256)))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:513
			// _ = "end of CoverTab[136403]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:514
		// _ = "end of CoverTab[136399]"
	default:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:515
		_go_fuzz_dep_.CoverTab[136400]++
													dAtA = encodeVarintPopulateFieldMask(dAtA, uint64(key))
													dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:517
		// _ = "end of CoverTab[136400]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:518
	// _ = "end of CoverTab[136394]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:518
	_go_fuzz_dep_.CoverTab[136395]++
												return dAtA
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:519
	// _ = "end of CoverTab[136395]"
}
func encodeVarintPopulateFieldMask(dAtA []byte, v uint64) []byte {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:521
	_go_fuzz_dep_.CoverTab[136404]++
												for v >= 1<<7 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:522
		_go_fuzz_dep_.CoverTab[136406]++
													dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
													v >>= 7
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:524
		// _ = "end of CoverTab[136406]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:525
	// _ = "end of CoverTab[136404]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:525
	_go_fuzz_dep_.CoverTab[136405]++
												dAtA = append(dAtA, uint8(v))
												return dAtA
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:527
	// _ = "end of CoverTab[136405]"
}
func (m *FieldMask) Size() (n int) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:529
	_go_fuzz_dep_.CoverTab[136407]++
												if m == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:530
		_go_fuzz_dep_.CoverTab[136411]++
													return 0
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:531
		// _ = "end of CoverTab[136411]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:532
		_go_fuzz_dep_.CoverTab[136412]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:532
		// _ = "end of CoverTab[136412]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:532
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:532
	// _ = "end of CoverTab[136407]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:532
	_go_fuzz_dep_.CoverTab[136408]++
												var l int
												_ = l
												if len(m.Paths) > 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:535
		_go_fuzz_dep_.CoverTab[136413]++
													for _, s := range m.Paths {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:536
			_go_fuzz_dep_.CoverTab[136414]++
														l = len(s)
														n += 1 + l + sovFieldMask(uint64(l))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:538
			// _ = "end of CoverTab[136414]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:539
		// _ = "end of CoverTab[136413]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:540
		_go_fuzz_dep_.CoverTab[136415]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:540
		// _ = "end of CoverTab[136415]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:540
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:540
	// _ = "end of CoverTab[136408]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:540
	_go_fuzz_dep_.CoverTab[136409]++
												if m.XXX_unrecognized != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:541
		_go_fuzz_dep_.CoverTab[136416]++
													n += len(m.XXX_unrecognized)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:542
		// _ = "end of CoverTab[136416]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:543
		_go_fuzz_dep_.CoverTab[136417]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:543
		// _ = "end of CoverTab[136417]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:543
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:543
	// _ = "end of CoverTab[136409]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:543
	_go_fuzz_dep_.CoverTab[136410]++
												return n
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:544
	// _ = "end of CoverTab[136410]"
}

func sovFieldMask(x uint64) (n int) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:547
	_go_fuzz_dep_.CoverTab[136418]++
												return (math_bits.Len64(x|1) + 6) / 7
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:548
	// _ = "end of CoverTab[136418]"
}
func sozFieldMask(x uint64) (n int) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:550
	_go_fuzz_dep_.CoverTab[136419]++
												return sovFieldMask(uint64((x << 1) ^ uint64((int64(x) >> 63))))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:551
	// _ = "end of CoverTab[136419]"
}
func (this *FieldMask) String() string {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:553
	_go_fuzz_dep_.CoverTab[136420]++
												if this == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:554
		_go_fuzz_dep_.CoverTab[136422]++
													return "nil"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:555
		// _ = "end of CoverTab[136422]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:556
		_go_fuzz_dep_.CoverTab[136423]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:556
		// _ = "end of CoverTab[136423]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:556
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:556
	// _ = "end of CoverTab[136420]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:556
	_go_fuzz_dep_.CoverTab[136421]++
												s := strings.Join([]string{`&FieldMask{`,
		`Paths:` + fmt.Sprintf("%v", this.Paths) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
												return s
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:562
	// _ = "end of CoverTab[136421]"
}
func valueToStringFieldMask(v interface{}) string {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:564
	_go_fuzz_dep_.CoverTab[136424]++
												rv := reflect.ValueOf(v)
												if rv.IsNil() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:566
		_go_fuzz_dep_.CoverTab[136426]++
													return "nil"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:567
		// _ = "end of CoverTab[136426]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:568
		_go_fuzz_dep_.CoverTab[136427]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:568
		// _ = "end of CoverTab[136427]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:568
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:568
	// _ = "end of CoverTab[136424]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:568
	_go_fuzz_dep_.CoverTab[136425]++
												pv := reflect.Indirect(rv).Interface()
												return fmt.Sprintf("*%v", pv)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:570
	// _ = "end of CoverTab[136425]"
}
func (m *FieldMask) Unmarshal(dAtA []byte) error {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:572
	_go_fuzz_dep_.CoverTab[136428]++
												l := len(dAtA)
												iNdEx := 0
												for iNdEx < l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:575
		_go_fuzz_dep_.CoverTab[136431]++
													preIndex := iNdEx
													var wire uint64
													for shift := uint(0); ; shift += 7 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:578
			_go_fuzz_dep_.CoverTab[136435]++
														if shift >= 64 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:579
				_go_fuzz_dep_.CoverTab[136438]++
															return ErrIntOverflowFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:580
				// _ = "end of CoverTab[136438]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:581
				_go_fuzz_dep_.CoverTab[136439]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:581
				// _ = "end of CoverTab[136439]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:581
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:581
			// _ = "end of CoverTab[136435]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:581
			_go_fuzz_dep_.CoverTab[136436]++
														if iNdEx >= l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:582
				_go_fuzz_dep_.CoverTab[136440]++
															return io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:583
				// _ = "end of CoverTab[136440]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:584
				_go_fuzz_dep_.CoverTab[136441]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:584
				// _ = "end of CoverTab[136441]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:584
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:584
			// _ = "end of CoverTab[136436]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:584
			_go_fuzz_dep_.CoverTab[136437]++
														b := dAtA[iNdEx]
														iNdEx++
														wire |= uint64(b&0x7F) << shift
														if b < 0x80 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:588
				_go_fuzz_dep_.CoverTab[136442]++
															break
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:589
				// _ = "end of CoverTab[136442]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:590
				_go_fuzz_dep_.CoverTab[136443]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:590
				// _ = "end of CoverTab[136443]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:590
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:590
			// _ = "end of CoverTab[136437]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:591
		// _ = "end of CoverTab[136431]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:591
		_go_fuzz_dep_.CoverTab[136432]++
													fieldNum := int32(wire >> 3)
													wireType := int(wire & 0x7)
													if wireType == 4 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:594
			_go_fuzz_dep_.CoverTab[136444]++
														return fmt.Errorf("proto: FieldMask: wiretype end group for non-group")
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:595
			// _ = "end of CoverTab[136444]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:596
			_go_fuzz_dep_.CoverTab[136445]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:596
			// _ = "end of CoverTab[136445]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:596
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:596
		// _ = "end of CoverTab[136432]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:596
		_go_fuzz_dep_.CoverTab[136433]++
													if fieldNum <= 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:597
			_go_fuzz_dep_.CoverTab[136446]++
														return fmt.Errorf("proto: FieldMask: illegal tag %d (wire type %d)", fieldNum, wire)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:598
			// _ = "end of CoverTab[136446]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:599
			_go_fuzz_dep_.CoverTab[136447]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:599
			// _ = "end of CoverTab[136447]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:599
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:599
		// _ = "end of CoverTab[136433]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:599
		_go_fuzz_dep_.CoverTab[136434]++
													switch fieldNum {
		case 1:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:601
			_go_fuzz_dep_.CoverTab[136448]++
														if wireType != 2 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:602
				_go_fuzz_dep_.CoverTab[136458]++
															return fmt.Errorf("proto: wrong wireType = %d for field Paths", wireType)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:603
				// _ = "end of CoverTab[136458]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:604
				_go_fuzz_dep_.CoverTab[136459]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:604
				// _ = "end of CoverTab[136459]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:604
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:604
			// _ = "end of CoverTab[136448]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:604
			_go_fuzz_dep_.CoverTab[136449]++
														var stringLen uint64
														for shift := uint(0); ; shift += 7 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:606
				_go_fuzz_dep_.CoverTab[136460]++
															if shift >= 64 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:607
					_go_fuzz_dep_.CoverTab[136463]++
																return ErrIntOverflowFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:608
					// _ = "end of CoverTab[136463]"
				} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:609
					_go_fuzz_dep_.CoverTab[136464]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:609
					// _ = "end of CoverTab[136464]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:609
				}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:609
				// _ = "end of CoverTab[136460]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:609
				_go_fuzz_dep_.CoverTab[136461]++
															if iNdEx >= l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:610
					_go_fuzz_dep_.CoverTab[136465]++
																return io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:611
					// _ = "end of CoverTab[136465]"
				} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:612
					_go_fuzz_dep_.CoverTab[136466]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:612
					// _ = "end of CoverTab[136466]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:612
				}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:612
				// _ = "end of CoverTab[136461]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:612
				_go_fuzz_dep_.CoverTab[136462]++
															b := dAtA[iNdEx]
															iNdEx++
															stringLen |= uint64(b&0x7F) << shift
															if b < 0x80 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:616
					_go_fuzz_dep_.CoverTab[136467]++
																break
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:617
					// _ = "end of CoverTab[136467]"
				} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:618
					_go_fuzz_dep_.CoverTab[136468]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:618
					// _ = "end of CoverTab[136468]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:618
				}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:618
				// _ = "end of CoverTab[136462]"
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:619
			// _ = "end of CoverTab[136449]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:619
			_go_fuzz_dep_.CoverTab[136450]++
														intStringLen := int(stringLen)
														if intStringLen < 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:621
				_go_fuzz_dep_.CoverTab[136469]++
															return ErrInvalidLengthFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:622
				// _ = "end of CoverTab[136469]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:623
				_go_fuzz_dep_.CoverTab[136470]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:623
				// _ = "end of CoverTab[136470]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:623
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:623
			// _ = "end of CoverTab[136450]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:623
			_go_fuzz_dep_.CoverTab[136451]++
														postIndex := iNdEx + intStringLen
														if postIndex < 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:625
				_go_fuzz_dep_.CoverTab[136471]++
															return ErrInvalidLengthFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:626
				// _ = "end of CoverTab[136471]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:627
				_go_fuzz_dep_.CoverTab[136472]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:627
				// _ = "end of CoverTab[136472]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:627
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:627
			// _ = "end of CoverTab[136451]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:627
			_go_fuzz_dep_.CoverTab[136452]++
														if postIndex > l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:628
				_go_fuzz_dep_.CoverTab[136473]++
															return io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:629
				// _ = "end of CoverTab[136473]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:630
				_go_fuzz_dep_.CoverTab[136474]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:630
				// _ = "end of CoverTab[136474]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:630
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:630
			// _ = "end of CoverTab[136452]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:630
			_go_fuzz_dep_.CoverTab[136453]++
														m.Paths = append(m.Paths, string(dAtA[iNdEx:postIndex]))
														iNdEx = postIndex
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:632
			// _ = "end of CoverTab[136453]"
		default:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:633
			_go_fuzz_dep_.CoverTab[136454]++
														iNdEx = preIndex
														skippy, err := skipFieldMask(dAtA[iNdEx:])
														if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:636
				_go_fuzz_dep_.CoverTab[136475]++
															return err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:637
				// _ = "end of CoverTab[136475]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:638
				_go_fuzz_dep_.CoverTab[136476]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:638
				// _ = "end of CoverTab[136476]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:638
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:638
			// _ = "end of CoverTab[136454]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:638
			_go_fuzz_dep_.CoverTab[136455]++
														if (skippy < 0) || func() bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:639
				_go_fuzz_dep_.CoverTab[136477]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:639
				return (iNdEx + skippy) < 0
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:639
				// _ = "end of CoverTab[136477]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:639
			}() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:639
				_go_fuzz_dep_.CoverTab[136478]++
															return ErrInvalidLengthFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:640
				// _ = "end of CoverTab[136478]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:641
				_go_fuzz_dep_.CoverTab[136479]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:641
				// _ = "end of CoverTab[136479]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:641
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:641
			// _ = "end of CoverTab[136455]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:641
			_go_fuzz_dep_.CoverTab[136456]++
														if (iNdEx + skippy) > l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:642
				_go_fuzz_dep_.CoverTab[136480]++
															return io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:643
				// _ = "end of CoverTab[136480]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:644
				_go_fuzz_dep_.CoverTab[136481]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:644
				// _ = "end of CoverTab[136481]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:644
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:644
			// _ = "end of CoverTab[136456]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:644
			_go_fuzz_dep_.CoverTab[136457]++
														m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
														iNdEx += skippy
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:646
			// _ = "end of CoverTab[136457]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:647
		// _ = "end of CoverTab[136434]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:648
	// _ = "end of CoverTab[136428]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:648
	_go_fuzz_dep_.CoverTab[136429]++

												if iNdEx > l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:650
		_go_fuzz_dep_.CoverTab[136482]++
													return io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:651
		// _ = "end of CoverTab[136482]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:652
		_go_fuzz_dep_.CoverTab[136483]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:652
		// _ = "end of CoverTab[136483]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:652
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:652
	// _ = "end of CoverTab[136429]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:652
	_go_fuzz_dep_.CoverTab[136430]++
												return nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:653
	// _ = "end of CoverTab[136430]"
}
func skipFieldMask(dAtA []byte) (n int, err error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:655
	_go_fuzz_dep_.CoverTab[136484]++
												l := len(dAtA)
												iNdEx := 0
												depth := 0
												for iNdEx < l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:659
		_go_fuzz_dep_.CoverTab[136486]++
													var wire uint64
													for shift := uint(0); ; shift += 7 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:661
			_go_fuzz_dep_.CoverTab[136490]++
														if shift >= 64 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:662
				_go_fuzz_dep_.CoverTab[136493]++
															return 0, ErrIntOverflowFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:663
				// _ = "end of CoverTab[136493]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:664
				_go_fuzz_dep_.CoverTab[136494]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:664
				// _ = "end of CoverTab[136494]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:664
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:664
			// _ = "end of CoverTab[136490]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:664
			_go_fuzz_dep_.CoverTab[136491]++
														if iNdEx >= l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:665
				_go_fuzz_dep_.CoverTab[136495]++
															return 0, io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:666
				// _ = "end of CoverTab[136495]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:667
				_go_fuzz_dep_.CoverTab[136496]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:667
				// _ = "end of CoverTab[136496]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:667
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:667
			// _ = "end of CoverTab[136491]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:667
			_go_fuzz_dep_.CoverTab[136492]++
														b := dAtA[iNdEx]
														iNdEx++
														wire |= (uint64(b) & 0x7F) << shift
														if b < 0x80 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:671
				_go_fuzz_dep_.CoverTab[136497]++
															break
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:672
				// _ = "end of CoverTab[136497]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:673
				_go_fuzz_dep_.CoverTab[136498]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:673
				// _ = "end of CoverTab[136498]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:673
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:673
			// _ = "end of CoverTab[136492]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:674
		// _ = "end of CoverTab[136486]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:674
		_go_fuzz_dep_.CoverTab[136487]++
													wireType := int(wire & 0x7)
													switch wireType {
		case 0:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:677
			_go_fuzz_dep_.CoverTab[136499]++
														for shift := uint(0); ; shift += 7 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:678
				_go_fuzz_dep_.CoverTab[136509]++
															if shift >= 64 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:679
					_go_fuzz_dep_.CoverTab[136512]++
																return 0, ErrIntOverflowFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:680
					// _ = "end of CoverTab[136512]"
				} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:681
					_go_fuzz_dep_.CoverTab[136513]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:681
					// _ = "end of CoverTab[136513]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:681
				}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:681
				// _ = "end of CoverTab[136509]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:681
				_go_fuzz_dep_.CoverTab[136510]++
															if iNdEx >= l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:682
					_go_fuzz_dep_.CoverTab[136514]++
																return 0, io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:683
					// _ = "end of CoverTab[136514]"
				} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:684
					_go_fuzz_dep_.CoverTab[136515]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:684
					// _ = "end of CoverTab[136515]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:684
				}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:684
				// _ = "end of CoverTab[136510]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:684
				_go_fuzz_dep_.CoverTab[136511]++
															iNdEx++
															if dAtA[iNdEx-1] < 0x80 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:686
					_go_fuzz_dep_.CoverTab[136516]++
																break
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:687
					// _ = "end of CoverTab[136516]"
				} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:688
					_go_fuzz_dep_.CoverTab[136517]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:688
					// _ = "end of CoverTab[136517]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:688
				}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:688
				// _ = "end of CoverTab[136511]"
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:689
			// _ = "end of CoverTab[136499]"
		case 1:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:690
			_go_fuzz_dep_.CoverTab[136500]++
														iNdEx += 8
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:691
			// _ = "end of CoverTab[136500]"
		case 2:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:692
			_go_fuzz_dep_.CoverTab[136501]++
														var length int
														for shift := uint(0); ; shift += 7 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:694
				_go_fuzz_dep_.CoverTab[136518]++
															if shift >= 64 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:695
					_go_fuzz_dep_.CoverTab[136521]++
																return 0, ErrIntOverflowFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:696
					// _ = "end of CoverTab[136521]"
				} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:697
					_go_fuzz_dep_.CoverTab[136522]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:697
					// _ = "end of CoverTab[136522]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:697
				}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:697
				// _ = "end of CoverTab[136518]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:697
				_go_fuzz_dep_.CoverTab[136519]++
															if iNdEx >= l {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:698
					_go_fuzz_dep_.CoverTab[136523]++
																return 0, io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:699
					// _ = "end of CoverTab[136523]"
				} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:700
					_go_fuzz_dep_.CoverTab[136524]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:700
					// _ = "end of CoverTab[136524]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:700
				}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:700
				// _ = "end of CoverTab[136519]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:700
				_go_fuzz_dep_.CoverTab[136520]++
															b := dAtA[iNdEx]
															iNdEx++
															length |= (int(b) & 0x7F) << shift
															if b < 0x80 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:704
					_go_fuzz_dep_.CoverTab[136525]++
																break
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:705
					// _ = "end of CoverTab[136525]"
				} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:706
					_go_fuzz_dep_.CoverTab[136526]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:706
					// _ = "end of CoverTab[136526]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:706
				}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:706
				// _ = "end of CoverTab[136520]"
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:707
			// _ = "end of CoverTab[136501]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:707
			_go_fuzz_dep_.CoverTab[136502]++
														if length < 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:708
				_go_fuzz_dep_.CoverTab[136527]++
															return 0, ErrInvalidLengthFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:709
				// _ = "end of CoverTab[136527]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:710
				_go_fuzz_dep_.CoverTab[136528]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:710
				// _ = "end of CoverTab[136528]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:710
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:710
			// _ = "end of CoverTab[136502]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:710
			_go_fuzz_dep_.CoverTab[136503]++
														iNdEx += length
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:711
			// _ = "end of CoverTab[136503]"
		case 3:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:712
			_go_fuzz_dep_.CoverTab[136504]++
														depth++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:713
			// _ = "end of CoverTab[136504]"
		case 4:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:714
			_go_fuzz_dep_.CoverTab[136505]++
														if depth == 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:715
				_go_fuzz_dep_.CoverTab[136529]++
															return 0, ErrUnexpectedEndOfGroupFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:716
				// _ = "end of CoverTab[136529]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:717
				_go_fuzz_dep_.CoverTab[136530]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:717
				// _ = "end of CoverTab[136530]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:717
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:717
			// _ = "end of CoverTab[136505]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:717
			_go_fuzz_dep_.CoverTab[136506]++
														depth--
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:718
			// _ = "end of CoverTab[136506]"
		case 5:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:719
			_go_fuzz_dep_.CoverTab[136507]++
														iNdEx += 4
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:720
			// _ = "end of CoverTab[136507]"
		default:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:721
			_go_fuzz_dep_.CoverTab[136508]++
														return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:722
			// _ = "end of CoverTab[136508]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:723
		// _ = "end of CoverTab[136487]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:723
		_go_fuzz_dep_.CoverTab[136488]++
													if iNdEx < 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:724
			_go_fuzz_dep_.CoverTab[136531]++
														return 0, ErrInvalidLengthFieldMask
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:725
			// _ = "end of CoverTab[136531]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:726
			_go_fuzz_dep_.CoverTab[136532]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:726
			// _ = "end of CoverTab[136532]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:726
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:726
		// _ = "end of CoverTab[136488]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:726
		_go_fuzz_dep_.CoverTab[136489]++
													if depth == 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:727
			_go_fuzz_dep_.CoverTab[136533]++
														return iNdEx, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:728
			// _ = "end of CoverTab[136533]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:729
			_go_fuzz_dep_.CoverTab[136534]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:729
			// _ = "end of CoverTab[136534]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:729
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:729
		// _ = "end of CoverTab[136489]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:730
	// _ = "end of CoverTab[136484]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:730
	_go_fuzz_dep_.CoverTab[136485]++
												return 0, io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:731
	// _ = "end of CoverTab[136485]"
}

var (
	ErrInvalidLengthFieldMask		= fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFieldMask			= fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFieldMask	= fmt.Errorf("proto: unexpected end of group")
)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:738
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/types/field_mask.pb.go:738
var _ = _go_fuzz_dep_.CoverTab
