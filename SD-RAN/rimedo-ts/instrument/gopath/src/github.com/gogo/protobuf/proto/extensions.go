// Go support for Protocol Buffers - Google's data interchange format
//
// Copyright 2010 The Go Authors.  All rights reserved.
// https://github.com/golang/protobuf
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:32
package proto

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:32
import (
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:32
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:32
)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:32
import (
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:32
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:32
)

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:38
import (
	"errors"
	"fmt"
	"io"
	"reflect"
	"strconv"
	"sync"
)

// ErrMissingExtension is the error returned by GetExtension if the named extension is not in the message.
var ErrMissingExtension = errors.New("proto: missing extension")

// ExtensionRange represents a range of message extensions for a protocol buffer.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:50
// Used in code generated by the protocol compiler.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:52
type ExtensionRange struct {
	Start, End int32	// both inclusive
}

// extendableProto is an interface implemented by any protocol buffer generated by the current
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:56
// proto compiler that may be extended.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:58
type extendableProto interface {
	Message
	ExtensionRangeArray() []ExtensionRange
	extensionsWrite() map[int32]Extension
	extensionsRead() (map[int32]Extension, sync.Locker)
}

// extendableProtoV1 is an interface implemented by a protocol buffer generated by the previous
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:65
// version of the proto compiler that may be extended.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:67
type extendableProtoV1 interface {
	Message
	ExtensionRangeArray() []ExtensionRange
	ExtensionMap() map[int32]Extension
}

// extensionAdapter is a wrapper around extendableProtoV1 that implements extendableProto.
type extensionAdapter struct {
	extendableProtoV1
}

func (e extensionAdapter) extensionsWrite() map[int32]Extension {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:78
	_go_fuzz_dep_.CoverTab[108172]++
												return e.ExtensionMap()
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:79
	// _ = "end of CoverTab[108172]"
}

func (e extensionAdapter) extensionsRead() (map[int32]Extension, sync.Locker) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:82
	_go_fuzz_dep_.CoverTab[108173]++
												return e.ExtensionMap(), notLocker{}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:83
	// _ = "end of CoverTab[108173]"
}

// notLocker is a sync.Locker whose Lock and Unlock methods are nops.
type notLocker struct{}

func (n notLocker) Lock()	{ _go_fuzz_dep_.CoverTab[108174]++; // _ = "end of CoverTab[108174]" }
func (n notLocker) Unlock()	{ _go_fuzz_dep_.CoverTab[108175]++; // _ = "end of CoverTab[108175]" }

// extendable returns the extendableProto interface for the given generated proto message.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:92
// If the proto message has the old extension format, it returns a wrapper that implements
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:92
// the extendableProto interface.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:95
func extendable(p interface{}) (extendableProto, error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:95
	_go_fuzz_dep_.CoverTab[108176]++
												switch p := p.(type) {
	case extendableProto:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:97
		_go_fuzz_dep_.CoverTab[108178]++
													if isNilPtr(p) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:98
			_go_fuzz_dep_.CoverTab[108183]++
														return nil, fmt.Errorf("proto: nil %T is not extendable", p)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:99
			// _ = "end of CoverTab[108183]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:100
			_go_fuzz_dep_.CoverTab[108184]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:100
			// _ = "end of CoverTab[108184]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:100
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:100
		// _ = "end of CoverTab[108178]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:100
		_go_fuzz_dep_.CoverTab[108179]++
													return p, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:101
		// _ = "end of CoverTab[108179]"
	case extendableProtoV1:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:102
		_go_fuzz_dep_.CoverTab[108180]++
													if isNilPtr(p) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:103
			_go_fuzz_dep_.CoverTab[108185]++
														return nil, fmt.Errorf("proto: nil %T is not extendable", p)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:104
			// _ = "end of CoverTab[108185]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:105
			_go_fuzz_dep_.CoverTab[108186]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:105
			// _ = "end of CoverTab[108186]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:105
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:105
		// _ = "end of CoverTab[108180]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:105
		_go_fuzz_dep_.CoverTab[108181]++
													return extensionAdapter{p}, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:106
		// _ = "end of CoverTab[108181]"
	case extensionsBytes:
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:107
		_go_fuzz_dep_.CoverTab[108182]++
													return slowExtensionAdapter{p}, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:108
		// _ = "end of CoverTab[108182]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:109
	// _ = "end of CoverTab[108176]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:109
	_go_fuzz_dep_.CoverTab[108177]++

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:112
	return nil, errNotExtendable
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:112
	// _ = "end of CoverTab[108177]"
}

var errNotExtendable = errors.New("proto: not an extendable proto.Message")

func isNilPtr(x interface{}) bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:117
	_go_fuzz_dep_.CoverTab[108187]++
												v := reflect.ValueOf(x)
												return v.Kind() == reflect.Ptr && func() bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:119
		_go_fuzz_dep_.CoverTab[108188]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:119
		return v.IsNil()
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:119
		// _ = "end of CoverTab[108188]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:119
	}()
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:119
	// _ = "end of CoverTab[108187]"
}

// XXX_InternalExtensions is an internal representation of proto extensions.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:122
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:122
// Each generated message struct type embeds an anonymous XXX_InternalExtensions field,
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:122
// thus gaining the unexported 'extensions' method, which can be called only from the proto package.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:122
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:122
// The methods of XXX_InternalExtensions are not concurrency safe in general,
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:122
// but calls to logically read-only methods such as has and get may be executed concurrently.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:129
type XXX_InternalExtensions struct {
	// The struct must be indirect so that if a user inadvertently copies a
	// generated message and its embedded XXX_InternalExtensions, they
	// avoid the mayhem of a copied mutex.
	//
	// The mutex serializes all logically read-only operations to p.extensionMap.
	// It is up to the client to ensure that write operations to p.extensionMap are
	// mutually exclusive with other accesses.
	p *struct {
		mu		sync.Mutex
		extensionMap	map[int32]Extension
	}
}

// extensionsWrite returns the extension map, creating it on first use.
func (e *XXX_InternalExtensions) extensionsWrite() map[int32]Extension {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:144
	_go_fuzz_dep_.CoverTab[108189]++
												if e.p == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:145
		_go_fuzz_dep_.CoverTab[108191]++
													e.p = new(struct {
			mu		sync.Mutex
			extensionMap	map[int32]Extension
		})
													e.p.extensionMap = make(map[int32]Extension)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:150
		// _ = "end of CoverTab[108191]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:151
		_go_fuzz_dep_.CoverTab[108192]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:151
		// _ = "end of CoverTab[108192]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:151
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:151
	// _ = "end of CoverTab[108189]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:151
	_go_fuzz_dep_.CoverTab[108190]++
												return e.p.extensionMap
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:152
	// _ = "end of CoverTab[108190]"
}

// extensionsRead returns the extensions map for read-only use.  It may be nil.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:155
// The caller must hold the returned mutex's lock when accessing Elements within the map.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:157
func (e *XXX_InternalExtensions) extensionsRead() (map[int32]Extension, sync.Locker) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:157
	_go_fuzz_dep_.CoverTab[108193]++
												if e.p == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:158
		_go_fuzz_dep_.CoverTab[108195]++
													return nil, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:159
		// _ = "end of CoverTab[108195]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:160
		_go_fuzz_dep_.CoverTab[108196]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:160
		// _ = "end of CoverTab[108196]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:160
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:160
	// _ = "end of CoverTab[108193]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:160
	_go_fuzz_dep_.CoverTab[108194]++
												return e.p.extensionMap, &e.p.mu
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:161
	// _ = "end of CoverTab[108194]"
}

// ExtensionDesc represents an extension specification.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:164
// Used in generated code from the protocol compiler.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:166
type ExtensionDesc struct {
	ExtendedType	Message		// nil pointer to the type that is being extended
	ExtensionType	interface{}	// nil pointer to the extension type
	Field		int32		// field number
	Name		string		// fully-qualified name of extension, for text formatting
	Tag		string		// protobuf tag style
	Filename	string		// name of the file in which the extension is defined
}

func (ed *ExtensionDesc) repeated() bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:175
	_go_fuzz_dep_.CoverTab[108197]++
												t := reflect.TypeOf(ed.ExtensionType)
												return t.Kind() == reflect.Slice && func() bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:177
		_go_fuzz_dep_.CoverTab[108198]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:177
		return t.Elem().Kind() != reflect.Uint8
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:177
		// _ = "end of CoverTab[108198]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:177
	}()
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:177
	// _ = "end of CoverTab[108197]"
}

// Extension represents an extension in a message.
type Extension struct {
	// When an extension is stored in a message using SetExtension
	// only desc and value are set. When the message is marshaled
	// enc will be set to the encoded form of the message.
	//
	// When a message is unmarshaled and contains extensions, each
	// extension will have only enc set. When such an extension is
	// accessed using GetExtension (or GetExtensions) desc and value
	// will be set.
	desc	*ExtensionDesc
	value	interface{}
	enc	[]byte
}

// SetRawExtension is for testing only.
func SetRawExtension(base Message, id int32, b []byte) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:196
	_go_fuzz_dep_.CoverTab[108199]++
												if ebase, ok := base.(extensionsBytes); ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:197
		_go_fuzz_dep_.CoverTab[108202]++
													clearExtension(base, id)
													ext := ebase.GetExtensions()
													*ext = append(*ext, b...)
													return
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:201
		// _ = "end of CoverTab[108202]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:202
		_go_fuzz_dep_.CoverTab[108203]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:202
		// _ = "end of CoverTab[108203]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:202
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:202
	// _ = "end of CoverTab[108199]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:202
	_go_fuzz_dep_.CoverTab[108200]++
												epb, err := extendable(base)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:204
		_go_fuzz_dep_.CoverTab[108204]++
													return
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:205
		// _ = "end of CoverTab[108204]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:206
		_go_fuzz_dep_.CoverTab[108205]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:206
		// _ = "end of CoverTab[108205]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:206
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:206
	// _ = "end of CoverTab[108200]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:206
	_go_fuzz_dep_.CoverTab[108201]++
												extmap := epb.extensionsWrite()
												extmap[id] = Extension{enc: b}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:208
	// _ = "end of CoverTab[108201]"
}

// isExtensionField returns true iff the given field number is in an extension range.
func isExtensionField(pb extendableProto, field int32) bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:212
	_go_fuzz_dep_.CoverTab[108206]++
												for _, er := range pb.ExtensionRangeArray() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:213
		_go_fuzz_dep_.CoverTab[108208]++
													if er.Start <= field && func() bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:214
			_go_fuzz_dep_.CoverTab[108209]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:214
			return field <= er.End
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:214
			// _ = "end of CoverTab[108209]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:214
		}() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:214
			_go_fuzz_dep_.CoverTab[108210]++
														return true
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:215
			// _ = "end of CoverTab[108210]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:216
			_go_fuzz_dep_.CoverTab[108211]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:216
			// _ = "end of CoverTab[108211]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:216
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:216
		// _ = "end of CoverTab[108208]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:217
	// _ = "end of CoverTab[108206]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:217
	_go_fuzz_dep_.CoverTab[108207]++
												return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:218
	// _ = "end of CoverTab[108207]"
}

// checkExtensionTypes checks that the given extension is valid for pb.
func checkExtensionTypes(pb extendableProto, extension *ExtensionDesc) error {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:222
	_go_fuzz_dep_.CoverTab[108212]++
												var pbi interface{} = pb

												if ea, ok := pbi.(extensionAdapter); ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:225
		_go_fuzz_dep_.CoverTab[108217]++
													pbi = ea.extendableProtoV1
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:226
		// _ = "end of CoverTab[108217]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:227
		_go_fuzz_dep_.CoverTab[108218]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:227
		// _ = "end of CoverTab[108218]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:227
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:227
	// _ = "end of CoverTab[108212]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:227
	_go_fuzz_dep_.CoverTab[108213]++
												if ea, ok := pbi.(slowExtensionAdapter); ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:228
		_go_fuzz_dep_.CoverTab[108219]++
													pbi = ea.extensionsBytes
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:229
		// _ = "end of CoverTab[108219]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:230
		_go_fuzz_dep_.CoverTab[108220]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:230
		// _ = "end of CoverTab[108220]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:230
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:230
	// _ = "end of CoverTab[108213]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:230
	_go_fuzz_dep_.CoverTab[108214]++
												if a, b := reflect.TypeOf(pbi), reflect.TypeOf(extension.ExtendedType); a != b {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:231
		_go_fuzz_dep_.CoverTab[108221]++
													return fmt.Errorf("proto: bad extended type; %v does not extend %v", b, a)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:232
		// _ = "end of CoverTab[108221]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:233
		_go_fuzz_dep_.CoverTab[108222]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:233
		// _ = "end of CoverTab[108222]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:233
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:233
	// _ = "end of CoverTab[108214]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:233
	_go_fuzz_dep_.CoverTab[108215]++

												if !isExtensionField(pb, extension.Field) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:235
		_go_fuzz_dep_.CoverTab[108223]++
													return errors.New("proto: bad extension number; not in declared ranges")
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:236
		// _ = "end of CoverTab[108223]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:237
		_go_fuzz_dep_.CoverTab[108224]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:237
		// _ = "end of CoverTab[108224]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:237
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:237
	// _ = "end of CoverTab[108215]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:237
	_go_fuzz_dep_.CoverTab[108216]++
												return nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:238
	// _ = "end of CoverTab[108216]"
}

// extPropKey is sufficient to uniquely identify an extension.
type extPropKey struct {
	base	reflect.Type
	field	int32
}

var extProp = struct {
	sync.RWMutex
	m	map[extPropKey]*Properties
}{
	m: make(map[extPropKey]*Properties),
}

func extensionProperties(ed *ExtensionDesc) *Properties {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:254
	_go_fuzz_dep_.CoverTab[108225]++
												key := extPropKey{base: reflect.TypeOf(ed.ExtendedType), field: ed.Field}

												extProp.RLock()
												if prop, ok := extProp.m[key]; ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:258
		_go_fuzz_dep_.CoverTab[108228]++
													extProp.RUnlock()
													return prop
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:260
		// _ = "end of CoverTab[108228]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:261
		_go_fuzz_dep_.CoverTab[108229]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:261
		// _ = "end of CoverTab[108229]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:261
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:261
	// _ = "end of CoverTab[108225]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:261
	_go_fuzz_dep_.CoverTab[108226]++
												extProp.RUnlock()

												extProp.Lock()
												defer extProp.Unlock()

												if prop, ok := extProp.m[key]; ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:267
		_go_fuzz_dep_.CoverTab[108230]++
													return prop
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:268
		// _ = "end of CoverTab[108230]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:269
		_go_fuzz_dep_.CoverTab[108231]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:269
		// _ = "end of CoverTab[108231]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:269
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:269
	// _ = "end of CoverTab[108226]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:269
	_go_fuzz_dep_.CoverTab[108227]++

												prop := new(Properties)
												prop.Init(reflect.TypeOf(ed.ExtensionType), "unknown_name", ed.Tag, nil)
												extProp.m[key] = prop
												return prop
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:274
	// _ = "end of CoverTab[108227]"
}

// HasExtension returns whether the given extension is present in pb.
func HasExtension(pb Message, extension *ExtensionDesc) bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:278
	_go_fuzz_dep_.CoverTab[108232]++
												if epb, doki := pb.(extensionsBytes); doki {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:279
		_go_fuzz_dep_.CoverTab[108236]++
													ext := epb.GetExtensions()
													buf := *ext
													o := 0
													for o < len(buf) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:283
			_go_fuzz_dep_.CoverTab[108238]++
														tag, n := DecodeVarint(buf[o:])
														fieldNum := int32(tag >> 3)
														if int32(fieldNum) == extension.Field {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:286
				_go_fuzz_dep_.CoverTab[108241]++
															return true
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:287
				// _ = "end of CoverTab[108241]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:288
				_go_fuzz_dep_.CoverTab[108242]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:288
				// _ = "end of CoverTab[108242]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:288
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:288
			// _ = "end of CoverTab[108238]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:288
			_go_fuzz_dep_.CoverTab[108239]++
														wireType := int(tag & 0x7)
														o += n
														l, err := size(buf[o:], wireType)
														if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:292
				_go_fuzz_dep_.CoverTab[108243]++
															return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:293
				// _ = "end of CoverTab[108243]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:294
				_go_fuzz_dep_.CoverTab[108244]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:294
				// _ = "end of CoverTab[108244]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:294
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:294
			// _ = "end of CoverTab[108239]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:294
			_go_fuzz_dep_.CoverTab[108240]++
														o += l
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:295
			// _ = "end of CoverTab[108240]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:296
		// _ = "end of CoverTab[108236]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:296
		_go_fuzz_dep_.CoverTab[108237]++
													return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:297
		// _ = "end of CoverTab[108237]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:298
		_go_fuzz_dep_.CoverTab[108245]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:298
		// _ = "end of CoverTab[108245]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:298
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:298
	// _ = "end of CoverTab[108232]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:298
	_go_fuzz_dep_.CoverTab[108233]++

												epb, err := extendable(pb)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:301
		_go_fuzz_dep_.CoverTab[108246]++
													return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:302
		// _ = "end of CoverTab[108246]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:303
		_go_fuzz_dep_.CoverTab[108247]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:303
		// _ = "end of CoverTab[108247]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:303
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:303
	// _ = "end of CoverTab[108233]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:303
	_go_fuzz_dep_.CoverTab[108234]++
												extmap, mu := epb.extensionsRead()
												if extmap == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:305
		_go_fuzz_dep_.CoverTab[108248]++
													return false
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:306
		// _ = "end of CoverTab[108248]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:307
		_go_fuzz_dep_.CoverTab[108249]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:307
		// _ = "end of CoverTab[108249]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:307
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:307
	// _ = "end of CoverTab[108234]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:307
	_go_fuzz_dep_.CoverTab[108235]++
												mu.Lock()
												_, ok := extmap[extension.Field]
												mu.Unlock()
												return ok
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:311
	// _ = "end of CoverTab[108235]"
}

// ClearExtension removes the given extension from pb.
func ClearExtension(pb Message, extension *ExtensionDesc) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:315
	_go_fuzz_dep_.CoverTab[108250]++
												clearExtension(pb, extension.Field)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:316
	// _ = "end of CoverTab[108250]"
}

func clearExtension(pb Message, fieldNum int32) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:319
	_go_fuzz_dep_.CoverTab[108251]++
												if epb, ok := pb.(extensionsBytes); ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:320
		_go_fuzz_dep_.CoverTab[108254]++
													offset := 0
													for offset != -1 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:322
			_go_fuzz_dep_.CoverTab[108256]++
														offset = deleteExtension(epb, fieldNum, offset)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:323
			// _ = "end of CoverTab[108256]"
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:324
		// _ = "end of CoverTab[108254]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:324
		_go_fuzz_dep_.CoverTab[108255]++
													return
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:325
		// _ = "end of CoverTab[108255]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:326
		_go_fuzz_dep_.CoverTab[108257]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:326
		// _ = "end of CoverTab[108257]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:326
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:326
	// _ = "end of CoverTab[108251]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:326
	_go_fuzz_dep_.CoverTab[108252]++
												epb, err := extendable(pb)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:328
		_go_fuzz_dep_.CoverTab[108258]++
													return
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:329
		// _ = "end of CoverTab[108258]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:330
		_go_fuzz_dep_.CoverTab[108259]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:330
		// _ = "end of CoverTab[108259]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:330
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:330
	// _ = "end of CoverTab[108252]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:330
	_go_fuzz_dep_.CoverTab[108253]++

												extmap := epb.extensionsWrite()
												delete(extmap, fieldNum)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:333
	// _ = "end of CoverTab[108253]"
}

// GetExtension retrieves a proto2 extended field from pb.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:336
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:336
// If the descriptor is type complete (i.e., ExtensionDesc.ExtensionType is non-nil),
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:336
// then GetExtension parses the encoded field and returns a Go value of the specified type.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:336
// If the field is not present, then the default value is returned (if one is specified),
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:336
// otherwise ErrMissingExtension is reported.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:336
//
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:336
// If the descriptor is not type complete (i.e., ExtensionDesc.ExtensionType is nil),
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:336
// then GetExtension returns the raw encoded bytes of the field extension.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:345
func GetExtension(pb Message, extension *ExtensionDesc) (interface{}, error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:345
	_go_fuzz_dep_.CoverTab[108260]++
												if epb, doki := pb.(extensionsBytes); doki {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:346
		_go_fuzz_dep_.CoverTab[108269]++
													ext := epb.GetExtensions()
													return decodeExtensionFromBytes(extension, *ext)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:348
		// _ = "end of CoverTab[108269]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:349
		_go_fuzz_dep_.CoverTab[108270]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:349
		// _ = "end of CoverTab[108270]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:349
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:349
	// _ = "end of CoverTab[108260]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:349
	_go_fuzz_dep_.CoverTab[108261]++

												epb, err := extendable(pb)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:352
		_go_fuzz_dep_.CoverTab[108271]++
													return nil, err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:353
		// _ = "end of CoverTab[108271]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:354
		_go_fuzz_dep_.CoverTab[108272]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:354
		// _ = "end of CoverTab[108272]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:354
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:354
	// _ = "end of CoverTab[108261]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:354
	_go_fuzz_dep_.CoverTab[108262]++

												if extension.ExtendedType != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:356
		_go_fuzz_dep_.CoverTab[108273]++

													if cerr := checkExtensionTypes(epb, extension); cerr != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:358
			_go_fuzz_dep_.CoverTab[108274]++
														return nil, cerr
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:359
			// _ = "end of CoverTab[108274]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:360
			_go_fuzz_dep_.CoverTab[108275]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:360
			// _ = "end of CoverTab[108275]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:360
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:360
		// _ = "end of CoverTab[108273]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:361
		_go_fuzz_dep_.CoverTab[108276]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:361
		// _ = "end of CoverTab[108276]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:361
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:361
	// _ = "end of CoverTab[108262]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:361
	_go_fuzz_dep_.CoverTab[108263]++

												emap, mu := epb.extensionsRead()
												if emap == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:364
		_go_fuzz_dep_.CoverTab[108277]++
													return defaultExtensionValue(extension)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:365
		// _ = "end of CoverTab[108277]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:366
		_go_fuzz_dep_.CoverTab[108278]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:366
		// _ = "end of CoverTab[108278]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:366
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:366
	// _ = "end of CoverTab[108263]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:366
	_go_fuzz_dep_.CoverTab[108264]++
												mu.Lock()
												defer mu.Unlock()
												e, ok := emap[extension.Field]
												if !ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:370
		_go_fuzz_dep_.CoverTab[108279]++

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:373
		return defaultExtensionValue(extension)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:373
		// _ = "end of CoverTab[108279]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:374
		_go_fuzz_dep_.CoverTab[108280]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:374
		// _ = "end of CoverTab[108280]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:374
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:374
	// _ = "end of CoverTab[108264]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:374
	_go_fuzz_dep_.CoverTab[108265]++

												if e.value != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:376
		_go_fuzz_dep_.CoverTab[108281]++

													if e.desc != extension {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:378
			_go_fuzz_dep_.CoverTab[108283]++

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:382
			return nil, errors.New("proto: descriptor conflict")
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:382
			// _ = "end of CoverTab[108283]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:383
			_go_fuzz_dep_.CoverTab[108284]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:383
			// _ = "end of CoverTab[108284]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:383
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:383
		// _ = "end of CoverTab[108281]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:383
		_go_fuzz_dep_.CoverTab[108282]++
													return e.value, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:384
		// _ = "end of CoverTab[108282]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:385
		_go_fuzz_dep_.CoverTab[108285]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:385
		// _ = "end of CoverTab[108285]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:385
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:385
	// _ = "end of CoverTab[108265]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:385
	_go_fuzz_dep_.CoverTab[108266]++

												if extension.ExtensionType == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:387
		_go_fuzz_dep_.CoverTab[108286]++

													return e.enc, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:389
		// _ = "end of CoverTab[108286]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:390
		_go_fuzz_dep_.CoverTab[108287]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:390
		// _ = "end of CoverTab[108287]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:390
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:390
	// _ = "end of CoverTab[108266]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:390
	_go_fuzz_dep_.CoverTab[108267]++

												v, err := decodeExtension(e.enc, extension)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:393
		_go_fuzz_dep_.CoverTab[108288]++
													return nil, err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:394
		// _ = "end of CoverTab[108288]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:395
		_go_fuzz_dep_.CoverTab[108289]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:395
		// _ = "end of CoverTab[108289]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:395
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:395
	// _ = "end of CoverTab[108267]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:395
	_go_fuzz_dep_.CoverTab[108268]++

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:399
	e.value = v
												e.desc = extension
												e.enc = nil
												emap[extension.Field] = e
												return e.value, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:403
	// _ = "end of CoverTab[108268]"
}

// defaultExtensionValue returns the default value for extension.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:406
// If no default for an extension is defined ErrMissingExtension is returned.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:408
func defaultExtensionValue(extension *ExtensionDesc) (interface{}, error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:408
	_go_fuzz_dep_.CoverTab[108290]++
												if extension.ExtensionType == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:409
		_go_fuzz_dep_.CoverTab[108296]++

													return nil, ErrMissingExtension
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:411
		// _ = "end of CoverTab[108296]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:412
		_go_fuzz_dep_.CoverTab[108297]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:412
		// _ = "end of CoverTab[108297]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:412
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:412
	// _ = "end of CoverTab[108290]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:412
	_go_fuzz_dep_.CoverTab[108291]++

												t := reflect.TypeOf(extension.ExtensionType)
												props := extensionProperties(extension)

												sf, _, err := fieldDefault(t, props)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:418
		_go_fuzz_dep_.CoverTab[108298]++
													return nil, err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:419
		// _ = "end of CoverTab[108298]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:420
		_go_fuzz_dep_.CoverTab[108299]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:420
		// _ = "end of CoverTab[108299]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:420
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:420
	// _ = "end of CoverTab[108291]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:420
	_go_fuzz_dep_.CoverTab[108292]++

												if sf == nil || func() bool {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:422
		_go_fuzz_dep_.CoverTab[108300]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:422
		return sf.value == nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:422
		// _ = "end of CoverTab[108300]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:422
	}() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:422
		_go_fuzz_dep_.CoverTab[108301]++

													return nil, ErrMissingExtension
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:424
		// _ = "end of CoverTab[108301]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:425
		_go_fuzz_dep_.CoverTab[108302]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:425
		// _ = "end of CoverTab[108302]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:425
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:425
	// _ = "end of CoverTab[108292]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:425
	_go_fuzz_dep_.CoverTab[108293]++

												if t.Kind() != reflect.Ptr {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:427
		_go_fuzz_dep_.CoverTab[108303]++

													return sf.value, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:429
		// _ = "end of CoverTab[108303]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:430
		_go_fuzz_dep_.CoverTab[108304]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:430
		// _ = "end of CoverTab[108304]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:430
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:430
	// _ = "end of CoverTab[108293]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:430
	_go_fuzz_dep_.CoverTab[108294]++

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:433
	value := reflect.New(t).Elem()
	value.Set(reflect.New(value.Type().Elem()))
	if sf.kind == reflect.Int32 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:435
		_go_fuzz_dep_.CoverTab[108305]++

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:439
		value.Elem().SetInt(int64(sf.value.(int32)))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:439
		// _ = "end of CoverTab[108305]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:440
		_go_fuzz_dep_.CoverTab[108306]++
													value.Elem().Set(reflect.ValueOf(sf.value))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:441
		// _ = "end of CoverTab[108306]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:442
	// _ = "end of CoverTab[108294]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:442
	_go_fuzz_dep_.CoverTab[108295]++
												return value.Interface(), nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:443
	// _ = "end of CoverTab[108295]"
}

// decodeExtension decodes an extension encoded in b.
func decodeExtension(b []byte, extension *ExtensionDesc) (interface{}, error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:447
	_go_fuzz_dep_.CoverTab[108307]++
												t := reflect.TypeOf(extension.ExtensionType)
												unmarshal := typeUnmarshaler(t, extension.Tag)

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:453
	value := reflect.New(t).Elem()

	var err error
	for {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:456
		_go_fuzz_dep_.CoverTab[108309]++
													x, n := decodeVarint(b)
													if n == 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:458
			_go_fuzz_dep_.CoverTab[108312]++
														return nil, io.ErrUnexpectedEOF
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:459
			// _ = "end of CoverTab[108312]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:460
			_go_fuzz_dep_.CoverTab[108313]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:460
			// _ = "end of CoverTab[108313]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:460
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:460
		// _ = "end of CoverTab[108309]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:460
		_go_fuzz_dep_.CoverTab[108310]++
													b = b[n:]
													wire := int(x) & 7

													b, err = unmarshal(b, valToPointer(value.Addr()), wire)
													if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:465
			_go_fuzz_dep_.CoverTab[108314]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:466
			// _ = "end of CoverTab[108314]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:467
			_go_fuzz_dep_.CoverTab[108315]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:467
			// _ = "end of CoverTab[108315]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:467
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:467
		// _ = "end of CoverTab[108310]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:467
		_go_fuzz_dep_.CoverTab[108311]++

													if len(b) == 0 {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:469
			_go_fuzz_dep_.CoverTab[108316]++
														break
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:470
			// _ = "end of CoverTab[108316]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:471
			_go_fuzz_dep_.CoverTab[108317]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:471
			// _ = "end of CoverTab[108317]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:471
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:471
		// _ = "end of CoverTab[108311]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:472
	// _ = "end of CoverTab[108307]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:472
	_go_fuzz_dep_.CoverTab[108308]++
												return value.Interface(), nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:473
	// _ = "end of CoverTab[108308]"
}

// GetExtensions returns a slice of the extensions present in pb that are also listed in es.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:476
// The returned slice has the same length as es; missing extensions will appear as nil elements.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:478
func GetExtensions(pb Message, es []*ExtensionDesc) (extensions []interface{}, err error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:478
	_go_fuzz_dep_.CoverTab[108318]++
												epb, err := extendable(pb)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:480
		_go_fuzz_dep_.CoverTab[108321]++
													return nil, err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:481
		// _ = "end of CoverTab[108321]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:482
		_go_fuzz_dep_.CoverTab[108322]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:482
		// _ = "end of CoverTab[108322]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:482
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:482
	// _ = "end of CoverTab[108318]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:482
	_go_fuzz_dep_.CoverTab[108319]++
												extensions = make([]interface{}, len(es))
												for i, e := range es {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:484
		_go_fuzz_dep_.CoverTab[108323]++
													extensions[i], err = GetExtension(epb, e)
													if err == ErrMissingExtension {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:486
			_go_fuzz_dep_.CoverTab[108325]++
														err = nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:487
			// _ = "end of CoverTab[108325]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:488
			_go_fuzz_dep_.CoverTab[108326]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:488
			// _ = "end of CoverTab[108326]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:488
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:488
		// _ = "end of CoverTab[108323]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:488
		_go_fuzz_dep_.CoverTab[108324]++
													if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:489
			_go_fuzz_dep_.CoverTab[108327]++
														return
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:490
			// _ = "end of CoverTab[108327]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:491
			_go_fuzz_dep_.CoverTab[108328]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:491
			// _ = "end of CoverTab[108328]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:491
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:491
		// _ = "end of CoverTab[108324]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:492
	// _ = "end of CoverTab[108319]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:492
	_go_fuzz_dep_.CoverTab[108320]++
												return
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:493
	// _ = "end of CoverTab[108320]"
}

// ExtensionDescs returns a new slice containing pb's extension descriptors, in undefined order.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:496
// For non-registered extensions, ExtensionDescs returns an incomplete descriptor containing
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:496
// just the Field field, which defines the extension's field number.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:499
func ExtensionDescs(pb Message) ([]*ExtensionDesc, error) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:499
	_go_fuzz_dep_.CoverTab[108329]++
												epb, err := extendable(pb)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:501
		_go_fuzz_dep_.CoverTab[108333]++
													return nil, err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:502
		// _ = "end of CoverTab[108333]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:503
		_go_fuzz_dep_.CoverTab[108334]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:503
		// _ = "end of CoverTab[108334]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:503
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:503
	// _ = "end of CoverTab[108329]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:503
	_go_fuzz_dep_.CoverTab[108330]++
												registeredExtensions := RegisteredExtensions(pb)

												emap, mu := epb.extensionsRead()
												if emap == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:507
		_go_fuzz_dep_.CoverTab[108335]++
													return nil, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:508
		// _ = "end of CoverTab[108335]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:509
		_go_fuzz_dep_.CoverTab[108336]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:509
		// _ = "end of CoverTab[108336]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:509
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:509
	// _ = "end of CoverTab[108330]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:509
	_go_fuzz_dep_.CoverTab[108331]++
												mu.Lock()
												defer mu.Unlock()
												extensions := make([]*ExtensionDesc, 0, len(emap))
												for extid, e := range emap {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:513
		_go_fuzz_dep_.CoverTab[108337]++
													desc := e.desc
													if desc == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:515
			_go_fuzz_dep_.CoverTab[108339]++
														desc = registeredExtensions[extid]
														if desc == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:517
				_go_fuzz_dep_.CoverTab[108340]++
															desc = &ExtensionDesc{Field: extid}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:518
				// _ = "end of CoverTab[108340]"
			} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:519
				_go_fuzz_dep_.CoverTab[108341]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:519
				// _ = "end of CoverTab[108341]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:519
			}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:519
			// _ = "end of CoverTab[108339]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:520
			_go_fuzz_dep_.CoverTab[108342]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:520
			// _ = "end of CoverTab[108342]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:520
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:520
		// _ = "end of CoverTab[108337]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:520
		_go_fuzz_dep_.CoverTab[108338]++

													extensions = append(extensions, desc)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:522
		// _ = "end of CoverTab[108338]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:523
	// _ = "end of CoverTab[108331]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:523
	_go_fuzz_dep_.CoverTab[108332]++
												return extensions, nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:524
	// _ = "end of CoverTab[108332]"
}

// SetExtension sets the specified extension of pb to the specified value.
func SetExtension(pb Message, extension *ExtensionDesc, value interface{}) error {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:528
	_go_fuzz_dep_.CoverTab[108343]++
												if epb, ok := pb.(extensionsBytes); ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:529
		_go_fuzz_dep_.CoverTab[108349]++
													ClearExtension(pb, extension)
													newb, err := encodeExtension(extension, value)
													if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:532
			_go_fuzz_dep_.CoverTab[108351]++
														return err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:533
			// _ = "end of CoverTab[108351]"
		} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:534
			_go_fuzz_dep_.CoverTab[108352]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:534
			// _ = "end of CoverTab[108352]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:534
		}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:534
		// _ = "end of CoverTab[108349]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:534
		_go_fuzz_dep_.CoverTab[108350]++
													bb := epb.GetExtensions()
													*bb = append(*bb, newb...)
													return nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:537
		// _ = "end of CoverTab[108350]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:538
		_go_fuzz_dep_.CoverTab[108353]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:538
		// _ = "end of CoverTab[108353]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:538
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:538
	// _ = "end of CoverTab[108343]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:538
	_go_fuzz_dep_.CoverTab[108344]++
												epb, err := extendable(pb)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:540
		_go_fuzz_dep_.CoverTab[108354]++
													return err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:541
		// _ = "end of CoverTab[108354]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:542
		_go_fuzz_dep_.CoverTab[108355]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:542
		// _ = "end of CoverTab[108355]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:542
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:542
	// _ = "end of CoverTab[108344]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:542
	_go_fuzz_dep_.CoverTab[108345]++
												if err := checkExtensionTypes(epb, extension); err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:543
		_go_fuzz_dep_.CoverTab[108356]++
													return err
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:544
		// _ = "end of CoverTab[108356]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:545
		_go_fuzz_dep_.CoverTab[108357]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:545
		// _ = "end of CoverTab[108357]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:545
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:545
	// _ = "end of CoverTab[108345]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:545
	_go_fuzz_dep_.CoverTab[108346]++
												typ := reflect.TypeOf(extension.ExtensionType)
												if typ != reflect.TypeOf(value) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:547
		_go_fuzz_dep_.CoverTab[108358]++
													return fmt.Errorf("proto: bad extension value type. got: %T, want: %T", value, extension.ExtensionType)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:548
		// _ = "end of CoverTab[108358]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:549
		_go_fuzz_dep_.CoverTab[108359]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:549
		// _ = "end of CoverTab[108359]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:549
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:549
	// _ = "end of CoverTab[108346]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:549
	_go_fuzz_dep_.CoverTab[108347]++

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:555
	if reflect.ValueOf(value).IsNil() {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:555
		_go_fuzz_dep_.CoverTab[108360]++
													return fmt.Errorf("proto: SetExtension called with nil value of type %T", value)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:556
		// _ = "end of CoverTab[108360]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:557
		_go_fuzz_dep_.CoverTab[108361]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:557
		// _ = "end of CoverTab[108361]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:557
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:557
	// _ = "end of CoverTab[108347]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:557
	_go_fuzz_dep_.CoverTab[108348]++

												extmap := epb.extensionsWrite()
												extmap[extension.Field] = Extension{desc: extension, value: value}
												return nil
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:561
	// _ = "end of CoverTab[108348]"
}

// ClearAllExtensions clears all extensions from pb.
func ClearAllExtensions(pb Message) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:565
	_go_fuzz_dep_.CoverTab[108362]++
												if epb, doki := pb.(extensionsBytes); doki {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:566
		_go_fuzz_dep_.CoverTab[108365]++
													ext := epb.GetExtensions()
													*ext = []byte{}
													return
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:569
		// _ = "end of CoverTab[108365]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:570
		_go_fuzz_dep_.CoverTab[108366]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:570
		// _ = "end of CoverTab[108366]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:570
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:570
	// _ = "end of CoverTab[108362]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:570
	_go_fuzz_dep_.CoverTab[108363]++
												epb, err := extendable(pb)
												if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:572
		_go_fuzz_dep_.CoverTab[108367]++
													return
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:573
		// _ = "end of CoverTab[108367]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:574
		_go_fuzz_dep_.CoverTab[108368]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:574
		// _ = "end of CoverTab[108368]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:574
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:574
	// _ = "end of CoverTab[108363]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:574
	_go_fuzz_dep_.CoverTab[108364]++
												m := epb.extensionsWrite()
												for k := range m {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:576
		_go_fuzz_dep_.CoverTab[108369]++
													delete(m, k)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:577
		// _ = "end of CoverTab[108369]"
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:578
	// _ = "end of CoverTab[108364]"
}

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:584
var extensionMaps = make(map[reflect.Type]map[int32]*ExtensionDesc)

// RegisterExtension is called from the generated code.
func RegisterExtension(desc *ExtensionDesc) {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:587
	_go_fuzz_dep_.CoverTab[108370]++
												st := reflect.TypeOf(desc.ExtendedType).Elem()
												m := extensionMaps[st]
												if m == nil {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:590
		_go_fuzz_dep_.CoverTab[108373]++
													m = make(map[int32]*ExtensionDesc)
													extensionMaps[st] = m
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:592
		// _ = "end of CoverTab[108373]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:593
		_go_fuzz_dep_.CoverTab[108374]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:593
		// _ = "end of CoverTab[108374]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:593
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:593
	// _ = "end of CoverTab[108370]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:593
	_go_fuzz_dep_.CoverTab[108371]++
												if _, ok := m[desc.Field]; ok {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:594
		_go_fuzz_dep_.CoverTab[108375]++
													panic("proto: duplicate extension registered: " + st.String() + " " + strconv.Itoa(int(desc.Field)))
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:595
		// _ = "end of CoverTab[108375]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:596
		_go_fuzz_dep_.CoverTab[108376]++
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:596
		// _ = "end of CoverTab[108376]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:596
	}
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:596
	// _ = "end of CoverTab[108371]"
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:596
	_go_fuzz_dep_.CoverTab[108372]++
												m[desc.Field] = desc
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:597
	// _ = "end of CoverTab[108372]"
}

// RegisteredExtensions returns a map of the registered extensions of a
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:600
// protocol buffer struct, indexed by the extension number.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:600
// The argument pb should be a nil pointer to the struct type.
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:603
func RegisteredExtensions(pb Message) map[int32]*ExtensionDesc {
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:603
	_go_fuzz_dep_.CoverTab[108377]++
												return extensionMaps[reflect.TypeOf(pb).Elem()]
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:604
	// _ = "end of CoverTab[108377]"
}

//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:605
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/github.com/gogo/protobuf@v1.3.2/proto/extensions.go:605
var _ = _go_fuzz_dep_.CoverTab
