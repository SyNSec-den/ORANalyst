// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:3
package gnmi

//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:3
import (
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:3
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:3
)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:3
import (
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:3
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:3
)

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:12
// is compatible with the grpc package it is being compiled against.
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:12
// Requires gRPC-Go v1.32.0 or later.
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:15
const _ = grpc.SupportPackageIsVersion7

// GNMIClient is the client API for GNMI service.
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:17
//
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:17
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:20
type GNMIClient interface {
	// Capabilities allows the client to retrieve the set of capabilities that
	// is supported by the target. This allows the target to validate the
	// service version that is implemented and retrieve the set of models that
	// the target supports. The models can then be specified in subsequent RPCs
	// to restrict the set of data that is utilized.
	// Reference: gNMI Specification Section 3.2
	Capabilities(ctx context.Context, in *CapabilityRequest, opts ...grpc.CallOption) (*CapabilityResponse, error)
	// Retrieve a snapshot of data from the target. A Get RPC requests that the
	// target snapshots a subset of the data tree as specified by the paths
	// included in the message and serializes this to be returned to the
	// client using the specified encoding.
	// Reference: gNMI Specification Section 3.3
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// Set allows the client to modify the state of data on the target. The
	// paths to modified along with the new values that the client wishes
	// to set the value to.
	// Reference: gNMI Specification Section 3.4
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error)
	// Subscribe allows a client to request the target to send it values
	// of particular paths within the data tree. These values may be streamed
	// at a particular cadence (STREAM), sent one off on a long-lived channel
	// (POLL), or sent as a one-off retrieval (ONCE).
	// Reference: gNMI Specification Section 3.5
	Subscribe(ctx context.Context, opts ...grpc.CallOption) (GNMI_SubscribeClient, error)
}

type gNMIClient struct {
	cc grpc.ClientConnInterface
}

func NewGNMIClient(cc grpc.ClientConnInterface) GNMIClient {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:51
	_go_fuzz_dep_.CoverTab[193556]++
													return &gNMIClient{cc}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:52
	// _ = "end of CoverTab[193556]"
}

func (c *gNMIClient) Capabilities(ctx context.Context, in *CapabilityRequest, opts ...grpc.CallOption) (*CapabilityResponse, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:55
	_go_fuzz_dep_.CoverTab[193557]++
													out := new(CapabilityResponse)
													err := c.cc.Invoke(ctx, "/gnmi.gNMI/Capabilities", in, out, opts...)
													if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:58
		_go_fuzz_dep_.CoverTab[193559]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:59
		// _ = "end of CoverTab[193559]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:60
		_go_fuzz_dep_.CoverTab[193560]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:60
		// _ = "end of CoverTab[193560]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:60
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:60
	// _ = "end of CoverTab[193557]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:60
	_go_fuzz_dep_.CoverTab[193558]++
													return out, nil
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:61
	// _ = "end of CoverTab[193558]"
}

func (c *gNMIClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:64
	_go_fuzz_dep_.CoverTab[193561]++
													out := new(GetResponse)
													err := c.cc.Invoke(ctx, "/gnmi.gNMI/Get", in, out, opts...)
													if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:67
		_go_fuzz_dep_.CoverTab[193563]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:68
		// _ = "end of CoverTab[193563]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:69
		_go_fuzz_dep_.CoverTab[193564]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:69
		// _ = "end of CoverTab[193564]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:69
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:69
	// _ = "end of CoverTab[193561]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:69
	_go_fuzz_dep_.CoverTab[193562]++
													return out, nil
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:70
	// _ = "end of CoverTab[193562]"
}

func (c *gNMIClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:73
	_go_fuzz_dep_.CoverTab[193565]++
													out := new(SetResponse)
													err := c.cc.Invoke(ctx, "/gnmi.gNMI/Set", in, out, opts...)
													if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:76
		_go_fuzz_dep_.CoverTab[193567]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:77
		// _ = "end of CoverTab[193567]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:78
		_go_fuzz_dep_.CoverTab[193568]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:78
		// _ = "end of CoverTab[193568]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:78
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:78
	// _ = "end of CoverTab[193565]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:78
	_go_fuzz_dep_.CoverTab[193566]++
													return out, nil
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:79
	// _ = "end of CoverTab[193566]"
}

func (c *gNMIClient) Subscribe(ctx context.Context, opts ...grpc.CallOption) (GNMI_SubscribeClient, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:82
	_go_fuzz_dep_.CoverTab[193569]++
													stream, err := c.cc.NewStream(ctx, &GNMI_ServiceDesc.Streams[0], "/gnmi.gNMI/Subscribe", opts...)
													if err != nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:84
		_go_fuzz_dep_.CoverTab[193571]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:85
		// _ = "end of CoverTab[193571]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:86
		_go_fuzz_dep_.CoverTab[193572]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:86
		// _ = "end of CoverTab[193572]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:86
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:86
	// _ = "end of CoverTab[193569]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:86
	_go_fuzz_dep_.CoverTab[193570]++
													x := &gNMISubscribeClient{stream}
													return x, nil
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:88
	// _ = "end of CoverTab[193570]"
}

type GNMI_SubscribeClient interface {
	Send(*SubscribeRequest) error
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type gNMISubscribeClient struct {
	grpc.ClientStream
}

func (x *gNMISubscribeClient) Send(m *SubscribeRequest) error {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:101
	_go_fuzz_dep_.CoverTab[193573]++
													return x.ClientStream.SendMsg(m)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:102
	// _ = "end of CoverTab[193573]"
}

func (x *gNMISubscribeClient) Recv() (*SubscribeResponse, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:105
	_go_fuzz_dep_.CoverTab[193574]++
													m := new(SubscribeResponse)
													if err := x.ClientStream.RecvMsg(m); err != nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:107
		_go_fuzz_dep_.CoverTab[193576]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:108
		// _ = "end of CoverTab[193576]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:109
		_go_fuzz_dep_.CoverTab[193577]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:109
		// _ = "end of CoverTab[193577]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:109
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:109
	// _ = "end of CoverTab[193574]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:109
	_go_fuzz_dep_.CoverTab[193575]++
													return m, nil
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:110
	// _ = "end of CoverTab[193575]"
}

// GNMIServer is the server API for GNMI service.
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:113
// All implementations should embed UnimplementedGNMIServer
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:113
// for forward compatibility
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:116
type GNMIServer interface {
	// Capabilities allows the client to retrieve the set of capabilities that
	// is supported by the target. This allows the target to validate the
	// service version that is implemented and retrieve the set of models that
	// the target supports. The models can then be specified in subsequent RPCs
	// to restrict the set of data that is utilized.
	// Reference: gNMI Specification Section 3.2
	Capabilities(context.Context, *CapabilityRequest) (*CapabilityResponse, error)
	// Retrieve a snapshot of data from the target. A Get RPC requests that the
	// target snapshots a subset of the data tree as specified by the paths
	// included in the message and serializes this to be returned to the
	// client using the specified encoding.
	// Reference: gNMI Specification Section 3.3
	Get(context.Context, *GetRequest) (*GetResponse, error)
	// Set allows the client to modify the state of data on the target. The
	// paths to modified along with the new values that the client wishes
	// to set the value to.
	// Reference: gNMI Specification Section 3.4
	Set(context.Context, *SetRequest) (*SetResponse, error)
	// Subscribe allows a client to request the target to send it values
	// of particular paths within the data tree. These values may be streamed
	// at a particular cadence (STREAM), sent one off on a long-lived channel
	// (POLL), or sent as a one-off retrieval (ONCE).
	// Reference: gNMI Specification Section 3.5
	Subscribe(GNMI_SubscribeServer) error
}

// UnimplementedGNMIServer should be embedded to have forward compatible implementations.
type UnimplementedGNMIServer struct {
}

func (UnimplementedGNMIServer) Capabilities(context.Context, *CapabilityRequest) (*CapabilityResponse, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:147
	_go_fuzz_dep_.CoverTab[193578]++
													return nil, status.Errorf(codes.Unimplemented, "method Capabilities not implemented")
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:148
	// _ = "end of CoverTab[193578]"
}
func (UnimplementedGNMIServer) Get(context.Context, *GetRequest) (*GetResponse, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:150
	_go_fuzz_dep_.CoverTab[193579]++
													return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:151
	// _ = "end of CoverTab[193579]"
}
func (UnimplementedGNMIServer) Set(context.Context, *SetRequest) (*SetResponse, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:153
	_go_fuzz_dep_.CoverTab[193580]++
													return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:154
	// _ = "end of CoverTab[193580]"
}
func (UnimplementedGNMIServer) Subscribe(GNMI_SubscribeServer) error {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:156
	_go_fuzz_dep_.CoverTab[193581]++
													return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:157
	// _ = "end of CoverTab[193581]"
}

// UnsafeGNMIServer may be embedded to opt out of forward compatibility for this service.
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:160
// Use of this interface is not recommended, as added methods to GNMIServer will
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:160
// result in compilation errors.
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:163
type UnsafeGNMIServer interface {
	mustEmbedUnimplementedGNMIServer()
}

func RegisterGNMIServer(s grpc.ServiceRegistrar, srv GNMIServer) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:167
	_go_fuzz_dep_.CoverTab[193582]++
													s.RegisterService(&GNMI_ServiceDesc, srv)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:168
	// _ = "end of CoverTab[193582]"
}

func _GNMI_Capabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:171
	_go_fuzz_dep_.CoverTab[193583]++
													in := new(CapabilityRequest)
													if err := dec(in); err != nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:173
		_go_fuzz_dep_.CoverTab[193587]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:174
		// _ = "end of CoverTab[193587]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:175
		_go_fuzz_dep_.CoverTab[193588]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:175
		// _ = "end of CoverTab[193588]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:175
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:175
	// _ = "end of CoverTab[193583]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:175
	_go_fuzz_dep_.CoverTab[193584]++
													if interceptor == nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:176
		_go_fuzz_dep_.CoverTab[193589]++
														return srv.(GNMIServer).Capabilities(ctx, in)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:177
		// _ = "end of CoverTab[193589]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:178
		_go_fuzz_dep_.CoverTab[193590]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:178
		// _ = "end of CoverTab[193590]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:178
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:178
	// _ = "end of CoverTab[193584]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:178
	_go_fuzz_dep_.CoverTab[193585]++
													info := &grpc.UnaryServerInfo{
		Server:		srv,
		FullMethod:	"/gnmi.gNMI/Capabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:183
		_go_fuzz_dep_.CoverTab[193591]++
														return srv.(GNMIServer).Capabilities(ctx, req.(*CapabilityRequest))
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:184
		// _ = "end of CoverTab[193591]"
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:185
	// _ = "end of CoverTab[193585]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:185
	_go_fuzz_dep_.CoverTab[193586]++
													return interceptor(ctx, in, info, handler)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:186
	// _ = "end of CoverTab[193586]"
}

func _GNMI_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:189
	_go_fuzz_dep_.CoverTab[193592]++
													in := new(GetRequest)
													if err := dec(in); err != nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:191
		_go_fuzz_dep_.CoverTab[193596]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:192
		// _ = "end of CoverTab[193596]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:193
		_go_fuzz_dep_.CoverTab[193597]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:193
		// _ = "end of CoverTab[193597]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:193
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:193
	// _ = "end of CoverTab[193592]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:193
	_go_fuzz_dep_.CoverTab[193593]++
													if interceptor == nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:194
		_go_fuzz_dep_.CoverTab[193598]++
														return srv.(GNMIServer).Get(ctx, in)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:195
		// _ = "end of CoverTab[193598]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:196
		_go_fuzz_dep_.CoverTab[193599]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:196
		// _ = "end of CoverTab[193599]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:196
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:196
	// _ = "end of CoverTab[193593]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:196
	_go_fuzz_dep_.CoverTab[193594]++
													info := &grpc.UnaryServerInfo{
		Server:		srv,
		FullMethod:	"/gnmi.gNMI/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:201
		_go_fuzz_dep_.CoverTab[193600]++
														return srv.(GNMIServer).Get(ctx, req.(*GetRequest))
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:202
		// _ = "end of CoverTab[193600]"
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:203
	// _ = "end of CoverTab[193594]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:203
	_go_fuzz_dep_.CoverTab[193595]++
													return interceptor(ctx, in, info, handler)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:204
	// _ = "end of CoverTab[193595]"
}

func _GNMI_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:207
	_go_fuzz_dep_.CoverTab[193601]++
													in := new(SetRequest)
													if err := dec(in); err != nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:209
		_go_fuzz_dep_.CoverTab[193605]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:210
		// _ = "end of CoverTab[193605]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:211
		_go_fuzz_dep_.CoverTab[193606]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:211
		// _ = "end of CoverTab[193606]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:211
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:211
	// _ = "end of CoverTab[193601]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:211
	_go_fuzz_dep_.CoverTab[193602]++
													if interceptor == nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:212
		_go_fuzz_dep_.CoverTab[193607]++
														return srv.(GNMIServer).Set(ctx, in)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:213
		// _ = "end of CoverTab[193607]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:214
		_go_fuzz_dep_.CoverTab[193608]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:214
		// _ = "end of CoverTab[193608]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:214
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:214
	// _ = "end of CoverTab[193602]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:214
	_go_fuzz_dep_.CoverTab[193603]++
													info := &grpc.UnaryServerInfo{
		Server:		srv,
		FullMethod:	"/gnmi.gNMI/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:219
		_go_fuzz_dep_.CoverTab[193609]++
														return srv.(GNMIServer).Set(ctx, req.(*SetRequest))
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:220
		// _ = "end of CoverTab[193609]"
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:221
	// _ = "end of CoverTab[193603]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:221
	_go_fuzz_dep_.CoverTab[193604]++
													return interceptor(ctx, in, info, handler)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:222
	// _ = "end of CoverTab[193604]"
}

func _GNMI_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:225
	_go_fuzz_dep_.CoverTab[193610]++
													return srv.(GNMIServer).Subscribe(&gNMISubscribeServer{stream})
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:226
	// _ = "end of CoverTab[193610]"
}

type GNMI_SubscribeServer interface {
	Send(*SubscribeResponse) error
	Recv() (*SubscribeRequest, error)
	grpc.ServerStream
}

type gNMISubscribeServer struct {
	grpc.ServerStream
}

func (x *gNMISubscribeServer) Send(m *SubscribeResponse) error {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:239
	_go_fuzz_dep_.CoverTab[193611]++
													return x.ServerStream.SendMsg(m)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:240
	// _ = "end of CoverTab[193611]"
}

func (x *gNMISubscribeServer) Recv() (*SubscribeRequest, error) {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:243
	_go_fuzz_dep_.CoverTab[193612]++
													m := new(SubscribeRequest)
													if err := x.ServerStream.RecvMsg(m); err != nil {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:245
		_go_fuzz_dep_.CoverTab[193614]++
														return nil, err
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:246
		// _ = "end of CoverTab[193614]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:247
		_go_fuzz_dep_.CoverTab[193615]++
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:247
		// _ = "end of CoverTab[193615]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:247
	}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:247
	// _ = "end of CoverTab[193612]"
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:247
	_go_fuzz_dep_.CoverTab[193613]++
													return m, nil
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:248
	// _ = "end of CoverTab[193613]"
}

// GNMI_ServiceDesc is the grpc.ServiceDesc for GNMI service.
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:251
// It's only intended for direct use with grpc.RegisterService,
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:251
// and not to be introspected or modified (even as a copy)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:254
var GNMI_ServiceDesc = grpc.ServiceDesc{
	ServiceName:	"gnmi.gNMI",
	HandlerType:	(*GNMIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName:	"Capabilities",
			Handler:	_GNMI_Capabilities_Handler,
		},
		{
			MethodName:	"Get",
			Handler:	_GNMI_Get_Handler,
		},
		{
			MethodName:	"Set",
			Handler:	_GNMI_Set_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:	"Subscribe",
			Handler:	_GNMI_Subscribe_Handler,
			ServerStreams:	true,
			ClientStreams:	true,
		},
	},
	Metadata:	"proto/gnmi/gnmi.proto",
}
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:280
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/github.com/openconfig/gnmi@v0.9.1/proto/gnmi/gnmi_grpc.pb.go:280
var _ = _go_fuzz_dep_.CoverTab
