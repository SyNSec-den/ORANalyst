// Code generated by "stringer -type timeFormatType"; DO NOT EDIT.

//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:3
package cast

//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:3
import (
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:3
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:3
)
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:3
import (
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:3
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:3
)

import "strconv"

func _() {
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:7
	_go_fuzz_dep_.CoverTab[119204]++
	// An "invalid array index" compiler error signifies that the constant values have changed.
												// Re-run the stringer command to generate them again.
												var x [1]struct{}
												_ = x[timeFormatNoTimezone-0]
												_ = x[timeFormatNamedTimezone-1]
												_ = x[timeFormatNumericTimezone-2]
												_ = x[timeFormatNumericAndNamedTimezone-3]
												_ = x[timeFormatTimeOnly-4]
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:15
	// _ = "end of CoverTab[119204]"
}

const _timeFormatType_name = "timeFormatNoTimezonetimeFormatNamedTimezonetimeFormatNumericTimezonetimeFormatNumericAndNamedTimezonetimeFormatTimeOnly"

var _timeFormatType_index = [...]uint8{0, 20, 43, 68, 101, 119}

func (i timeFormatType) String() string {
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:22
	_go_fuzz_dep_.CoverTab[119205]++
												if i < 0 || func() bool {
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:23
		_go_fuzz_dep_.CoverTab[119207]++
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:23
		return i >= timeFormatType(len(_timeFormatType_index)-1)
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:23
		// _ = "end of CoverTab[119207]"
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:23
	}() {
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:23
		_go_fuzz_dep_.CoverTab[119208]++
													return "timeFormatType(" + strconv.FormatInt(int64(i), 10) + ")"
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:24
		// _ = "end of CoverTab[119208]"
	} else {
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:25
		_go_fuzz_dep_.CoverTab[119209]++
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:25
		// _ = "end of CoverTab[119209]"
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:25
	}
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:25
	// _ = "end of CoverTab[119205]"
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:25
	_go_fuzz_dep_.CoverTab[119206]++
												return _timeFormatType_name[_timeFormatType_index[i]:_timeFormatType_index[i+1]]
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:26
	// _ = "end of CoverTab[119206]"
}

//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:27
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/github.com/spf13/cast@v1.4.1/timeformattype_string.go:27
var _ = _go_fuzz_dep_.CoverTab
