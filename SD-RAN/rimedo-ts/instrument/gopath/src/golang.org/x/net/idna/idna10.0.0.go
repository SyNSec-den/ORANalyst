// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

// Copyright 2016 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

//go:build go1.10
// +build go1.10

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:10
// Package idna implements IDNA2008 using the compatibility processing
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:10
// defined by UTS (Unicode Technical Standard) #46, which defines a standard to
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:10
// deal with the transition from IDNA2003.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:10
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:10
// IDNA2008 (Internationalized Domain Names for Applications), is defined in RFC
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:10
// 5890, RFC 5891, RFC 5892, RFC 5893 and RFC 5894.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:10
// UTS #46 is defined in https://www.unicode.org/reports/tr46.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:10
// See https://unicode.org/cldr/utility/idna.jsp for a visualization of the
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:10
// differences between these two standards.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:19
package idna

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:19
import (
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:19
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:19
)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:19
import (
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:19
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:19
)

import (
	"fmt"
	"strings"
	"unicode/utf8"

	"golang.org/x/text/secure/bidirule"
	"golang.org/x/text/unicode/bidi"
	"golang.org/x/text/unicode/norm"
)

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:46
// ToASCII is a wrapper for Punycode.ToASCII.
func ToASCII(s string) (string, error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:47
	_go_fuzz_dep_.CoverTab[71253]++
											return Punycode.process(s, true)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:48
	// _ = "end of CoverTab[71253]"
}

// ToUnicode is a wrapper for Punycode.ToUnicode.
func ToUnicode(s string) (string, error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:52
	_go_fuzz_dep_.CoverTab[71254]++
											return Punycode.process(s, false)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:53
	// _ = "end of CoverTab[71254]"
}

// An Option configures a Profile at creation time.
type Option func(*options)

// Transitional sets a Profile to use the Transitional mapping as defined in UTS
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:59
// #46. This will cause, for example, "ÃŸ" to be mapped to "ss". Using the
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:59
// transitional mapping provides a compromise between IDNA2003 and IDNA2008
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:59
// compatibility. It is used by some browsers when resolving domain names. This
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:59
// option is only meaningful if combined with MapForLookup.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:64
func Transitional(transitional bool) Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:64
	_go_fuzz_dep_.CoverTab[71255]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:65
		_go_fuzz_dep_.CoverTab[71256]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:65
		o.transitional = transitional
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:65
		// _ = "end of CoverTab[71256]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:65
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:65
	// _ = "end of CoverTab[71255]"
}

// VerifyDNSLength sets whether a Profile should fail if any of the IDN parts
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:68
// are longer than allowed by the RFC.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:68
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:68
// This option corresponds to the VerifyDnsLength flag in UTS #46.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:72
func VerifyDNSLength(verify bool) Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:72
	_go_fuzz_dep_.CoverTab[71257]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:73
		_go_fuzz_dep_.CoverTab[71258]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:73
		o.verifyDNSLength = verify
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:73
		// _ = "end of CoverTab[71258]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:73
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:73
	// _ = "end of CoverTab[71257]"
}

// RemoveLeadingDots removes leading label separators. Leading runes that map to
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:76
// dots, such as U+3002 IDEOGRAPHIC FULL STOP, are removed as well.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:78
func RemoveLeadingDots(remove bool) Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:78
	_go_fuzz_dep_.CoverTab[71259]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:79
		_go_fuzz_dep_.CoverTab[71260]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:79
		o.removeLeadingDots = remove
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:79
		// _ = "end of CoverTab[71260]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:79
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:79
	// _ = "end of CoverTab[71259]"
}

// ValidateLabels sets whether to check the mandatory label validation criteria
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:82
// as defined in Section 5.4 of RFC 5891. This includes testing for correct use
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:82
// of hyphens ('-'), normalization, validity of runes, and the context rules.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:82
// In particular, ValidateLabels also sets the CheckHyphens and CheckJoiners flags
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:82
// in UTS #46.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:87
func ValidateLabels(enable bool) Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:87
	_go_fuzz_dep_.CoverTab[71261]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:88
		_go_fuzz_dep_.CoverTab[71262]++

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:91
		if o.mapping == nil && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:91
			_go_fuzz_dep_.CoverTab[71264]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:91
			return enable
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:91
			// _ = "end of CoverTab[71264]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:91
		}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:91
			_go_fuzz_dep_.CoverTab[71265]++
													o.mapping = normalize
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:92
			// _ = "end of CoverTab[71265]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:93
			_go_fuzz_dep_.CoverTab[71266]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:93
			// _ = "end of CoverTab[71266]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:93
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:93
		// _ = "end of CoverTab[71262]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:93
		_go_fuzz_dep_.CoverTab[71263]++
												o.trie = trie
												o.checkJoiners = enable
												o.checkHyphens = enable
												if enable {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:97
			_go_fuzz_dep_.CoverTab[71267]++
													o.fromPuny = validateFromPunycode
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:98
			// _ = "end of CoverTab[71267]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:99
			_go_fuzz_dep_.CoverTab[71268]++
													o.fromPuny = nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:100
			// _ = "end of CoverTab[71268]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:101
		// _ = "end of CoverTab[71263]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:102
	// _ = "end of CoverTab[71261]"
}

// CheckHyphens sets whether to check for correct use of hyphens ('-') in
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:105
// labels. Most web browsers do not have this option set, since labels such as
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:105
// "r3---sn-apo3qvuoxuxbt-j5pe" are in common use.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:105
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:105
// This option corresponds to the CheckHyphens flag in UTS #46.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:110
func CheckHyphens(enable bool) Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:110
	_go_fuzz_dep_.CoverTab[71269]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:111
		_go_fuzz_dep_.CoverTab[71270]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:111
		o.checkHyphens = enable
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:111
		// _ = "end of CoverTab[71270]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:111
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:111
	// _ = "end of CoverTab[71269]"
}

// CheckJoiners sets whether to check the ContextJ rules as defined in Appendix
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:114
// A of RFC 5892, concerning the use of joiner runes.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:114
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:114
// This option corresponds to the CheckJoiners flag in UTS #46.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:118
func CheckJoiners(enable bool) Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:118
	_go_fuzz_dep_.CoverTab[71271]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:119
		_go_fuzz_dep_.CoverTab[71272]++
												o.trie = trie
												o.checkJoiners = enable
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:121
		// _ = "end of CoverTab[71272]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:122
	// _ = "end of CoverTab[71271]"
}

// StrictDomainName limits the set of permissible ASCII characters to those
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:125
// allowed in domain names as defined in RFC 1034 (A-Z, a-z, 0-9 and the
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:125
// hyphen). This is set by default for MapForLookup and ValidateForRegistration,
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:125
// but is only useful if ValidateLabels is set.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:125
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:125
// This option is useful, for instance, for browsers that allow characters
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:125
// outside this range, for example a '_' (U+005F LOW LINE). See
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:125
// http://www.rfc-editor.org/std/std3.txt for more details.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:125
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:125
// This option corresponds to the UseSTD3ASCIIRules flag in UTS #46.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:135
func StrictDomainName(use bool) Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:135
	_go_fuzz_dep_.CoverTab[71273]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:136
		_go_fuzz_dep_.CoverTab[71274]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:136
		o.useSTD3Rules = use
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:136
		// _ = "end of CoverTab[71274]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:136
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:136
	// _ = "end of CoverTab[71273]"
}

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:142
// BidiRule enables the Bidi rule as defined in RFC 5893. Any application
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:142
// that relies on proper validation of labels should include this rule.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:142
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:142
// This option corresponds to the CheckBidi flag in UTS #46.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:146
func BidiRule() Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:146
	_go_fuzz_dep_.CoverTab[71275]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:147
		_go_fuzz_dep_.CoverTab[71276]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:147
		o.bidirule = bidirule.ValidString
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:147
		// _ = "end of CoverTab[71276]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:147
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:147
	// _ = "end of CoverTab[71275]"
}

// ValidateForRegistration sets validation options to verify that a given IDN is
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:150
// properly formatted for registration as defined by Section 4 of RFC 5891.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:152
func ValidateForRegistration() Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:152
	_go_fuzz_dep_.CoverTab[71277]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:153
		_go_fuzz_dep_.CoverTab[71278]++
												o.mapping = validateRegistration
												StrictDomainName(true)(o)
												ValidateLabels(true)(o)
												VerifyDNSLength(true)(o)
												BidiRule()(o)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:158
		// _ = "end of CoverTab[71278]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:159
	// _ = "end of CoverTab[71277]"
}

// MapForLookup sets validation and mapping options such that a given IDN is
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:162
// transformed for domain name lookup according to the requirements set out in
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:162
// Section 5 of RFC 5891. The mappings follow the recommendations of RFC 5894,
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:162
// RFC 5895 and UTS 46. It does not add the Bidi Rule. Use the BidiRule option
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:162
// to add this check.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:162
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:162
// The mappings include normalization and mapping case, width and other
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:162
// compatibility mappings.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:170
func MapForLookup() Option {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:170
	_go_fuzz_dep_.CoverTab[71279]++
											return func(o *options) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:171
		_go_fuzz_dep_.CoverTab[71280]++
												o.mapping = validateAndMap
												StrictDomainName(true)(o)
												ValidateLabels(true)(o)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:174
		// _ = "end of CoverTab[71280]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:175
	// _ = "end of CoverTab[71279]"
}

type options struct {
	transitional		bool
	useSTD3Rules		bool
	checkHyphens		bool
	checkJoiners		bool
	verifyDNSLength		bool
	removeLeadingDots	bool

	trie	*idnaTrie

	// fromPuny calls validation rules when converting A-labels to U-labels.
	fromPuny	func(p *Profile, s string) error

	// mapping implements a validation and mapping step as defined in RFC 5895
	// or UTS 46, tailored to, for example, domain registration or lookup.
	mapping	func(p *Profile, s string) (mapped string, isBidi bool, err error)

	// bidirule, if specified, checks whether s conforms to the Bidi Rule
	// defined in RFC 5893.
	bidirule	func(s string) bool
}

// A Profile defines the configuration of an IDNA mapper.
type Profile struct {
	options
}

func apply(o *options, opts []Option) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:205
	_go_fuzz_dep_.CoverTab[71281]++
											for _, f := range opts {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:206
		_go_fuzz_dep_.CoverTab[71282]++
												f(o)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:207
		// _ = "end of CoverTab[71282]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:208
	// _ = "end of CoverTab[71281]"
}

// New creates a new Profile.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:211
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:211
// With no options, the returned Profile is the most permissive and equals the
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:211
// Punycode Profile. Options can be passed to further restrict the Profile. The
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:211
// MapForLookup and ValidateForRegistration options set a collection of options,
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:211
// for lookup and registration purposes respectively, which can be tailored by
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:211
// adding more fine-grained options, where later options override earlier
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:211
// options.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:219
func New(o ...Option) *Profile {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:219
	_go_fuzz_dep_.CoverTab[71283]++
											p := &Profile{}
											apply(&p.options, o)
											return p
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:222
	// _ = "end of CoverTab[71283]"
}

// ToASCII converts a domain or domain label to its ASCII form. For example,
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:225
// ToASCII("bÃ¼cher.example.com") is "xn--bcher-kva.example.com", and
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:225
// ToASCII("golang") is "golang". If an error is encountered it will return
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:225
// an error and a (partially) processed result.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:229
func (p *Profile) ToASCII(s string) (string, error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:229
	_go_fuzz_dep_.CoverTab[71284]++
											return p.process(s, true)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:230
	// _ = "end of CoverTab[71284]"
}

// ToUnicode converts a domain or domain label to its Unicode form. For example,
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:233
// ToUnicode("xn--bcher-kva.example.com") is "bÃ¼cher.example.com", and
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:233
// ToUnicode("golang") is "golang". If an error is encountered it will return
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:233
// an error and a (partially) processed result.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:237
func (p *Profile) ToUnicode(s string) (string, error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:237
	_go_fuzz_dep_.CoverTab[71285]++
											pp := *p
											pp.transitional = false
											return pp.process(s, false)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:240
	// _ = "end of CoverTab[71285]"
}

// String reports a string with a description of the profile for debugging
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:243
// purposes. The string format may change with different versions.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:245
func (p *Profile) String() string {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:245
	_go_fuzz_dep_.CoverTab[71286]++
											s := ""
											if p.transitional {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:247
		_go_fuzz_dep_.CoverTab[71292]++
												s = "Transitional"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:248
		// _ = "end of CoverTab[71292]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:249
		_go_fuzz_dep_.CoverTab[71293]++
												s = "NonTransitional"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:250
		// _ = "end of CoverTab[71293]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:251
	// _ = "end of CoverTab[71286]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:251
	_go_fuzz_dep_.CoverTab[71287]++
											if p.useSTD3Rules {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:252
		_go_fuzz_dep_.CoverTab[71294]++
												s += ":UseSTD3Rules"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:253
		// _ = "end of CoverTab[71294]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:254
		_go_fuzz_dep_.CoverTab[71295]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:254
		// _ = "end of CoverTab[71295]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:254
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:254
	// _ = "end of CoverTab[71287]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:254
	_go_fuzz_dep_.CoverTab[71288]++
											if p.checkHyphens {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:255
		_go_fuzz_dep_.CoverTab[71296]++
												s += ":CheckHyphens"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:256
		// _ = "end of CoverTab[71296]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:257
		_go_fuzz_dep_.CoverTab[71297]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:257
		// _ = "end of CoverTab[71297]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:257
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:257
	// _ = "end of CoverTab[71288]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:257
	_go_fuzz_dep_.CoverTab[71289]++
											if p.checkJoiners {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:258
		_go_fuzz_dep_.CoverTab[71298]++
												s += ":CheckJoiners"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:259
		// _ = "end of CoverTab[71298]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:260
		_go_fuzz_dep_.CoverTab[71299]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:260
		// _ = "end of CoverTab[71299]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:260
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:260
	// _ = "end of CoverTab[71289]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:260
	_go_fuzz_dep_.CoverTab[71290]++
											if p.verifyDNSLength {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:261
		_go_fuzz_dep_.CoverTab[71300]++
												s += ":VerifyDNSLength"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:262
		// _ = "end of CoverTab[71300]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:263
		_go_fuzz_dep_.CoverTab[71301]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:263
		// _ = "end of CoverTab[71301]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:263
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:263
	// _ = "end of CoverTab[71290]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:263
	_go_fuzz_dep_.CoverTab[71291]++
											return s
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:264
	// _ = "end of CoverTab[71291]"
}

var (
	// Punycode is a Profile that does raw punycode processing with a minimum
	// of validation.
	Punycode	*Profile	= punycode

	// Lookup is the recommended profile for looking up domain names, according
	// to Section 5 of RFC 5891. The exact configuration of this profile may
	// change over time.
	Lookup	*Profile	= lookup

	// Display is the recommended profile for displaying domain names.
	// The configuration of this profile may change over time.
	Display	*Profile	= display

	// Registration is the recommended profile for checking whether a given
	// IDN is valid for registration, according to Section 4 of RFC 5891.
	Registration	*Profile	= registration

	punycode	= &Profile{}
	lookup		= &Profile{options{
		transitional:	transitionalLookup,
		useSTD3Rules:	true,
		checkHyphens:	true,
		checkJoiners:	true,
		trie:		trie,
		fromPuny:	validateFromPunycode,
		mapping:	validateAndMap,
		bidirule:	bidirule.ValidString,
	}}
	display	= &Profile{options{
		useSTD3Rules:	true,
		checkHyphens:	true,
		checkJoiners:	true,
		trie:		trie,
		fromPuny:	validateFromPunycode,
		mapping:	validateAndMap,
		bidirule:	bidirule.ValidString,
	}}
	registration	= &Profile{options{
		useSTD3Rules:		true,
		verifyDNSLength:	true,
		checkHyphens:		true,
		checkJoiners:		true,
		trie:			trie,
		fromPuny:		validateFromPunycode,
		mapping:		validateRegistration,
		bidirule:		bidirule.ValidString,
	}}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:319
)

type labelError struct{ label, code_ string }

func (e labelError) code() string {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:323
	_go_fuzz_dep_.CoverTab[71302]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:323
	return e.code_
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:323
	// _ = "end of CoverTab[71302]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:323
}
func (e labelError) Error() string {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:324
	_go_fuzz_dep_.CoverTab[71303]++
											return fmt.Sprintf("idna: invalid label %q", e.label)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:325
	// _ = "end of CoverTab[71303]"
}

type runeError rune

func (e runeError) code() string {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:330
	_go_fuzz_dep_.CoverTab[71304]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:330
	return "P1"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:330
	// _ = "end of CoverTab[71304]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:330
}
func (e runeError) Error() string {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:331
	_go_fuzz_dep_.CoverTab[71305]++
											return fmt.Sprintf("idna: disallowed rune %U", e)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:332
	// _ = "end of CoverTab[71305]"
}

// process implements the algorithm described in section 4 of UTS #46,
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:335
// see https://www.unicode.org/reports/tr46.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:337
func (p *Profile) process(s string, toASCII bool) (string, error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:337
	_go_fuzz_dep_.CoverTab[71306]++
											var err error
											var isBidi bool
											if p.mapping != nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:340
		_go_fuzz_dep_.CoverTab[71314]++
												s, isBidi, err = p.mapping(p, s)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:341
		// _ = "end of CoverTab[71314]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:342
		_go_fuzz_dep_.CoverTab[71315]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:342
		// _ = "end of CoverTab[71315]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:342
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:342
	// _ = "end of CoverTab[71306]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:342
	_go_fuzz_dep_.CoverTab[71307]++

											if p.removeLeadingDots {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:344
		_go_fuzz_dep_.CoverTab[71316]++
												for ; len(s) > 0 && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:345
			_go_fuzz_dep_.CoverTab[71317]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:345
			return s[0] == '.'
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:345
			// _ = "end of CoverTab[71317]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:345
		}(); s = s[1:] {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:345
			_go_fuzz_dep_.CoverTab[71318]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:345
			// _ = "end of CoverTab[71318]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:346
		// _ = "end of CoverTab[71316]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:347
		_go_fuzz_dep_.CoverTab[71319]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:347
		// _ = "end of CoverTab[71319]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:347
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:347
	// _ = "end of CoverTab[71307]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:347
	_go_fuzz_dep_.CoverTab[71308]++

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
	if err == nil && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
		_go_fuzz_dep_.CoverTab[71320]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
		return p.verifyDNSLength
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
		// _ = "end of CoverTab[71320]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
	}() && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
		_go_fuzz_dep_.CoverTab[71321]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
		return s == ""
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
		// _ = "end of CoverTab[71321]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
	}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:351
		_go_fuzz_dep_.CoverTab[71322]++
												err = &labelError{s, "A4"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:352
		// _ = "end of CoverTab[71322]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:353
		_go_fuzz_dep_.CoverTab[71323]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:353
		// _ = "end of CoverTab[71323]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:353
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:353
	// _ = "end of CoverTab[71308]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:353
	_go_fuzz_dep_.CoverTab[71309]++
											labels := labelIter{orig: s}
											for ; !labels.done(); labels.next() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:355
		_go_fuzz_dep_.CoverTab[71324]++
												label := labels.label()
												if label == "" {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:357
			_go_fuzz_dep_.CoverTab[71326]++

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:360
			if err == nil && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:360
				_go_fuzz_dep_.CoverTab[71328]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:360
				return p.verifyDNSLength
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:360
				// _ = "end of CoverTab[71328]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:360
			}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:360
				_go_fuzz_dep_.CoverTab[71329]++
														err = &labelError{s, "A4"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:361
				// _ = "end of CoverTab[71329]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:362
				_go_fuzz_dep_.CoverTab[71330]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:362
				// _ = "end of CoverTab[71330]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:362
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:362
			// _ = "end of CoverTab[71326]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:362
			_go_fuzz_dep_.CoverTab[71327]++
													continue
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:363
			// _ = "end of CoverTab[71327]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:364
			_go_fuzz_dep_.CoverTab[71331]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:364
			// _ = "end of CoverTab[71331]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:364
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:364
		// _ = "end of CoverTab[71324]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:364
		_go_fuzz_dep_.CoverTab[71325]++
												if strings.HasPrefix(label, acePrefix) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:365
			_go_fuzz_dep_.CoverTab[71332]++
													u, err2 := decode(label[len(acePrefix):])
													if err2 != nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:367
				_go_fuzz_dep_.CoverTab[71335]++
														if err == nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:368
					_go_fuzz_dep_.CoverTab[71337]++
															err = err2
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:369
					// _ = "end of CoverTab[71337]"
				} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:370
					_go_fuzz_dep_.CoverTab[71338]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:370
					// _ = "end of CoverTab[71338]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:370
				}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:370
				// _ = "end of CoverTab[71335]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:370
				_go_fuzz_dep_.CoverTab[71336]++

														continue
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:372
				// _ = "end of CoverTab[71336]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:373
				_go_fuzz_dep_.CoverTab[71339]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:373
				// _ = "end of CoverTab[71339]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:373
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:373
			// _ = "end of CoverTab[71332]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:373
			_go_fuzz_dep_.CoverTab[71333]++
													isBidi = isBidi || func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:374
				_go_fuzz_dep_.CoverTab[71340]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:374
				return bidirule.DirectionString(u) != bidi.LeftToRight
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:374
				// _ = "end of CoverTab[71340]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:374
			}()
													labels.set(u)
													if err == nil && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:376
				_go_fuzz_dep_.CoverTab[71341]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:376
				return p.fromPuny != nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:376
				// _ = "end of CoverTab[71341]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:376
			}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:376
				_go_fuzz_dep_.CoverTab[71342]++
														err = p.fromPuny(p, u)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:377
				// _ = "end of CoverTab[71342]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:378
				_go_fuzz_dep_.CoverTab[71343]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:378
				// _ = "end of CoverTab[71343]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:378
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:378
			// _ = "end of CoverTab[71333]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:378
			_go_fuzz_dep_.CoverTab[71334]++
													if err == nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:379
				_go_fuzz_dep_.CoverTab[71344]++

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:383
				err = p.validateLabel(u)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:383
				// _ = "end of CoverTab[71344]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:384
				_go_fuzz_dep_.CoverTab[71345]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:384
				// _ = "end of CoverTab[71345]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:384
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:384
			// _ = "end of CoverTab[71334]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:385
			_go_fuzz_dep_.CoverTab[71346]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:385
			if err == nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:385
				_go_fuzz_dep_.CoverTab[71347]++
														err = p.validateLabel(label)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:386
				// _ = "end of CoverTab[71347]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:387
				_go_fuzz_dep_.CoverTab[71348]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:387
				// _ = "end of CoverTab[71348]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:387
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:387
			// _ = "end of CoverTab[71346]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:387
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:387
		// _ = "end of CoverTab[71325]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:388
	// _ = "end of CoverTab[71309]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:388
	_go_fuzz_dep_.CoverTab[71310]++
											if isBidi && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:389
		_go_fuzz_dep_.CoverTab[71349]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:389
		return p.bidirule != nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:389
		// _ = "end of CoverTab[71349]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:389
	}() && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:389
		_go_fuzz_dep_.CoverTab[71350]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:389
		return err == nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:389
		// _ = "end of CoverTab[71350]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:389
	}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:389
		_go_fuzz_dep_.CoverTab[71351]++
												for labels.reset(); !labels.done(); labels.next() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:390
			_go_fuzz_dep_.CoverTab[71352]++
													if !p.bidirule(labels.label()) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:391
				_go_fuzz_dep_.CoverTab[71353]++
														err = &labelError{s, "B"}
														break
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:393
				// _ = "end of CoverTab[71353]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:394
				_go_fuzz_dep_.CoverTab[71354]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:394
				// _ = "end of CoverTab[71354]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:394
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:394
			// _ = "end of CoverTab[71352]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:395
		// _ = "end of CoverTab[71351]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:396
		_go_fuzz_dep_.CoverTab[71355]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:396
		// _ = "end of CoverTab[71355]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:396
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:396
	// _ = "end of CoverTab[71310]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:396
	_go_fuzz_dep_.CoverTab[71311]++
											if toASCII {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:397
		_go_fuzz_dep_.CoverTab[71356]++
												for labels.reset(); !labels.done(); labels.next() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:398
			_go_fuzz_dep_.CoverTab[71357]++
													label := labels.label()
													if !ascii(label) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:400
				_go_fuzz_dep_.CoverTab[71359]++
														a, err2 := encode(acePrefix, label)
														if err == nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:402
					_go_fuzz_dep_.CoverTab[71361]++
															err = err2
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:403
					// _ = "end of CoverTab[71361]"
				} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:404
					_go_fuzz_dep_.CoverTab[71362]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:404
					// _ = "end of CoverTab[71362]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:404
				}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:404
				// _ = "end of CoverTab[71359]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:404
				_go_fuzz_dep_.CoverTab[71360]++
														label = a
														labels.set(a)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:406
				// _ = "end of CoverTab[71360]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:407
				_go_fuzz_dep_.CoverTab[71363]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:407
				// _ = "end of CoverTab[71363]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:407
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:407
			// _ = "end of CoverTab[71357]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:407
			_go_fuzz_dep_.CoverTab[71358]++
													n := len(label)
													if p.verifyDNSLength && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
				_go_fuzz_dep_.CoverTab[71364]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
				return err == nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
				// _ = "end of CoverTab[71364]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
			}() && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
				_go_fuzz_dep_.CoverTab[71365]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
				return (n == 0 || func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
					_go_fuzz_dep_.CoverTab[71366]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
					return n > 63
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
					// _ = "end of CoverTab[71366]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
				}())
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
				// _ = "end of CoverTab[71365]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
			}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:409
				_go_fuzz_dep_.CoverTab[71367]++
														err = &labelError{label, "A4"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:410
				// _ = "end of CoverTab[71367]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:411
				_go_fuzz_dep_.CoverTab[71368]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:411
				// _ = "end of CoverTab[71368]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:411
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:411
			// _ = "end of CoverTab[71358]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:412
		// _ = "end of CoverTab[71356]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:413
		_go_fuzz_dep_.CoverTab[71369]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:413
		// _ = "end of CoverTab[71369]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:413
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:413
	// _ = "end of CoverTab[71311]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:413
	_go_fuzz_dep_.CoverTab[71312]++
											s = labels.result()
											if toASCII && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:415
		_go_fuzz_dep_.CoverTab[71370]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:415
		return p.verifyDNSLength
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:415
		// _ = "end of CoverTab[71370]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:415
	}() && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:415
		_go_fuzz_dep_.CoverTab[71371]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:415
		return err == nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:415
		// _ = "end of CoverTab[71371]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:415
	}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:415
		_go_fuzz_dep_.CoverTab[71372]++

												n := len(s)
												if n > 0 && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:418
			_go_fuzz_dep_.CoverTab[71374]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:418
			return s[n-1] == '.'
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:418
			// _ = "end of CoverTab[71374]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:418
		}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:418
			_go_fuzz_dep_.CoverTab[71375]++
													n--
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:419
			// _ = "end of CoverTab[71375]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:420
			_go_fuzz_dep_.CoverTab[71376]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:420
			// _ = "end of CoverTab[71376]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:420
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:420
		// _ = "end of CoverTab[71372]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:420
		_go_fuzz_dep_.CoverTab[71373]++
												if len(s) < 1 || func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:421
			_go_fuzz_dep_.CoverTab[71377]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:421
			return n > 253
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:421
			// _ = "end of CoverTab[71377]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:421
		}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:421
			_go_fuzz_dep_.CoverTab[71378]++
													err = &labelError{s, "A4"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:422
			// _ = "end of CoverTab[71378]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:423
			_go_fuzz_dep_.CoverTab[71379]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:423
			// _ = "end of CoverTab[71379]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:423
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:423
		// _ = "end of CoverTab[71373]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:424
		_go_fuzz_dep_.CoverTab[71380]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:424
		// _ = "end of CoverTab[71380]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:424
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:424
	// _ = "end of CoverTab[71312]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:424
	_go_fuzz_dep_.CoverTab[71313]++
											return s, err
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:425
	// _ = "end of CoverTab[71313]"
}

func normalize(p *Profile, s string) (mapped string, isBidi bool, err error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:428
	_go_fuzz_dep_.CoverTab[71381]++

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:432
	mapped = norm.NFC.String(s)
											isBidi = bidirule.DirectionString(mapped) == bidi.RightToLeft
											return mapped, isBidi, nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:434
	// _ = "end of CoverTab[71381]"
}

func validateRegistration(p *Profile, s string) (idem string, bidi bool, err error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:437
	_go_fuzz_dep_.CoverTab[71382]++

											if !norm.NFC.IsNormalString(s) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:439
		_go_fuzz_dep_.CoverTab[71385]++
												return s, false, &labelError{s, "V1"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:440
		// _ = "end of CoverTab[71385]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:441
		_go_fuzz_dep_.CoverTab[71386]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:441
		// _ = "end of CoverTab[71386]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:441
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:441
	// _ = "end of CoverTab[71382]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:441
	_go_fuzz_dep_.CoverTab[71383]++
											for i := 0; i < len(s); {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:442
		_go_fuzz_dep_.CoverTab[71387]++
												v, sz := trie.lookupString(s[i:])
												if sz == 0 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:444
			_go_fuzz_dep_.CoverTab[71390]++
													return s, bidi, runeError(utf8.RuneError)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:445
			// _ = "end of CoverTab[71390]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:446
			_go_fuzz_dep_.CoverTab[71391]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:446
			// _ = "end of CoverTab[71391]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:446
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:446
		// _ = "end of CoverTab[71387]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:446
		_go_fuzz_dep_.CoverTab[71388]++
												bidi = bidi || func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:447
			_go_fuzz_dep_.CoverTab[71392]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:447
			return info(v).isBidi(s[i:])
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:447
			// _ = "end of CoverTab[71392]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:447
		}()

												switch p.simplify(info(v).category()) {

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:452
		case valid, deviation:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:452
			_go_fuzz_dep_.CoverTab[71393]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:452
			// _ = "end of CoverTab[71393]"
		case disallowed, mapped, unknown, ignored:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:453
			_go_fuzz_dep_.CoverTab[71394]++
													r, _ := utf8.DecodeRuneInString(s[i:])
													return s, bidi, runeError(r)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:455
			// _ = "end of CoverTab[71394]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:455
		default:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:455
			_go_fuzz_dep_.CoverTab[71395]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:455
			// _ = "end of CoverTab[71395]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:456
		// _ = "end of CoverTab[71388]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:456
		_go_fuzz_dep_.CoverTab[71389]++
												i += sz
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:457
		// _ = "end of CoverTab[71389]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:458
	// _ = "end of CoverTab[71383]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:458
	_go_fuzz_dep_.CoverTab[71384]++
											return s, bidi, nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:459
	// _ = "end of CoverTab[71384]"
}

func (c info) isBidi(s string) bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:462
	_go_fuzz_dep_.CoverTab[71396]++
											if !c.isMapped() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:463
		_go_fuzz_dep_.CoverTab[71399]++
												return c&attributesMask == rtl
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:464
		// _ = "end of CoverTab[71399]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:465
		_go_fuzz_dep_.CoverTab[71400]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:465
		// _ = "end of CoverTab[71400]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:465
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:465
	// _ = "end of CoverTab[71396]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:465
	_go_fuzz_dep_.CoverTab[71397]++

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:468
	p, _ := bidi.LookupString(s)
	switch p.Class() {
	case bidi.R, bidi.AL, bidi.AN:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:470
		_go_fuzz_dep_.CoverTab[71401]++
												return true
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:471
		// _ = "end of CoverTab[71401]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:471
	default:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:471
		_go_fuzz_dep_.CoverTab[71402]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:471
		// _ = "end of CoverTab[71402]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:472
	// _ = "end of CoverTab[71397]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:472
	_go_fuzz_dep_.CoverTab[71398]++
											return false
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:473
	// _ = "end of CoverTab[71398]"
}

func validateAndMap(p *Profile, s string) (vm string, bidi bool, err error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:476
	_go_fuzz_dep_.CoverTab[71403]++
											var (
		b	[]byte
		k	int
	)
	// combinedInfoBits contains the or-ed bits of all runes. We use this
	// to derive the mayNeedNorm bit later. This may trigger normalization
	// overeagerly, but it will not do so in the common case. The end result
	// is another 10% saving on BenchmarkProfile for the common case.
	var combinedInfoBits info
	for i := 0; i < len(s); {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:486
		_go_fuzz_dep_.CoverTab[71406]++
												v, sz := trie.lookupString(s[i:])
												if sz == 0 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:488
			_go_fuzz_dep_.CoverTab[71409]++
													b = append(b, s[k:i]...)
													b = append(b, "\ufffd"...)
													k = len(s)
													if err == nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:492
				_go_fuzz_dep_.CoverTab[71411]++
														err = runeError(utf8.RuneError)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:493
				// _ = "end of CoverTab[71411]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:494
				_go_fuzz_dep_.CoverTab[71412]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:494
				// _ = "end of CoverTab[71412]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:494
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:494
			// _ = "end of CoverTab[71409]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:494
			_go_fuzz_dep_.CoverTab[71410]++
													break
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:495
			// _ = "end of CoverTab[71410]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:496
			_go_fuzz_dep_.CoverTab[71413]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:496
			// _ = "end of CoverTab[71413]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:496
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:496
		// _ = "end of CoverTab[71406]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:496
		_go_fuzz_dep_.CoverTab[71407]++
												combinedInfoBits |= info(v)
												bidi = bidi || func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:498
			_go_fuzz_dep_.CoverTab[71414]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:498
			return info(v).isBidi(s[i:])
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:498
			// _ = "end of CoverTab[71414]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:498
		}()
												start := i
												i += sz

												switch p.simplify(info(v).category()) {
		case valid:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:503
			_go_fuzz_dep_.CoverTab[71415]++
													continue
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:504
			// _ = "end of CoverTab[71415]"
		case disallowed:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:505
			_go_fuzz_dep_.CoverTab[71416]++
													if err == nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:506
				_go_fuzz_dep_.CoverTab[71422]++
														r, _ := utf8.DecodeRuneInString(s[start:])
														err = runeError(r)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:508
				// _ = "end of CoverTab[71422]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:509
				_go_fuzz_dep_.CoverTab[71423]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:509
				// _ = "end of CoverTab[71423]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:509
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:509
			// _ = "end of CoverTab[71416]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:509
			_go_fuzz_dep_.CoverTab[71417]++
													continue
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:510
			// _ = "end of CoverTab[71417]"
		case mapped, deviation:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:511
			_go_fuzz_dep_.CoverTab[71418]++
													b = append(b, s[k:start]...)
													b = info(v).appendMapping(b, s[start:i])
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:513
			// _ = "end of CoverTab[71418]"
		case ignored:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:514
			_go_fuzz_dep_.CoverTab[71419]++
													b = append(b, s[k:start]...)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:515
			// _ = "end of CoverTab[71419]"

		case unknown:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:517
			_go_fuzz_dep_.CoverTab[71420]++
													b = append(b, s[k:start]...)
													b = append(b, "\ufffd"...)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:519
			// _ = "end of CoverTab[71420]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:519
		default:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:519
			_go_fuzz_dep_.CoverTab[71421]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:519
			// _ = "end of CoverTab[71421]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:520
		// _ = "end of CoverTab[71407]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:520
		_go_fuzz_dep_.CoverTab[71408]++
												k = i
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:521
		// _ = "end of CoverTab[71408]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:522
	// _ = "end of CoverTab[71403]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:522
	_go_fuzz_dep_.CoverTab[71404]++
											if k == 0 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:523
		_go_fuzz_dep_.CoverTab[71424]++

												if combinedInfoBits&mayNeedNorm != 0 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:525
			_go_fuzz_dep_.CoverTab[71425]++
													s = norm.NFC.String(s)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:526
			// _ = "end of CoverTab[71425]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:527
			_go_fuzz_dep_.CoverTab[71426]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:527
			// _ = "end of CoverTab[71426]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:527
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:527
		// _ = "end of CoverTab[71424]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:528
		_go_fuzz_dep_.CoverTab[71427]++
												b = append(b, s[k:]...)
												if norm.NFC.QuickSpan(b) != len(b) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:530
			_go_fuzz_dep_.CoverTab[71429]++
													b = norm.NFC.Bytes(b)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:531
			// _ = "end of CoverTab[71429]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:532
			_go_fuzz_dep_.CoverTab[71430]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:532
			// _ = "end of CoverTab[71430]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:532
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:532
		// _ = "end of CoverTab[71427]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:532
		_go_fuzz_dep_.CoverTab[71428]++

												s = string(b)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:534
		// _ = "end of CoverTab[71428]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:535
	// _ = "end of CoverTab[71404]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:535
	_go_fuzz_dep_.CoverTab[71405]++
											return s, bidi, err
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:536
	// _ = "end of CoverTab[71405]"
}

// A labelIter allows iterating over domain name labels.
type labelIter struct {
	orig		string
	slice		[]string
	curStart	int
	curEnd		int
	i		int
}

func (l *labelIter) reset() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:548
	_go_fuzz_dep_.CoverTab[71431]++
											l.curStart = 0
											l.curEnd = 0
											l.i = 0
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:551
	// _ = "end of CoverTab[71431]"
}

func (l *labelIter) done() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:554
	_go_fuzz_dep_.CoverTab[71432]++
											return l.curStart >= len(l.orig)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:555
	// _ = "end of CoverTab[71432]"
}

func (l *labelIter) result() string {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:558
	_go_fuzz_dep_.CoverTab[71433]++
											if l.slice != nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:559
		_go_fuzz_dep_.CoverTab[71435]++
												return strings.Join(l.slice, ".")
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:560
		// _ = "end of CoverTab[71435]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:561
		_go_fuzz_dep_.CoverTab[71436]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:561
		// _ = "end of CoverTab[71436]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:561
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:561
	// _ = "end of CoverTab[71433]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:561
	_go_fuzz_dep_.CoverTab[71434]++
											return l.orig
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:562
	// _ = "end of CoverTab[71434]"
}

func (l *labelIter) label() string {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:565
	_go_fuzz_dep_.CoverTab[71437]++
											if l.slice != nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:566
		_go_fuzz_dep_.CoverTab[71440]++
												return l.slice[l.i]
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:567
		// _ = "end of CoverTab[71440]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:568
		_go_fuzz_dep_.CoverTab[71441]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:568
		// _ = "end of CoverTab[71441]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:568
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:568
	// _ = "end of CoverTab[71437]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:568
	_go_fuzz_dep_.CoverTab[71438]++
											p := strings.IndexByte(l.orig[l.curStart:], '.')
											l.curEnd = l.curStart + p
											if p == -1 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:571
		_go_fuzz_dep_.CoverTab[71442]++
												l.curEnd = len(l.orig)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:572
		// _ = "end of CoverTab[71442]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:573
		_go_fuzz_dep_.CoverTab[71443]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:573
		// _ = "end of CoverTab[71443]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:573
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:573
	// _ = "end of CoverTab[71438]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:573
	_go_fuzz_dep_.CoverTab[71439]++
											return l.orig[l.curStart:l.curEnd]
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:574
	// _ = "end of CoverTab[71439]"
}

// next sets the value to the next label. It skips the last label if it is empty.
func (l *labelIter) next() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:578
	_go_fuzz_dep_.CoverTab[71444]++
											l.i++
											if l.slice != nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:580
		_go_fuzz_dep_.CoverTab[71445]++
												if l.i >= len(l.slice) || func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:581
			_go_fuzz_dep_.CoverTab[71446]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:581
			return l.i == len(l.slice)-1 && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:581
				_go_fuzz_dep_.CoverTab[71447]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:581
				return l.slice[l.i] == ""
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:581
				// _ = "end of CoverTab[71447]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:581
			}()
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:581
			// _ = "end of CoverTab[71446]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:581
		}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:581
			_go_fuzz_dep_.CoverTab[71448]++
													l.curStart = len(l.orig)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:582
			// _ = "end of CoverTab[71448]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:583
			_go_fuzz_dep_.CoverTab[71449]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:583
			// _ = "end of CoverTab[71449]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:583
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:583
		// _ = "end of CoverTab[71445]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:584
		_go_fuzz_dep_.CoverTab[71450]++
												l.curStart = l.curEnd + 1
												if l.curStart == len(l.orig)-1 && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:586
			_go_fuzz_dep_.CoverTab[71451]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:586
			return l.orig[l.curStart] == '.'
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:586
			// _ = "end of CoverTab[71451]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:586
		}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:586
			_go_fuzz_dep_.CoverTab[71452]++
													l.curStart = len(l.orig)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:587
			// _ = "end of CoverTab[71452]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:588
			_go_fuzz_dep_.CoverTab[71453]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:588
			// _ = "end of CoverTab[71453]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:588
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:588
		// _ = "end of CoverTab[71450]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:589
	// _ = "end of CoverTab[71444]"
}

func (l *labelIter) set(s string) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:592
	_go_fuzz_dep_.CoverTab[71454]++
											if l.slice == nil {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:593
		_go_fuzz_dep_.CoverTab[71456]++
												l.slice = strings.Split(l.orig, ".")
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:594
		// _ = "end of CoverTab[71456]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:595
		_go_fuzz_dep_.CoverTab[71457]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:595
		// _ = "end of CoverTab[71457]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:595
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:595
	// _ = "end of CoverTab[71454]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:595
	_go_fuzz_dep_.CoverTab[71455]++
											l.slice[l.i] = s
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:596
	// _ = "end of CoverTab[71455]"
}

// acePrefix is the ASCII Compatible Encoding prefix.
const acePrefix = "xn--"

func (p *Profile) simplify(cat category) category {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:602
	_go_fuzz_dep_.CoverTab[71458]++
											switch cat {
	case disallowedSTD3Mapped:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:604
		_go_fuzz_dep_.CoverTab[71460]++
												if p.useSTD3Rules {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:605
			_go_fuzz_dep_.CoverTab[71465]++
													cat = disallowed
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:606
			// _ = "end of CoverTab[71465]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:607
			_go_fuzz_dep_.CoverTab[71466]++
													cat = mapped
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:608
			// _ = "end of CoverTab[71466]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:609
		// _ = "end of CoverTab[71460]"
	case disallowedSTD3Valid:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:610
		_go_fuzz_dep_.CoverTab[71461]++
												if p.useSTD3Rules {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:611
			_go_fuzz_dep_.CoverTab[71467]++
													cat = disallowed
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:612
			// _ = "end of CoverTab[71467]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:613
			_go_fuzz_dep_.CoverTab[71468]++
													cat = valid
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:614
			// _ = "end of CoverTab[71468]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:615
		// _ = "end of CoverTab[71461]"
	case deviation:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:616
		_go_fuzz_dep_.CoverTab[71462]++
												if !p.transitional {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:617
			_go_fuzz_dep_.CoverTab[71469]++
													cat = valid
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:618
			// _ = "end of CoverTab[71469]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:619
			_go_fuzz_dep_.CoverTab[71470]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:619
			// _ = "end of CoverTab[71470]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:619
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:619
		// _ = "end of CoverTab[71462]"
	case validNV8, validXV8:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:620
		_go_fuzz_dep_.CoverTab[71463]++

												cat = valid
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:622
		// _ = "end of CoverTab[71463]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:622
	default:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:622
		_go_fuzz_dep_.CoverTab[71464]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:622
		// _ = "end of CoverTab[71464]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:623
	// _ = "end of CoverTab[71458]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:623
	_go_fuzz_dep_.CoverTab[71459]++
											return cat
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:624
	// _ = "end of CoverTab[71459]"
}

func validateFromPunycode(p *Profile, s string) error {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:627
	_go_fuzz_dep_.CoverTab[71471]++
											if !norm.NFC.IsNormalString(s) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:628
		_go_fuzz_dep_.CoverTab[71474]++
												return &labelError{s, "V1"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:629
		// _ = "end of CoverTab[71474]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:630
		_go_fuzz_dep_.CoverTab[71475]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:630
		// _ = "end of CoverTab[71475]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:630
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:630
	// _ = "end of CoverTab[71471]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:630
	_go_fuzz_dep_.CoverTab[71472]++

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:633
	for i := 0; i < len(s); {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:633
		_go_fuzz_dep_.CoverTab[71476]++
												v, sz := trie.lookupString(s[i:])
												if sz == 0 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:635
			_go_fuzz_dep_.CoverTab[71479]++
													return runeError(utf8.RuneError)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:636
			// _ = "end of CoverTab[71479]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:637
			_go_fuzz_dep_.CoverTab[71480]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:637
			// _ = "end of CoverTab[71480]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:637
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:637
		// _ = "end of CoverTab[71476]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:637
		_go_fuzz_dep_.CoverTab[71477]++
												if c := p.simplify(info(v).category()); c != valid && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:638
			_go_fuzz_dep_.CoverTab[71481]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:638
			return c != deviation
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:638
			// _ = "end of CoverTab[71481]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:638
		}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:638
			_go_fuzz_dep_.CoverTab[71482]++
													return &labelError{s, "V6"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:639
			// _ = "end of CoverTab[71482]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:640
			_go_fuzz_dep_.CoverTab[71483]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:640
			// _ = "end of CoverTab[71483]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:640
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:640
		// _ = "end of CoverTab[71477]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:640
		_go_fuzz_dep_.CoverTab[71478]++
												i += sz
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:641
		// _ = "end of CoverTab[71478]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:642
	// _ = "end of CoverTab[71472]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:642
	_go_fuzz_dep_.CoverTab[71473]++
											return nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:643
	// _ = "end of CoverTab[71473]"
}

const (
	zwnj	= "\u200c"
	zwj	= "\u200d"
)

type joinState int8

const (
	stateStart	joinState	= iota
	stateVirama
	stateBefore
	stateBeforeVirama
	stateAfter
	stateFAIL
)

var joinStates = [][numJoinTypes]joinState{
	stateStart: {
		joiningL:	stateBefore,
		joiningD:	stateBefore,
		joinZWNJ:	stateFAIL,
		joinZWJ:	stateFAIL,
		joinVirama:	stateVirama,
	},
	stateVirama: {
		joiningL:	stateBefore,
		joiningD:	stateBefore,
	},
	stateBefore: {
		joiningL:	stateBefore,
		joiningD:	stateBefore,
		joiningT:	stateBefore,
		joinZWNJ:	stateAfter,
		joinZWJ:	stateFAIL,
		joinVirama:	stateBeforeVirama,
	},
	stateBeforeVirama: {
		joiningL:	stateBefore,
		joiningD:	stateBefore,
		joiningT:	stateBefore,
	},
	stateAfter: {
		joiningL:	stateFAIL,
		joiningD:	stateBefore,
		joiningT:	stateAfter,
		joiningR:	stateStart,
		joinZWNJ:	stateFAIL,
		joinZWJ:	stateFAIL,
		joinVirama:	stateAfter,
	},
	stateFAIL: {
		0:		stateFAIL,
		joiningL:	stateFAIL,
		joiningD:	stateFAIL,
		joiningT:	stateFAIL,
		joiningR:	stateFAIL,
		joinZWNJ:	stateFAIL,
		joinZWJ:	stateFAIL,
		joinVirama:	stateFAIL,
	},
}

// validateLabel validates the criteria from Section 4.1. Item 1, 4, and 6 are
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:708
// already implicitly satisfied by the overall implementation.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:710
func (p *Profile) validateLabel(s string) (err error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:710
	_go_fuzz_dep_.CoverTab[71484]++
											if s == "" {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:711
		_go_fuzz_dep_.CoverTab[71492]++
												if p.verifyDNSLength {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:712
			_go_fuzz_dep_.CoverTab[71494]++
													return &labelError{s, "A4"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:713
			// _ = "end of CoverTab[71494]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:714
			_go_fuzz_dep_.CoverTab[71495]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:714
			// _ = "end of CoverTab[71495]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:714
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:714
		// _ = "end of CoverTab[71492]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:714
		_go_fuzz_dep_.CoverTab[71493]++
												return nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:715
		// _ = "end of CoverTab[71493]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:716
		_go_fuzz_dep_.CoverTab[71496]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:716
		// _ = "end of CoverTab[71496]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:716
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:716
	// _ = "end of CoverTab[71484]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:716
	_go_fuzz_dep_.CoverTab[71485]++
											if p.checkHyphens {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:717
		_go_fuzz_dep_.CoverTab[71497]++
												if len(s) > 4 && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:718
			_go_fuzz_dep_.CoverTab[71499]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:718
			return s[2] == '-'
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:718
			// _ = "end of CoverTab[71499]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:718
		}() && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:718
			_go_fuzz_dep_.CoverTab[71500]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:718
			return s[3] == '-'
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:718
			// _ = "end of CoverTab[71500]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:718
		}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:718
			_go_fuzz_dep_.CoverTab[71501]++
													return &labelError{s, "V2"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:719
			// _ = "end of CoverTab[71501]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:720
			_go_fuzz_dep_.CoverTab[71502]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:720
			// _ = "end of CoverTab[71502]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:720
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:720
		// _ = "end of CoverTab[71497]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:720
		_go_fuzz_dep_.CoverTab[71498]++
												if s[0] == '-' || func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:721
			_go_fuzz_dep_.CoverTab[71503]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:721
			return s[len(s)-1] == '-'
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:721
			// _ = "end of CoverTab[71503]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:721
		}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:721
			_go_fuzz_dep_.CoverTab[71504]++
													return &labelError{s, "V3"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:722
			// _ = "end of CoverTab[71504]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:723
			_go_fuzz_dep_.CoverTab[71505]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:723
			// _ = "end of CoverTab[71505]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:723
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:723
		// _ = "end of CoverTab[71498]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:724
		_go_fuzz_dep_.CoverTab[71506]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:724
		// _ = "end of CoverTab[71506]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:724
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:724
	// _ = "end of CoverTab[71485]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:724
	_go_fuzz_dep_.CoverTab[71486]++
											if !p.checkJoiners {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:725
		_go_fuzz_dep_.CoverTab[71507]++
												return nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:726
		// _ = "end of CoverTab[71507]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:727
		_go_fuzz_dep_.CoverTab[71508]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:727
		// _ = "end of CoverTab[71508]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:727
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:727
	// _ = "end of CoverTab[71486]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:727
	_go_fuzz_dep_.CoverTab[71487]++
											trie := p.trie

											v, sz := trie.lookupString(s)
											x := info(v)
											if x.isModifier() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:732
		_go_fuzz_dep_.CoverTab[71509]++
												return &labelError{s, "V5"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:733
		// _ = "end of CoverTab[71509]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:734
		_go_fuzz_dep_.CoverTab[71510]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:734
		// _ = "end of CoverTab[71510]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:734
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:734
	// _ = "end of CoverTab[71487]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:734
	_go_fuzz_dep_.CoverTab[71488]++

											if strings.Index(s, zwj) == -1 && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:736
		_go_fuzz_dep_.CoverTab[71511]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:736
		return strings.Index(s, zwnj) == -1
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:736
		// _ = "end of CoverTab[71511]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:736
	}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:736
		_go_fuzz_dep_.CoverTab[71512]++
												return nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:737
		// _ = "end of CoverTab[71512]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:738
		_go_fuzz_dep_.CoverTab[71513]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:738
		// _ = "end of CoverTab[71513]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:738
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:738
	// _ = "end of CoverTab[71488]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:738
	_go_fuzz_dep_.CoverTab[71489]++
											st := stateStart
											for i := 0; ; {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:740
		_go_fuzz_dep_.CoverTab[71514]++
												jt := x.joinType()
												if s[i:i+sz] == zwj {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:742
			_go_fuzz_dep_.CoverTab[71518]++
													jt = joinZWJ
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:743
			// _ = "end of CoverTab[71518]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:744
			_go_fuzz_dep_.CoverTab[71519]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:744
			if s[i:i+sz] == zwnj {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:744
				_go_fuzz_dep_.CoverTab[71520]++
														jt = joinZWNJ
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:745
				// _ = "end of CoverTab[71520]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:746
				_go_fuzz_dep_.CoverTab[71521]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:746
				// _ = "end of CoverTab[71521]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:746
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:746
			// _ = "end of CoverTab[71519]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:746
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:746
		// _ = "end of CoverTab[71514]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:746
		_go_fuzz_dep_.CoverTab[71515]++
												st = joinStates[st][jt]
												if x.isViramaModifier() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:748
			_go_fuzz_dep_.CoverTab[71522]++
													st = joinStates[st][joinVirama]
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:749
			// _ = "end of CoverTab[71522]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:750
			_go_fuzz_dep_.CoverTab[71523]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:750
			// _ = "end of CoverTab[71523]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:750
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:750
		// _ = "end of CoverTab[71515]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:750
		_go_fuzz_dep_.CoverTab[71516]++
												if i += sz; i == len(s) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:751
			_go_fuzz_dep_.CoverTab[71524]++
													break
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:752
			// _ = "end of CoverTab[71524]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:753
			_go_fuzz_dep_.CoverTab[71525]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:753
			// _ = "end of CoverTab[71525]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:753
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:753
		// _ = "end of CoverTab[71516]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:753
		_go_fuzz_dep_.CoverTab[71517]++
												v, sz = trie.lookupString(s[i:])
												x = info(v)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:755
		// _ = "end of CoverTab[71517]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:756
	// _ = "end of CoverTab[71489]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:756
	_go_fuzz_dep_.CoverTab[71490]++
											if st == stateFAIL || func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:757
		_go_fuzz_dep_.CoverTab[71526]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:757
		return st == stateAfter
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:757
		// _ = "end of CoverTab[71526]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:757
	}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:757
		_go_fuzz_dep_.CoverTab[71527]++
												return &labelError{s, "C"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:758
		// _ = "end of CoverTab[71527]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:759
		_go_fuzz_dep_.CoverTab[71528]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:759
		// _ = "end of CoverTab[71528]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:759
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:759
	// _ = "end of CoverTab[71490]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:759
	_go_fuzz_dep_.CoverTab[71491]++
											return nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:760
	// _ = "end of CoverTab[71491]"
}

func ascii(s string) bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:763
	_go_fuzz_dep_.CoverTab[71529]++
											for i := 0; i < len(s); i++ {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:764
		_go_fuzz_dep_.CoverTab[71531]++
												if s[i] >= utf8.RuneSelf {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:765
			_go_fuzz_dep_.CoverTab[71532]++
													return false
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:766
			// _ = "end of CoverTab[71532]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:767
			_go_fuzz_dep_.CoverTab[71533]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:767
			// _ = "end of CoverTab[71533]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:767
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:767
		// _ = "end of CoverTab[71531]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:768
	// _ = "end of CoverTab[71529]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:768
	_go_fuzz_dep_.CoverTab[71530]++
											return true
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:769
	// _ = "end of CoverTab[71530]"
}

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:770
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/idna10.0.0.go:770
var _ = _go_fuzz_dep_.CoverTab
