// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

// Copyright 2016 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:7
package idna

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:7
import (
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:7
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:7
)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:7
import (
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:7
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:7
)

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:11
import (
	"math"
	"strings"
	"unicode/utf8"
)

// These parameter values are specified in section 5.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:17
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:17
// All computation is done with int32s, so that overflow behavior is identical
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:17
// regardless of whether int is 32-bit or 64-bit.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:21
const (
	base		int32	= 36
	damp		int32	= 700
	initialBias	int32	= 72
	initialN	int32	= 128
	skew		int32	= 38
	tmax		int32	= 26
	tmin		int32	= 1
)

func punyError(s string) error {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:31
	_go_fuzz_dep_.CoverTab[71534]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:31
	return &labelError{s, "A3"}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:31
	// _ = "end of CoverTab[71534]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:31
}

// decode decodes a string as specified in section 6.2.
func decode(encoded string) (string, error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:34
	_go_fuzz_dep_.CoverTab[71535]++
										if encoded == "" {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:35
		_go_fuzz_dep_.CoverTab[71541]++
											return "", nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:36
		// _ = "end of CoverTab[71541]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:37
		_go_fuzz_dep_.CoverTab[71542]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:37
		// _ = "end of CoverTab[71542]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:37
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:37
	// _ = "end of CoverTab[71535]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:37
	_go_fuzz_dep_.CoverTab[71536]++
										pos := 1 + strings.LastIndex(encoded, "-")
										if pos == 1 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:39
		_go_fuzz_dep_.CoverTab[71543]++
											return "", punyError(encoded)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:40
		// _ = "end of CoverTab[71543]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:41
		_go_fuzz_dep_.CoverTab[71544]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:41
		// _ = "end of CoverTab[71544]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:41
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:41
	// _ = "end of CoverTab[71536]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:41
	_go_fuzz_dep_.CoverTab[71537]++
										if pos == len(encoded) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:42
		_go_fuzz_dep_.CoverTab[71545]++
											return encoded[:len(encoded)-1], nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:43
		// _ = "end of CoverTab[71545]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:44
		_go_fuzz_dep_.CoverTab[71546]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:44
		// _ = "end of CoverTab[71546]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:44
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:44
	// _ = "end of CoverTab[71537]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:44
	_go_fuzz_dep_.CoverTab[71538]++
										output := make([]rune, 0, len(encoded))
										if pos != 0 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:46
		_go_fuzz_dep_.CoverTab[71547]++
											for _, r := range encoded[:pos-1] {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:47
			_go_fuzz_dep_.CoverTab[71548]++
												output = append(output, r)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:48
			// _ = "end of CoverTab[71548]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:49
		// _ = "end of CoverTab[71547]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:50
		_go_fuzz_dep_.CoverTab[71549]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:50
		// _ = "end of CoverTab[71549]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:50
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:50
	// _ = "end of CoverTab[71538]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:50
	_go_fuzz_dep_.CoverTab[71539]++
										i, n, bias := int32(0), initialN, initialBias
										overflow := false
										for pos < len(encoded) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:53
		_go_fuzz_dep_.CoverTab[71550]++
											oldI, w := i, int32(1)
											for k := base; ; k += base {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:55
			_go_fuzz_dep_.CoverTab[71554]++
												if pos == len(encoded) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:56
				_go_fuzz_dep_.CoverTab[71560]++
													return "", punyError(encoded)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:57
				// _ = "end of CoverTab[71560]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:58
				_go_fuzz_dep_.CoverTab[71561]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:58
				// _ = "end of CoverTab[71561]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:58
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:58
			// _ = "end of CoverTab[71554]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:58
			_go_fuzz_dep_.CoverTab[71555]++
												digit, ok := decodeDigit(encoded[pos])
												if !ok {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:60
				_go_fuzz_dep_.CoverTab[71562]++
													return "", punyError(encoded)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:61
				// _ = "end of CoverTab[71562]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:62
				_go_fuzz_dep_.CoverTab[71563]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:62
				// _ = "end of CoverTab[71563]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:62
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:62
			// _ = "end of CoverTab[71555]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:62
			_go_fuzz_dep_.CoverTab[71556]++
												pos++
												i, overflow = madd(i, digit, w)
												if overflow {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:65
				_go_fuzz_dep_.CoverTab[71564]++
													return "", punyError(encoded)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:66
				// _ = "end of CoverTab[71564]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:67
				_go_fuzz_dep_.CoverTab[71565]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:67
				// _ = "end of CoverTab[71565]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:67
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:67
			// _ = "end of CoverTab[71556]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:67
			_go_fuzz_dep_.CoverTab[71557]++
												t := k - bias
												if k <= bias {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:69
				_go_fuzz_dep_.CoverTab[71566]++
													t = tmin
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:70
				// _ = "end of CoverTab[71566]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:71
				_go_fuzz_dep_.CoverTab[71567]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:71
				if k >= bias+tmax {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:71
					_go_fuzz_dep_.CoverTab[71568]++
														t = tmax
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:72
					// _ = "end of CoverTab[71568]"
				} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:73
					_go_fuzz_dep_.CoverTab[71569]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:73
					// _ = "end of CoverTab[71569]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:73
				}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:73
				// _ = "end of CoverTab[71567]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:73
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:73
			// _ = "end of CoverTab[71557]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:73
			_go_fuzz_dep_.CoverTab[71558]++
												if digit < t {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:74
				_go_fuzz_dep_.CoverTab[71570]++
													break
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:75
				// _ = "end of CoverTab[71570]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:76
				_go_fuzz_dep_.CoverTab[71571]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:76
				// _ = "end of CoverTab[71571]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:76
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:76
			// _ = "end of CoverTab[71558]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:76
			_go_fuzz_dep_.CoverTab[71559]++
												w, overflow = madd(0, w, base-t)
												if overflow {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:78
				_go_fuzz_dep_.CoverTab[71572]++
													return "", punyError(encoded)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:79
				// _ = "end of CoverTab[71572]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:80
				_go_fuzz_dep_.CoverTab[71573]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:80
				// _ = "end of CoverTab[71573]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:80
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:80
			// _ = "end of CoverTab[71559]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:81
		// _ = "end of CoverTab[71550]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:81
		_go_fuzz_dep_.CoverTab[71551]++
											if len(output) >= 1024 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:82
			_go_fuzz_dep_.CoverTab[71574]++
												return "", punyError(encoded)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:83
			// _ = "end of CoverTab[71574]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:84
			_go_fuzz_dep_.CoverTab[71575]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:84
			// _ = "end of CoverTab[71575]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:84
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:84
		// _ = "end of CoverTab[71551]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:84
		_go_fuzz_dep_.CoverTab[71552]++
											x := int32(len(output) + 1)
											bias = adapt(i-oldI, x, oldI == 0)
											n += i / x
											i %= x
											if n < 0 || func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:89
			_go_fuzz_dep_.CoverTab[71576]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:89
			return n > utf8.MaxRune
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:89
			// _ = "end of CoverTab[71576]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:89
		}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:89
			_go_fuzz_dep_.CoverTab[71577]++
												return "", punyError(encoded)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:90
			// _ = "end of CoverTab[71577]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:91
			_go_fuzz_dep_.CoverTab[71578]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:91
			// _ = "end of CoverTab[71578]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:91
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:91
		// _ = "end of CoverTab[71552]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:91
		_go_fuzz_dep_.CoverTab[71553]++
											output = append(output, 0)
											copy(output[i+1:], output[i:])
											output[i] = n
											i++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:95
		// _ = "end of CoverTab[71553]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:96
	// _ = "end of CoverTab[71539]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:96
	_go_fuzz_dep_.CoverTab[71540]++
										return string(output), nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:97
	// _ = "end of CoverTab[71540]"
}

// encode encodes a string as specified in section 6.3 and prepends prefix to
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:100
// the result.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:100
//
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:100
// The "while h < length(input)" line in the specification becomes "for
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:100
// remaining != 0" in the Go code, because len(s) in Go is in bytes, not runes.
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:105
func encode(prefix, s string) (string, error) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:105
	_go_fuzz_dep_.CoverTab[71579]++
											output := make([]byte, len(prefix), len(prefix)+1+2*len(s))
											copy(output, prefix)
											delta, n, bias := int32(0), initialN, initialBias
											b, remaining := int32(0), int32(0)
											for _, r := range s {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:110
		_go_fuzz_dep_.CoverTab[71583]++
												if r < 0x80 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:111
			_go_fuzz_dep_.CoverTab[71584]++
													b++
													output = append(output, byte(r))
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:113
			// _ = "end of CoverTab[71584]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:114
			_go_fuzz_dep_.CoverTab[71585]++
													remaining++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:115
			// _ = "end of CoverTab[71585]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:116
		// _ = "end of CoverTab[71583]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:117
	// _ = "end of CoverTab[71579]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:117
	_go_fuzz_dep_.CoverTab[71580]++
											h := b
											if b > 0 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:119
		_go_fuzz_dep_.CoverTab[71586]++
												output = append(output, '-')
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:120
		// _ = "end of CoverTab[71586]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:121
		_go_fuzz_dep_.CoverTab[71587]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:121
		// _ = "end of CoverTab[71587]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:121
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:121
	// _ = "end of CoverTab[71580]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:121
	_go_fuzz_dep_.CoverTab[71581]++
											overflow := false
											for remaining != 0 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:123
		_go_fuzz_dep_.CoverTab[71588]++
												m := int32(0x7fffffff)
												for _, r := range s {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:125
			_go_fuzz_dep_.CoverTab[71592]++
													if m > r && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:126
				_go_fuzz_dep_.CoverTab[71593]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:126
				return r >= n
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:126
				// _ = "end of CoverTab[71593]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:126
			}() {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:126
				_go_fuzz_dep_.CoverTab[71594]++
														m = r
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:127
				// _ = "end of CoverTab[71594]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:128
				_go_fuzz_dep_.CoverTab[71595]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:128
				// _ = "end of CoverTab[71595]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:128
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:128
			// _ = "end of CoverTab[71592]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:129
		// _ = "end of CoverTab[71588]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:129
		_go_fuzz_dep_.CoverTab[71589]++
												delta, overflow = madd(delta, m-n, h+1)
												if overflow {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:131
			_go_fuzz_dep_.CoverTab[71596]++
													return "", punyError(s)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:132
			// _ = "end of CoverTab[71596]"
		} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:133
			_go_fuzz_dep_.CoverTab[71597]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:133
			// _ = "end of CoverTab[71597]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:133
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:133
		// _ = "end of CoverTab[71589]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:133
		_go_fuzz_dep_.CoverTab[71590]++
												n = m
												for _, r := range s {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:135
			_go_fuzz_dep_.CoverTab[71598]++
													if r < n {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:136
				_go_fuzz_dep_.CoverTab[71602]++
														delta++
														if delta < 0 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:138
					_go_fuzz_dep_.CoverTab[71604]++
															return "", punyError(s)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:139
					// _ = "end of CoverTab[71604]"
				} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:140
					_go_fuzz_dep_.CoverTab[71605]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:140
					// _ = "end of CoverTab[71605]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:140
				}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:140
				// _ = "end of CoverTab[71602]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:140
				_go_fuzz_dep_.CoverTab[71603]++
														continue
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:141
				// _ = "end of CoverTab[71603]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:142
				_go_fuzz_dep_.CoverTab[71606]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:142
				// _ = "end of CoverTab[71606]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:142
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:142
			// _ = "end of CoverTab[71598]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:142
			_go_fuzz_dep_.CoverTab[71599]++
													if r > n {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:143
				_go_fuzz_dep_.CoverTab[71607]++
														continue
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:144
				// _ = "end of CoverTab[71607]"
			} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:145
				_go_fuzz_dep_.CoverTab[71608]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:145
				// _ = "end of CoverTab[71608]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:145
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:145
			// _ = "end of CoverTab[71599]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:145
			_go_fuzz_dep_.CoverTab[71600]++
													q := delta
													for k := base; ; k += base {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:147
				_go_fuzz_dep_.CoverTab[71609]++
														t := k - bias
														if k <= bias {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:149
					_go_fuzz_dep_.CoverTab[71612]++
															t = tmin
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:150
					// _ = "end of CoverTab[71612]"
				} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:151
					_go_fuzz_dep_.CoverTab[71613]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:151
					if k >= bias+tmax {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:151
						_go_fuzz_dep_.CoverTab[71614]++
																t = tmax
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:152
						// _ = "end of CoverTab[71614]"
					} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:153
						_go_fuzz_dep_.CoverTab[71615]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:153
						// _ = "end of CoverTab[71615]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:153
					}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:153
					// _ = "end of CoverTab[71613]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:153
				}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:153
				// _ = "end of CoverTab[71609]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:153
				_go_fuzz_dep_.CoverTab[71610]++
														if q < t {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:154
					_go_fuzz_dep_.CoverTab[71616]++
															break
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:155
					// _ = "end of CoverTab[71616]"
				} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:156
					_go_fuzz_dep_.CoverTab[71617]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:156
					// _ = "end of CoverTab[71617]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:156
				}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:156
				// _ = "end of CoverTab[71610]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:156
				_go_fuzz_dep_.CoverTab[71611]++
														output = append(output, encodeDigit(t+(q-t)%(base-t)))
														q = (q - t) / (base - t)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:158
				// _ = "end of CoverTab[71611]"
			}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:159
			// _ = "end of CoverTab[71600]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:159
			_go_fuzz_dep_.CoverTab[71601]++
													output = append(output, encodeDigit(q))
													bias = adapt(delta, h+1, h == b)
													delta = 0
													h++
													remaining--
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:164
			// _ = "end of CoverTab[71601]"
		}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:165
		// _ = "end of CoverTab[71590]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:165
		_go_fuzz_dep_.CoverTab[71591]++
												delta++
												n++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:167
		// _ = "end of CoverTab[71591]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:168
	// _ = "end of CoverTab[71581]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:168
	_go_fuzz_dep_.CoverTab[71582]++
											return string(output), nil
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:169
	// _ = "end of CoverTab[71582]"
}

// madd computes a + (b * c), detecting overflow.
func madd(a, b, c int32) (next int32, overflow bool) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:173
	_go_fuzz_dep_.CoverTab[71618]++
											p := int64(b) * int64(c)
											if p > math.MaxInt32-int64(a) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:175
		_go_fuzz_dep_.CoverTab[71620]++
												return 0, true
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:176
		// _ = "end of CoverTab[71620]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:177
		_go_fuzz_dep_.CoverTab[71621]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:177
		// _ = "end of CoverTab[71621]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:177
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:177
	// _ = "end of CoverTab[71618]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:177
	_go_fuzz_dep_.CoverTab[71619]++
											return a + int32(p), false
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:178
	// _ = "end of CoverTab[71619]"
}

func decodeDigit(x byte) (digit int32, ok bool) {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:181
	_go_fuzz_dep_.CoverTab[71622]++
											switch {
	case '0' <= x && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:183
		_go_fuzz_dep_.CoverTab[71628]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:183
		return x <= '9'
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:183
		// _ = "end of CoverTab[71628]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:183
	}():
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:183
		_go_fuzz_dep_.CoverTab[71624]++
												return int32(x - ('0' - 26)), true
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:184
		// _ = "end of CoverTab[71624]"
	case 'A' <= x && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:185
		_go_fuzz_dep_.CoverTab[71629]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:185
		return x <= 'Z'
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:185
		// _ = "end of CoverTab[71629]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:185
	}():
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:185
		_go_fuzz_dep_.CoverTab[71625]++
												return int32(x - 'A'), true
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:186
		// _ = "end of CoverTab[71625]"
	case 'a' <= x && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:187
		_go_fuzz_dep_.CoverTab[71630]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:187
		return x <= 'z'
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:187
		// _ = "end of CoverTab[71630]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:187
	}():
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:187
		_go_fuzz_dep_.CoverTab[71626]++
												return int32(x - 'a'), true
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:188
		// _ = "end of CoverTab[71626]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:188
	default:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:188
		_go_fuzz_dep_.CoverTab[71627]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:188
		// _ = "end of CoverTab[71627]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:189
	// _ = "end of CoverTab[71622]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:189
	_go_fuzz_dep_.CoverTab[71623]++
											return 0, false
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:190
	// _ = "end of CoverTab[71623]"
}

func encodeDigit(digit int32) byte {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:193
	_go_fuzz_dep_.CoverTab[71631]++
											switch {
	case 0 <= digit && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:195
		_go_fuzz_dep_.CoverTab[71636]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:195
		return digit < 26
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:195
		// _ = "end of CoverTab[71636]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:195
	}():
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:195
		_go_fuzz_dep_.CoverTab[71633]++
												return byte(digit + 'a')
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:196
		// _ = "end of CoverTab[71633]"
	case 26 <= digit && func() bool {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:197
		_go_fuzz_dep_.CoverTab[71637]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:197
		return digit < 36
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:197
		// _ = "end of CoverTab[71637]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:197
	}():
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:197
		_go_fuzz_dep_.CoverTab[71634]++
												return byte(digit + ('0' - 26))
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:198
		// _ = "end of CoverTab[71634]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:198
	default:
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:198
		_go_fuzz_dep_.CoverTab[71635]++
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:198
		// _ = "end of CoverTab[71635]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:199
	// _ = "end of CoverTab[71631]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:199
	_go_fuzz_dep_.CoverTab[71632]++
											panic("idna: internal error in punycode encoding")
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:200
	// _ = "end of CoverTab[71632]"
}

// adapt is the bias adaptation function specified in section 6.1.
func adapt(delta, numPoints int32, firstTime bool) int32 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:204
	_go_fuzz_dep_.CoverTab[71638]++
											if firstTime {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:205
		_go_fuzz_dep_.CoverTab[71641]++
												delta /= damp
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:206
		// _ = "end of CoverTab[71641]"
	} else {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:207
		_go_fuzz_dep_.CoverTab[71642]++
												delta /= 2
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:208
		// _ = "end of CoverTab[71642]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:209
	// _ = "end of CoverTab[71638]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:209
	_go_fuzz_dep_.CoverTab[71639]++
											delta += delta / numPoints
											k := int32(0)
											for delta > ((base-tmin)*tmax)/2 {
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:212
		_go_fuzz_dep_.CoverTab[71643]++
												delta /= base - tmin
												k += base
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:214
		// _ = "end of CoverTab[71643]"
	}
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:215
	// _ = "end of CoverTab[71639]"
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:215
	_go_fuzz_dep_.CoverTab[71640]++
											return k + (base-tmin+1)*delta/(delta+skew)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:216
	// _ = "end of CoverTab[71640]"
}

//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:217
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/golang.org/x/net@v0.10.0/idna/punycode.go:217
var _ = _go_fuzz_dep_.CoverTab
