// Copyright 2016 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Service exported by server reflection

// Warning: this entire file is deprecated. Use this instead:
// https://github.com/grpc/grpc-proto/blob/master/grpc/reflection/v1/reflection.proto

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.22.0
// grpc/reflection/v1alpha/reflection.proto is a deprecated file.

//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:25
package grpc_reflection_v1alpha

//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:25
import (
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:25
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:25
)
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:25
import (
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:25
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:25
)

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:34
// is compatible with the grpc package it is being compiled against.
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:34
// Requires gRPC-Go v1.32.0 or later.
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:37
const _ = grpc.SupportPackageIsVersion7

const (
	ServerReflection_ServerReflectionInfo_FullMethodName = "/grpc.reflection.v1alpha.ServerReflection/ServerReflectionInfo"
)

// ServerReflectionClient is the client API for ServerReflection service.
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:43
//
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:43
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:46
type ServerReflectionClient interface {
	// The reflection service is structured as a bidirectional stream, ensuring
	// all related requests go to a single server.
	ServerReflectionInfo(ctx context.Context, opts ...grpc.CallOption) (ServerReflection_ServerReflectionInfoClient, error)
}

type serverReflectionClient struct {
	cc grpc.ClientConnInterface
}

func NewServerReflectionClient(cc grpc.ClientConnInterface) ServerReflectionClient {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:56
	_go_fuzz_dep_.CoverTab[194084]++
																return &serverReflectionClient{cc}
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:57
	// _ = "end of CoverTab[194084]"
}

func (c *serverReflectionClient) ServerReflectionInfo(ctx context.Context, opts ...grpc.CallOption) (ServerReflection_ServerReflectionInfoClient, error) {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:60
	_go_fuzz_dep_.CoverTab[194085]++
																stream, err := c.cc.NewStream(ctx, &ServerReflection_ServiceDesc.Streams[0], ServerReflection_ServerReflectionInfo_FullMethodName, opts...)
																if err != nil {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:62
		_go_fuzz_dep_.CoverTab[194087]++
																	return nil, err
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:63
		// _ = "end of CoverTab[194087]"
	} else {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:64
		_go_fuzz_dep_.CoverTab[194088]++
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:64
		// _ = "end of CoverTab[194088]"
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:64
	}
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:64
	// _ = "end of CoverTab[194085]"
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:64
	_go_fuzz_dep_.CoverTab[194086]++
																x := &serverReflectionServerReflectionInfoClient{stream}
																return x, nil
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:66
	// _ = "end of CoverTab[194086]"
}

type ServerReflection_ServerReflectionInfoClient interface {
	Send(*ServerReflectionRequest) error
	Recv() (*ServerReflectionResponse, error)
	grpc.ClientStream
}

type serverReflectionServerReflectionInfoClient struct {
	grpc.ClientStream
}

func (x *serverReflectionServerReflectionInfoClient) Send(m *ServerReflectionRequest) error {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:79
	_go_fuzz_dep_.CoverTab[194089]++
																return x.ClientStream.SendMsg(m)
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:80
	// _ = "end of CoverTab[194089]"
}

func (x *serverReflectionServerReflectionInfoClient) Recv() (*ServerReflectionResponse, error) {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:83
	_go_fuzz_dep_.CoverTab[194090]++
																m := new(ServerReflectionResponse)
																if err := x.ClientStream.RecvMsg(m); err != nil {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:85
		_go_fuzz_dep_.CoverTab[194092]++
																	return nil, err
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:86
		// _ = "end of CoverTab[194092]"
	} else {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:87
		_go_fuzz_dep_.CoverTab[194093]++
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:87
		// _ = "end of CoverTab[194093]"
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:87
	}
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:87
	// _ = "end of CoverTab[194090]"
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:87
	_go_fuzz_dep_.CoverTab[194091]++
																return m, nil
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:88
	// _ = "end of CoverTab[194091]"
}

// ServerReflectionServer is the server API for ServerReflection service.
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:91
// All implementations should embed UnimplementedServerReflectionServer
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:91
// for forward compatibility
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:94
type ServerReflectionServer interface {
	// The reflection service is structured as a bidirectional stream, ensuring
	// all related requests go to a single server.
	ServerReflectionInfo(ServerReflection_ServerReflectionInfoServer) error
}

// UnimplementedServerReflectionServer should be embedded to have forward compatible implementations.
type UnimplementedServerReflectionServer struct {
}

func (UnimplementedServerReflectionServer) ServerReflectionInfo(ServerReflection_ServerReflectionInfoServer) error {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:104
	_go_fuzz_dep_.CoverTab[194094]++
																return status.Errorf(codes.Unimplemented, "method ServerReflectionInfo not implemented")
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:105
	// _ = "end of CoverTab[194094]"
}

// UnsafeServerReflectionServer may be embedded to opt out of forward compatibility for this service.
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:108
// Use of this interface is not recommended, as added methods to ServerReflectionServer will
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:108
// result in compilation errors.
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:111
type UnsafeServerReflectionServer interface {
	mustEmbedUnimplementedServerReflectionServer()
}

func RegisterServerReflectionServer(s grpc.ServiceRegistrar, srv ServerReflectionServer) {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:115
	_go_fuzz_dep_.CoverTab[194095]++
																s.RegisterService(&ServerReflection_ServiceDesc, srv)
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:116
	// _ = "end of CoverTab[194095]"
}

func _ServerReflection_ServerReflectionInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:119
	_go_fuzz_dep_.CoverTab[194096]++
																return srv.(ServerReflectionServer).ServerReflectionInfo(&serverReflectionServerReflectionInfoServer{stream})
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:120
	// _ = "end of CoverTab[194096]"
}

type ServerReflection_ServerReflectionInfoServer interface {
	Send(*ServerReflectionResponse) error
	Recv() (*ServerReflectionRequest, error)
	grpc.ServerStream
}

type serverReflectionServerReflectionInfoServer struct {
	grpc.ServerStream
}

func (x *serverReflectionServerReflectionInfoServer) Send(m *ServerReflectionResponse) error {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:133
	_go_fuzz_dep_.CoverTab[194097]++
																return x.ServerStream.SendMsg(m)
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:134
	// _ = "end of CoverTab[194097]"
}

func (x *serverReflectionServerReflectionInfoServer) Recv() (*ServerReflectionRequest, error) {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:137
	_go_fuzz_dep_.CoverTab[194098]++
																m := new(ServerReflectionRequest)
																if err := x.ServerStream.RecvMsg(m); err != nil {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:139
		_go_fuzz_dep_.CoverTab[194100]++
																	return nil, err
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:140
		// _ = "end of CoverTab[194100]"
	} else {
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:141
		_go_fuzz_dep_.CoverTab[194101]++
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:141
		// _ = "end of CoverTab[194101]"
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:141
	}
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:141
	// _ = "end of CoverTab[194098]"
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:141
	_go_fuzz_dep_.CoverTab[194099]++
																return m, nil
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:142
	// _ = "end of CoverTab[194099]"
}

// ServerReflection_ServiceDesc is the grpc.ServiceDesc for ServerReflection service.
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:145
// It's only intended for direct use with grpc.RegisterService,
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:145
// and not to be introspected or modified (even as a copy)
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:148
var ServerReflection_ServiceDesc = grpc.ServiceDesc{
	ServiceName:	"grpc.reflection.v1alpha.ServerReflection",
	HandlerType:	(*ServerReflectionServer)(nil),
	Methods:	[]grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:	"ServerReflectionInfo",
			Handler:	_ServerReflection_ServerReflectionInfo_Handler,
			ServerStreams:	true,
			ClientStreams:	true,
		},
	},
	Metadata:	"grpc/reflection/v1alpha/reflection.proto",
}
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:161
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/google.golang.org/grpc@v1.54.0/reflection/grpc_reflection_v1alpha/reflection_grpc.pb.go:161
var _ = _go_fuzz_dep_.CoverTab
