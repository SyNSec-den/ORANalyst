// @generated Code generated by gen-atomicwrapper.

// Copyright (c) 2020 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:23
package atomic

//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:23
import (
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:23
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:23
)
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:23
import (
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:23
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:23
)

// String is an atomic type-safe wrapper for string values.
type String struct {
	_	nocmp	// disallow non-atomic comparison

	v	Value
}

var _zeroString string

// NewString creates a new String.
func NewString(v string) *String {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:35
	_go_fuzz_dep_.CoverTab[130443]++
										x := &String{}
										if v != _zeroString {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:37
		_go_fuzz_dep_.CoverTab[130445]++
											x.Store(v)
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:38
		// _ = "end of CoverTab[130445]"
	} else {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:39
		_go_fuzz_dep_.CoverTab[130446]++
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:39
		// _ = "end of CoverTab[130446]"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:39
	}
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:39
	// _ = "end of CoverTab[130443]"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:39
	_go_fuzz_dep_.CoverTab[130444]++
										return x
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:40
	// _ = "end of CoverTab[130444]"
}

// Load atomically loads the wrapped string.
func (x *String) Load() string {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:44
	_go_fuzz_dep_.CoverTab[130447]++
										if v := x.v.Load(); v != nil {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:45
		_go_fuzz_dep_.CoverTab[130449]++
											return v.(string)
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:46
		// _ = "end of CoverTab[130449]"
	} else {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:47
		_go_fuzz_dep_.CoverTab[130450]++
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:47
		// _ = "end of CoverTab[130450]"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:47
	}
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:47
	// _ = "end of CoverTab[130447]"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:47
	_go_fuzz_dep_.CoverTab[130448]++
										return _zeroString
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:48
	// _ = "end of CoverTab[130448]"
}

// Store atomically stores the passed string.
func (x *String) Store(v string) {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:52
	_go_fuzz_dep_.CoverTab[130451]++
										x.v.Store(v)
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:53
	// _ = "end of CoverTab[130451]"
}

//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:54
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/string.go:54
var _ = _go_fuzz_dep_.CoverTab
