// @generated Code generated by gen-atomicwrapper.

// Copyright (c) 2020 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:23
package atomic

//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:23
import (
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:23
	_go_fuzz_dep_ "go-fuzz-dep"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:23
)
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:23
import (
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:23
	_atomic_ "sync/atomic"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:23
)

import (
	"encoding/json"
	"time"
)

// Duration is an atomic type-safe wrapper for time.Duration values.
type Duration struct {
	_	nocmp	// disallow non-atomic comparison

	v	Int64
}

var _zeroDuration time.Duration

// NewDuration creates a new Duration.
func NewDuration(v time.Duration) *Duration {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:40
	_go_fuzz_dep_.CoverTab[130368]++
										x := &Duration{}
										if v != _zeroDuration {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:42
		_go_fuzz_dep_.CoverTab[130370]++
											x.Store(v)
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:43
		// _ = "end of CoverTab[130370]"
	} else {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:44
		_go_fuzz_dep_.CoverTab[130371]++
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:44
		// _ = "end of CoverTab[130371]"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:44
	}
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:44
	// _ = "end of CoverTab[130368]"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:44
	_go_fuzz_dep_.CoverTab[130369]++
										return x
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:45
	// _ = "end of CoverTab[130369]"
}

// Load atomically loads the wrapped time.Duration.
func (x *Duration) Load() time.Duration {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:49
	_go_fuzz_dep_.CoverTab[130372]++
										return time.Duration(x.v.Load())
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:50
	// _ = "end of CoverTab[130372]"
}

// Store atomically stores the passed time.Duration.
func (x *Duration) Store(v time.Duration) {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:54
	_go_fuzz_dep_.CoverTab[130373]++
										x.v.Store(int64(v))
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:55
	// _ = "end of CoverTab[130373]"
}

// CAS is an atomic compare-and-swap for time.Duration values.
func (x *Duration) CAS(o, n time.Duration) bool {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:59
	_go_fuzz_dep_.CoverTab[130374]++
										return x.v.CAS(int64(o), int64(n))
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:60
	// _ = "end of CoverTab[130374]"
}

// Swap atomically stores the given time.Duration and returns the old
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:63
// value.
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:65
func (x *Duration) Swap(o time.Duration) time.Duration {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:65
	_go_fuzz_dep_.CoverTab[130375]++
										return time.Duration(x.v.Swap(int64(o)))
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:66
	// _ = "end of CoverTab[130375]"
}

// MarshalJSON encodes the wrapped time.Duration into JSON.
func (x *Duration) MarshalJSON() ([]byte, error) {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:70
	_go_fuzz_dep_.CoverTab[130376]++
										return json.Marshal(x.Load())
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:71
	// _ = "end of CoverTab[130376]"
}

// UnmarshalJSON decodes a time.Duration from JSON.
func (x *Duration) UnmarshalJSON(b []byte) error {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:75
	_go_fuzz_dep_.CoverTab[130377]++
										var v time.Duration
										if err := json.Unmarshal(b, &v); err != nil {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:77
		_go_fuzz_dep_.CoverTab[130379]++
											return err
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:78
		// _ = "end of CoverTab[130379]"
	} else {
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:79
		_go_fuzz_dep_.CoverTab[130380]++
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:79
		// _ = "end of CoverTab[130380]"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:79
	}
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:79
	// _ = "end of CoverTab[130377]"
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:79
	_go_fuzz_dep_.CoverTab[130378]++
										x.Store(v)
										return nil
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:81
	// _ = "end of CoverTab[130378]"
}

//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:82
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /home/tianchang/go/pkg/mod/go.uber.org/atomic@v1.7.0/duration.go:82
var _ = _go_fuzz_dep_.CoverTab
