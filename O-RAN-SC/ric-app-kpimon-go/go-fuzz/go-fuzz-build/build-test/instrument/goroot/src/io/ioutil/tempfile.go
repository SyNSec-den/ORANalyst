// Copyright 2010 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

//line /snap/go/10455/src/io/ioutil/tempfile.go:5
package ioutil

//line /snap/go/10455/src/io/ioutil/tempfile.go:5
import (
//line /snap/go/10455/src/io/ioutil/tempfile.go:5
	_go_fuzz_dep_ "go-fuzz-dep"
//line /snap/go/10455/src/io/ioutil/tempfile.go:5
)
//line /snap/go/10455/src/io/ioutil/tempfile.go:5
import (
//line /snap/go/10455/src/io/ioutil/tempfile.go:5
	_atomic_ "sync/atomic"
//line /snap/go/10455/src/io/ioutil/tempfile.go:5
)

import (
	"os"
)

// TempFile creates a new temporary file in the directory dir,
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// opens the file for reading and writing, and returns the resulting *os.File.
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// The filename is generated by taking pattern and adding a random
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// string to the end. If pattern includes a "*", the random string
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// replaces the last "*".
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// If dir is the empty string, TempFile uses the default directory
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// for temporary files (see os.TempDir).
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// Multiple programs calling TempFile simultaneously
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// will not choose the same file. The caller can use f.Name()
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// to find the pathname of the file. It is the caller's responsibility
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// to remove the file when no longer needed.
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
//
//line /snap/go/10455/src/io/ioutil/tempfile.go:11
// Deprecated: As of Go 1.17, this function simply calls [os.CreateTemp].
//line /snap/go/10455/src/io/ioutil/tempfile.go:24
func TempFile(dir, pattern string) (f *os.File, err error) {
//line /snap/go/10455/src/io/ioutil/tempfile.go:24
	_go_fuzz_dep_.CoverTab[2305]++
							return os.CreateTemp(dir, pattern)
//line /snap/go/10455/src/io/ioutil/tempfile.go:25
	// _ = "end of CoverTab[2305]"
}

// TempDir creates a new temporary directory in the directory dir.
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
// The directory name is generated by taking pattern and applying a
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
// random string to the end. If pattern includes a "*", the random string
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
// replaces the last "*". TempDir returns the name of the new directory.
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
// If dir is the empty string, TempDir uses the
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
// default directory for temporary files (see os.TempDir).
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
// Multiple programs calling TempDir simultaneously
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
// will not choose the same directory. It is the caller's responsibility
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
// to remove the directory when no longer needed.
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
//
//line /snap/go/10455/src/io/ioutil/tempfile.go:28
// Deprecated: As of Go 1.17, this function simply calls [os.MkdirTemp].
//line /snap/go/10455/src/io/ioutil/tempfile.go:39
func TempDir(dir, pattern string) (name string, err error) {
//line /snap/go/10455/src/io/ioutil/tempfile.go:39
	_go_fuzz_dep_.CoverTab[2306]++
							return os.MkdirTemp(dir, pattern)
//line /snap/go/10455/src/io/ioutil/tempfile.go:40
	// _ = "end of CoverTab[2306]"
}

//line /snap/go/10455/src/io/ioutil/tempfile.go:41
var _ = _atomic_.LoadUint32(&_go_fuzz_dep_.NoUse)
//line /snap/go/10455/src/io/ioutil/tempfile.go:41
var _ = _go_fuzz_dep_.CoverTab
