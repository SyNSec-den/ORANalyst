------------- processing path constraint -------------
------------- processing pkg -------------
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/restapi/operations/common
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/restapi
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/models
processing new pkg routing-manager/pkg/nbi
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/clientmodel
processing new pkg routing-manager/pkg/appmgr_client/xapp
processing new pkg routing-manager/pkg/restapi/operations/handle
processing new pkg routing-manager/pkg/appmgr_client/operations
processing new pkg routing-manager/pkg/nbi/restful
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/clientapi/common
processing new pkg gopkg.in/yaml.v2
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/clientapi
processing new pkg routing-manager/pkg/appmgr_model
processing new pkg routing-manager/pkg/restapi
processing new pkg routing-manager/pkg/appmgr_client/health
processing new pkg routing-manager/pkg/restapi/operations/debug
processing new pkg routing-manager/pkg/restapi/operations
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/restapi/operations/xapp
processing new pkg routing-manager/pkg/rpe
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/clientapi/xapp
processing new pkg routing-manager/pkg/models
processing new pkg routing-manager/pkg/sbi
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/restapi/operations
processing new pkg routing-manager/pkg/appmgr_client
processing new pkg gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/rnib
processing new pkg routing-manager/pkg/restapi/operations/health
processing new pkg routing-manager/pkg/rtmgr
processing new pkg routing-manager/pkg/sdl
Parsing functions of /home/tianchang/Desktop/proj/ric-plt-rtmgr/pkg
typeMap: map[*models.RanE2tElement:true *string:true models.RanE2tElement:true models.RanE2tMap:true models.RanNamelist:true string:true]
curBlock: AssociateRanToE2THandlerImpl 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
package name: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp, module name: routing-manager
t2 = validateE2TAddressRANListData(data)
package name: routing-manager/pkg/nbi, module name: routing-manager
curBlock: validateE2TAddressRANListData 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
curBlock: validateE2TAddressRANListData 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
curBlock: validateE2TAddressRANListData 3
return nil:error
curBlock: validateE2TAddressRANListData 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
curBlock: validateE2TAddressRANListData 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
package name: routing-manager/pkg/nbi, module name: routing-manager
if t20 goto 1 else 6
curBlock: validateE2TAddressRANListData 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
curBlock: validateE2TAddressRANListData 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
curBlock: validateE2TAddressRANListData 3
return nil:error
curBlock: validateE2TAddressRANListData 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
t3 = t2 != nil:error
if t3 goto 1 else 2
curBlock: AssociateRanToE2THandlerImpl 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
package name: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp, module name: routing-manager
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
package name: routing-manager/pkg/sdl, module name: routing-manager
curBlock: WriteAssRANToE2TInstance 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
package name: routing-manager/pkg/sdl, module name: routing-manager
t9 = (*File).ReadAll(t8, file)
package name: routing-manager/pkg/sdl, module name: routing-manager
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
curBlock: WriteAssRANToE2TInstance 2
t20 = len(rane2tmap)
jump 3
curBlock: WriteAssRANToE2TInstance 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
curBlock: WriteAssRANToE2TInstance 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
curBlock: WriteAssRANToE2TInstance 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
curBlock: WriteAssRANToE2TInstance 15
return nil:error
curBlock: WriteAssRANToE2TInstance 14
t89 = invoke t87.Error()
package name: routing-manager/pkg/appmgr_client/health, module name: routing-manager
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
curBlock: WriteAssRANToE2TInstance 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
curBlock: WriteAssRANToE2TInstance 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
package name: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp, module name: routing-manager
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
curBlock: WriteAssRANToE2TInstance 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
curBlock: WriteAssRANToE2TInstance 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
curBlock: WriteAssRANToE2TInstance 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
curBlock: WriteAssRANToE2TInstance 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
curBlock: WriteAssRANToE2TInstance 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
curBlock: WriteAssRANToE2TInstance 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
curBlock: WriteAssRANToE2TInstance 15
return nil:error
curBlock: WriteAssRANToE2TInstance 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
curBlock: WriteAssRANToE2TInstance 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
curBlock: WriteAssRANToE2TInstance 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
curBlock: WriteAssRANToE2TInstance 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
curBlock: WriteAssRANToE2TInstance 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
curBlock: WriteAssRANToE2TInstance 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
curBlock: WriteAssRANToE2TInstance 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
curBlock: WriteAssRANToE2TInstance 15
return nil:error
curBlock: WriteAssRANToE2TInstance 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
curBlock: WriteAssRANToE2TInstance 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
curBlock: WriteAssRANToE2TInstance 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
curBlock: WriteAssRANToE2TInstance 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
curBlock: WriteAssRANToE2TInstance 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
curBlock: WriteAssRANToE2TInstance 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
curBlock: WriteAssRANToE2TInstance 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
curBlock: WriteAssRANToE2TInstance 15
return nil:error
curBlock: WriteAssRANToE2TInstance 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
curBlock: WriteAssRANToE2TInstance 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
curBlock: WriteAssRANToE2TInstance 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
curBlock: WriteAssRANToE2TInstance 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
curBlock: WriteAssRANToE2TInstance 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
curBlock: WriteAssRANToE2TInstance 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
curBlock: WriteAssRANToE2TInstance 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
curBlock: WriteAssRANToE2TInstance 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
curBlock: WriteAssRANToE2TInstance 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
curBlock: WriteAssRANToE2TInstance 15
return nil:error
curBlock: WriteAssRANToE2TInstance 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
curBlock: WriteAssRANToE2TInstance 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
curBlock: WriteAssRANToE2TInstance 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
curBlock: WriteAssRANToE2TInstance 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
curBlock: WriteAssRANToE2TInstance 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
curBlock: WriteAssRANToE2TInstance 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
curBlock: WriteAssRANToE2TInstance 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
curBlock: WriteAssRANToE2TInstance 15
return nil:error
curBlock: WriteAssRANToE2TInstance 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
curBlock: WriteAssRANToE2TInstance 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
curBlock: WriteAssRANToE2TInstance 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
curBlock: WriteAssRANToE2TInstance 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
curBlock: WriteAssRANToE2TInstance 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
curBlock: WriteAssRANToE2TInstance 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
curBlock: WriteAssRANToE2TInstance 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
curBlock: WriteAssRANToE2TInstance 15
return nil:error
curBlock: WriteAssRANToE2TInstance 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
curBlock: WriteAssRANToE2TInstance 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
curBlock: WriteAssRANToE2TInstance 1
t13 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t14 = invoke t11.Error()
t15 = "Cannot get data f...":string + t14
t16 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Error(t13, t15, nil:[]interface{}...)
package name: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp, module name: routing-manager
t17 = invoke t11.Error()
t18 = "cannot read full ...":string + t17
t19 = errors.New(t18)
return t19
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
package name: routing-manager/pkg/nbi, module name: routing-manager
t16 = sendRoutesToAll()
return t16
curBlock: AssociateRanToE2THandlerImpl 1
t4 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t5 = invoke t2.Error()
t6 = " Association of R...":string + t5
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Warn(t4, t6, nil:[]interface{}...)
package name: gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp, module name: routing-manager
return t2
exploreFuncs: 12
Info: false
updateEp: false
GetString: false
validateE2TAddressRANListData: true
checkValidaE2TAddress: false
WriteAssRANToE2TInstance: true
NewFile: false
ReadAll: false
Error: false
Error: false
Debug: false
Warn: false
------------- paths -------------
instruction: &t11.E2TAddress [#0]
parsed instruction: t12 = &t11.E2TAddress [#0]
function: validateE2TAddressRANListData
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t12 **string false map[] 0xc01622d800 0xc04668b590 0xc02ea008d0 0xc01ff79280 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t11.E2TAddress [#0]
parsed instruction: t17 = &t11.E2TAddress [#0]
function: validateE2TAddressRANListData
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t17 **string false map[] 0xc016e7a800 0xc04668b590 0xc02ea01510 0xc01ff784c0 false false map[] map[] map[] map[] map[] <nil> <nil>}
tracked vars res: 
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)



t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t23 = make any <- string (t19)
*t22 = t23

------------------
instruction: &t11.E2TAddress [#0]
parsed instruction: t12 = &t11.E2TAddress [#0]
function: validateE2TAddressRANListData
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t12 **string false map[] 0xc01622d800 0xc04668b590 0xc02ea008d0 0xc01ff79280 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t11.E2TAddress [#0]
parsed instruction: t17 = &t11.E2TAddress [#0]
function: validateE2TAddressRANListData
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t17 **string false map[] 0xc016e7a800 0xc04668b590 0xc02ea01510 0xc01ff784c0 false false map[] map[] map[] map[] map[] <nil> <nil>}
tracked vars res: 
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)



t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18

------------------
instruction: &t11.E2TAddress [#0]
parsed instruction: t12 = &t11.E2TAddress [#0]
function: validateE2TAddressRANListData
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t12 **string false map[] 0xc01622d800 0xc04668b590 0xc02ea008d0 0xc01ff79280 false false map[] map[] map[] map[] map[] <nil> <nil>}
tracked vars res: 
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.E2Ts [#1]
parsed instruction: t69 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t72 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.RanNamelist [#1]
parsed instruction: t76 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t76 *routing-manager/pkg/models.RanNamelist false map[] 0xc02e305e00 0xc0463cc870 0xc02c443160 0xc00c07b440 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t68.Ranlist [#2]
parsed instruction: t80 = &t68.Ranlist [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.E2TInstance
instruction: &t10.E2Ts [#1]
parsed instruction: t81 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9



t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.E2Ts [#1]
parsed instruction: t69 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t72 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.RanNamelist [#1]
parsed instruction: t76 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t76 *routing-manager/pkg/models.RanNamelist false map[] 0xc02e305e00 0xc0463cc870 0xc02c443160 0xc00c07b440 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t68.Ranlist [#2]
parsed instruction: t80 = &t68.Ranlist [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.E2TInstance
instruction: &t10.E2Ts [#1]
parsed instruction: t81 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9



t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.E2Ts [#1]
parsed instruction: t69 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t72 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.RanNamelist [#1]
parsed instruction: t76 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t76 *routing-manager/pkg/models.RanNamelist false map[] 0xc02e305e00 0xc0463cc870 0xc02c443160 0xc00c07b440 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t68.Ranlist [#2]
parsed instruction: t80 = &t68.Ranlist [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.E2TInstance
instruction: &t10.E2Ts [#1]
parsed instruction: t81 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9



t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
t36 = phi [4: "":string, 7: t43] #meidar



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
t36 = phi [4: "":string, 7: t43] #meidar



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
t36 = phi [4: "":string, 7: t43] #meidar



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
t36 = phi [4: "":string, 7: t43] #meidar



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
t36 = phi [4: "":string, 7: t43] #meidar



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
t36 = phi [4: "":string, 7: t43] #meidar



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.E2Ts [#1]
parsed instruction: t69 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t72 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.RanNamelist [#1]
parsed instruction: t76 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t76 *routing-manager/pkg/models.RanNamelist false map[] 0xc02e305e00 0xc0463cc870 0xc02c443160 0xc00c07b440 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t68.Ranlist [#2]
parsed instruction: t80 = &t68.Ranlist [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.E2TInstance
instruction: &t10.E2Ts [#1]
parsed instruction: t81 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
t36 = phi [4: "":string, 7: t43] #meidar



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9



t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.E2Ts [#1]
parsed instruction: t69 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t72 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.RanNamelist [#1]
parsed instruction: t76 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t76 *routing-manager/pkg/models.RanNamelist false map[] 0xc02e305e00 0xc0463cc870 0xc02c443160 0xc00c07b440 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t68.Ranlist [#2]
parsed instruction: t80 = &t68.Ranlist [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.E2TInstance
instruction: &t10.E2Ts [#1]
parsed instruction: t81 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
t36 = phi [4: "":string, 7: t43] #meidar



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9



t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)

------------------
instruction: &t25.RanNamelist [#1]
parsed instruction: t28 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t28 *routing-manager/pkg/models.RanNamelist false map[] 0xc02dd61200 0xc0463cc870 0xc02c4ab0a0 0xc00c07a580 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t25.E2TAddress [#0]
parsed instruction: t44 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t44 **string false map[] 0xc02e296400 0xc0463cc870 0xc02c5367b0 0xc00c07b240 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.MeidMap [#2]
parsed instruction: t51 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.MeidMap [#2]
parsed instruction: t57 = &t10.MeidMap [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t58 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.E2TAddress [#0]
parsed instruction: t64 = &t25.E2TAddress [#0]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t64 **string false map[] 0xc02e04de00 0xc0463cc870 0xc02c4423d0 0xc00c06dd00 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t10.E2Ts [#1]
parsed instruction: t69 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t10.E2Ts [#1]
parsed instruction: t72 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
instruction: &t25.RanNamelist [#1]
parsed instruction: t76 = &t25.RanNamelist [#1]
function: WriteAssRANToE2TInstance
tracked field addr: *routing-manager/pkg/models.RanE2tElement
tracked instruction assigns to: {  t76 *routing-manager/pkg/models.RanNamelist false map[] 0xc02e305e00 0xc0463cc870 0xc02c443160 0xc00c07b440 false false map[] map[] map[] map[] map[] <nil> <nil>}
instruction: &t68.Ranlist [#2]
parsed instruction: t80 = &t68.Ranlist [#2]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.E2TInstance
instruction: &t10.E2Ts [#1]
parsed instruction: t81 = &t10.E2Ts [#1]
function: WriteAssRANToE2TInstance
untracked field addr: *routing-manager/pkg/rtmgr.RicComponents
tracked vars res: 
t28 = &t25.RanNamelist [#1]
t29 = *t28
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
t36 = phi [4: "":string, 7: t43] #meidar



t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t50 = t48 + t49
*t54 = t50



t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9



t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)

------------------
package name: routing-manager/pkg/nbi, module name: routing-manager
entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: if t12 goto 1 else 2
entering basic block WriteAssRANToE2TInstance: 1
t13 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t14 = invoke t11.Error()
t15 = "Cannot get data f...":string + t14
t16 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Error(t13, t15, nil:[]interface{}...)
t17 = invoke t11.Error()
t18 = "cannot read full ...":string + t17
t19 = errors.New(t18)
return t19
end of basic block WriteAssRANToE2TInstance: 1
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
if t15 goto 4 else 5
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: !(if t20 goto 1 else 6)
entering basic block validateE2TAddressRANListData: 6
t21 = new [1]any (varargs)
t22 = &t21[0:int]
t23 = make any <- string (t19)
*t22 = t23
t24 = slice t21[:]
t25 = fmt.Errorf("E2TAddress doesn'...":string, t24...)
return t25
end of basic block validateE2TAddressRANListData: 6
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: if t12 goto 1 else 2
entering basic block WriteAssRANToE2TInstance: 1
t13 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t14 = invoke t11.Error()
t15 = "Cannot get data f...":string + t14
t16 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Error(t13, t15, nil:[]interface{}...)
t17 = invoke t11.Error()
t18 = "cannot read full ...":string + t17
t19 = errors.New(t18)
return t19
end of basic block WriteAssRANToE2TInstance: 1
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: !(if t15 goto 4 else 5)
entering basic block validateE2TAddressRANListData: 5
t17 = &t11.E2TAddress [#0]
t18 = *t17
t19 = *t18
t20 = checkValidaE2TAddress(t19)
if t20 goto 1 else 6
end of basic block validateE2TAddressRANListData: 5
condition: if t20 goto 1 else 6
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: !(if t9 goto 2 else 3)
entering basic block validateE2TAddressRANListData: 3
return nil:error
end of basic block validateE2TAddressRANListData: 3
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: if t12 goto 1 else 2
entering basic block WriteAssRANToE2TInstance: 1
t13 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t14 = invoke t11.Error()
t15 = "Cannot get data f...":string + t14
t16 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Error(t13, t15, nil:[]interface{}...)
t17 = invoke t11.Error()
t18 = "cannot read full ...":string + t17
t19 = errors.New(t18)
return t19
end of basic block WriteAssRANToE2TInstance: 1
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: !(if t67 goto 11 else 9)
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
!(if t67 goto 11 else 9)
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: !(if t88 goto 14 else 15)
entering basic block WriteAssRANToE2TInstance: 15
return nil:error
end of basic block WriteAssRANToE2TInstance: 15
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: !(if t35 goto 12 else 13)
entering basic block WriteAssRANToE2TInstance: 13
t87 = io/ioutil.WriteFile(file, t33, 420:io/fs.FileMode)
t88 = t87 != nil:error
if t88 goto 14 else 15
end of basic block WriteAssRANToE2TInstance: 13
condition: if t88 goto 14 else 15
entering basic block WriteAssRANToE2TInstance: 14
t89 = invoke t87.Error()
t90 = "cannot write file...":string + t89
t91 = errors.New(t90)
return t91
end of basic block WriteAssRANToE2TInstance: 14
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: !(if t12 goto 1 else 2)
entering basic block WriteAssRANToE2TInstance: 2
t20 = len(rane2tmap)
jump 3
end of basic block WriteAssRANToE2TInstance: 2
condition: -
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: if t23 goto 4 else 5
entering basic block WriteAssRANToE2TInstance: 4
t24 = &rane2tmap[t22]
t25 = *t24
t26 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t27 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Info(t26, "Data received":string, nil:[]interface{}...)
t28 = &t25.RanNamelist [#1]
t29 = *t28
t30 = len(t29)
jump 6
end of basic block WriteAssRANToE2TInstance: 4
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: if t39 goto 7 else 8
entering basic block WriteAssRANToE2TInstance: 7
t40 = &t29[t38]
t41 = *t40
t42 = t41 + " ":string
t43 = t36 + t42
jump 6
end of basic block WriteAssRANToE2TInstance: 7
condition: -
entering basic block WriteAssRANToE2TInstance: 6
t36 = phi [4: "":string, 7: t43] #meidar
t37 = phi [4: -1:int, 7: t38]
t38 = t37 + 1:int
t39 = t38 < t30
if t39 goto 7 else 8
end of basic block WriteAssRANToE2TInstance: 6
condition: !(if t39 goto 7 else 8)
entering basic block WriteAssRANToE2TInstance: 8
t44 = &t25.E2TAddress [#0]
t45 = *t44
t46 = *t45
t47 = "mme_ar|":string + t46
t48 = t47 + "|":string
t49 = strings.TrimSuffix(t36, " ":string)
t50 = t48 + t49
t51 = &t10.MeidMap [#2]
t52 = *t51
t53 = new [1]string (varargs)
t54 = &t53[0:int]
*t54 = t50
t55 = slice t53[:]
t56 = append(t52, t55...)
t57 = &t10.MeidMap [#2]
*t57 = t56
t58 = &t10.E2Ts [#1]
t59 = *t58
t60 = range t59
jump 9
end of basic block WriteAssRANToE2TInstance: 8
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: if t62 goto 10 else 3
entering basic block WriteAssRANToE2TInstance: 10
t63 = extract t61 #1
t64 = &t25.E2TAddress [#0]
t65 = *t64
t66 = *t65
t67 = t63 == t66
if t67 goto 11 else 9
end of basic block WriteAssRANToE2TInstance: 10
condition: if t67 goto 11 else 9
entering basic block WriteAssRANToE2TInstance: 11
t68 = local routing-manager/pkg/rtmgr.E2TInstance (estObj)
t69 = &t10.E2Ts [#1]
t70 = *t69
t71 = t70[t63]
*t68 = t71
t72 = &t10.E2Ts [#1]
t73 = *t72
t74 = t73[t63]
t75 = t74.Ranlist [#2]
t76 = &t25.RanNamelist [#1]
t77 = *t76
t78 = changetype []string <- routing-manager/pkg/models.RanNamelist (t77)
t79 = append(t75, t78...)
t80 = &t68.Ranlist [#2]
*t80 = t79
t81 = &t10.E2Ts [#1]
t82 = *t81
t83 = *t68
t82[t63] = t83
jump 9
end of basic block WriteAssRANToE2TInstance: 11
condition: -
entering basic block WriteAssRANToE2TInstance: 9
t61 = next t60
t62 = extract t61 #0
if t62 goto 10 else 3
end of basic block WriteAssRANToE2TInstance: 9
condition: !(if t62 goto 10 else 3)
entering basic block WriteAssRANToE2TInstance: 3
t21 = phi [2: -1:int, 9: t22]
t22 = t21 + 1:int
t23 = t22 < t20
if t23 goto 4 else 5
end of basic block WriteAssRANToE2TInstance: 3
condition: !(if t23 goto 4 else 5)
entering basic block WriteAssRANToE2TInstance: 5
t31 = make any <- *routing-manager/pkg/rtmgr.RicComponents (t10)
t32 = encoding/json.Marshal(t31)
t33 = extract t32 #0
t34 = extract t32 #1
t35 = t34 != nil:error
if t35 goto 12 else 13
end of basic block WriteAssRANToE2TInstance: 5
condition: if t35 goto 12 else 13
entering basic block WriteAssRANToE2TInstance: 12
t84 = invoke t34.Error()
t85 = "cannot convert da...":string + t84
t86 = errors.New(t85)
return t86
end of basic block WriteAssRANToE2TInstance: 12
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2



entering basic block AssociateRanToE2THandlerImpl: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked associate...":string, nil:[]interface{}...)
t2 = validateE2TAddressRANListData(data)
entering basic block validateE2TAddressRANListData: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = new [1]interface{} (varargs)
t2 = &t1[0:int]
t3 = make interface{} <- routing-manager/pkg/models.RanE2tMap (assRanE2tData)
*t2 = t3
t4 = slice t1[:]
t5 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, "Invoked.validateE...":string, t4...)
t6 = len(assRanE2tData)
jump 1
end of basic block validateE2TAddressRANListData: 0
condition: -
entering basic block validateE2TAddressRANListData: 1
t7 = phi [0: -1:int, 5: t8]
t8 = t7 + 1:int
t9 = t8 < t6
if t9 goto 2 else 3
end of basic block validateE2TAddressRANListData: 1
condition: if t9 goto 2 else 3
entering basic block validateE2TAddressRANListData: 2
t10 = &assRanE2tData[t8]
t11 = *t10
t12 = &t11.E2TAddress [#0]
t13 = *t12
t14 = *t13
t15 = t14 == "":string
!(if t15 goto 4 else 5)
end of basic block validateE2TAddressRANListData: 2
condition: if t15 goto 4 else 5
entering basic block validateE2TAddressRANListData: 4
t16 = fmt.Errorf("E2T Instance - E2...":string, nil:[]any...)
return t16
end of basic block validateE2TAddressRANListData: 4
condition: -
t3 = t2 != nil:error
if t3 goto 1 else 2
end of basic block AssociateRanToE2THandlerImpl: 0
condition: !(if t3 goto 1 else 2)
entering basic block AssociateRanToE2THandlerImpl: 2
t8 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t9 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t8, "Received associat...":string, nil:[]interface{}...)
t10 = (*sync.Mutex).Lock(m)
t11 = *sdlEngine
t12 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Configurator).GetString(gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Config, "rtfile":string)
t13 = invoke t11.WriteAssRANToE2TInstance(t12, data)
entering basic block WriteAssRANToE2TInstance: 0
t0 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t1 = "Invoked sdl.Write...":string + file
t2 = t1 + ", file.WriteAssRA...":string
t3 = new [1]interface{} (varargs)
t4 = &t3[0:int]
t5 = make interface{} <- routing-manager/pkg/models.RanE2tMap (rane2tmap)
*t4 = t5
t6 = slice t3[:]
t7 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Debug(t0, t2, t6...)
t8 = NewFile()
t9 = (*File).ReadAll(t8, file)
t10 = extract t9 #0
t11 = extract t9 #1
t12 = t11 != nil:error
if t12 goto 1 else 2
end of basic block WriteAssRANToE2TInstance: 0
condition: if t12 goto 1 else 2
entering basic block WriteAssRANToE2TInstance: 1
t13 = *gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Logger
t14 = invoke t11.Error()
t15 = "Cannot get data f...":string + t14
t16 = (*gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/xapp.Log).Error(t13, t15, nil:[]interface{}...)
t17 = invoke t11.Error()
t18 = "cannot read full ...":string + t17
t19 = errors.New(t18)
return t19
end of basic block WriteAssRANToE2TInstance: 1
condition: -
t14 = (*sync.Mutex).Unlock(m)
t15 = updateEp()
t16 = sendRoutesToAll()
return t16
end of basic block AssociateRanToE2THandlerImpl: 2
